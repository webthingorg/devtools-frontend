{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "071916fd_c881db23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1341869
      },
      "writtenOn": "2020-12-04T00:16:00Z",
      "side": 1,
      "message": "Hey folks, can I get another review of this patch. I\u0027m particularly interested in feedback on the comment in Patchset 14. Thanks!",
      "revId": "8e2c2c01f7161eea40e2c30f4183052dc39db95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f395f927_6ca74d20",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 14
      },
      "lineNbr": 875,
      "author": {
        "id": 1341869
      },
      "writtenOn": "2020-12-04T00:16:00Z",
      "side": 1,
      "message": "There are a number of places in the product where we export object literals with properties that have localized strings [1]. To avoid this, I\u0027m proposing we follow this pattern instead. While I\u0027m not a fan of indirection caused by getters/setters, this approach requires little change to caller code.\n\nWhere possible, we\u0027d group related object literals in the same class. For example in ref [1], all the mobile conditions would be encapsulated in a single `MobileConditions` class.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/master:third_party/devtools-frontend/src/front_end/mobile_throttling/ThrottlingPresets.js;l\u003d18?q\u003dthrottlingpres\u0026ss\u003dchromium",
      "range": {
        "startLine": 875,
        "startChar": 0,
        "endLine": 875,
        "endChar": 29
      },
      "revId": "8e2c2c01f7161eea40e2c30f4183052dc39db95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3758efc4_4ee3a545",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 14
      },
      "lineNbr": 875,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-12-04T07:21:59Z",
      "side": 1,
      "message": "Here is another of example of how we tackled this issue with Kalon\u0027s proposed approach:\n2572862: [Loc] Migrate mobile throttling  setting panel to Localization V2 | https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2572862",
      "parentUuid": "f395f927_6ca74d20",
      "range": {
        "startLine": 875,
        "startChar": 0,
        "endLine": 875,
        "endChar": 29
      },
      "revId": "8e2c2c01f7161eea40e2c30f4183052dc39db95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4408c3b6_e697f8f2",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 14
      },
      "lineNbr": 875,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-12-04T08:15:37Z",
      "side": 1,
      "message": "This approach looks good to me to avoid module-time localization calls, but is it necessary here? I can\u0027t see any uses of this class outside this file, so it might not need to be exported at all?\n\nAlso a suggestion: at some point, can you document this pattern in the documentation folder? That would be awesome for future reference",
      "parentUuid": "3758efc4_4ee3a545",
      "range": {
        "startLine": 875,
        "startChar": 0,
        "endLine": 875,
        "endChar": 29
      },
      "revId": "8e2c2c01f7161eea40e2c30f4183052dc39db95d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}