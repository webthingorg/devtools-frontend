{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4b34a393_2326d31d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2024-03-14T09:15:37Z",
      "side": 1,
      "message": "Ergün, could you please take a look?:)\nWe can gladly discuss over VC too!",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0b2c9eb_c3de29b0",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-03-14T09:25:59Z",
      "side": 1,
      "message": "I\u0027m afraid this `\u003cstyle\u003e` approach might not work very well:\n* Especially since we don\u0027t have a shadow root here, the styles are not scoped and they can creep up to other components because of name collisions. This can cause unwanted breakages.\n* The approach for creating a css text from a stylesheet and then using it inside \u003cstyle\u003e tag feels hacky.\n\nWe\u0027ve been discussing whether to have a helper or a web component; among other reasons, because of this styling issue I\u0027d prefer to introduce a web component.\n\nWe were thinking to introduce LitElement components and we can go for that. WDYT?\n\nFor naming the component, we can say this is a `devtools-gm-button` :)",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3730cb_cd57d7a5",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-03-14T09:54:03Z",
      "side": 1,
      "message": "I share your concerns Ergün and my first instinct would be do the same, BUT:\nI\u0027d like to make it as hard as possible for people to build wrong UI, so `\u003cbutton\u003e` look material by default, is a great way to achieve that. This would make global style sheets a feature not, a bug. \n\nI wonder if we can avoid the helper all together, use ::before and ::after instead of `div.hover-layer` and `div.ripple-layer` and have styles in a global stylesheet?",
      "parentUuid": "f0b2c9eb_c3de29b0",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e8296bf_4df09e68",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2024-03-14T10:00:08Z",
      "side": 1,
      "message": "I like the idea of making the style global, but would still prefer to have a helper, since we also want to enforce that e.g. a button can only have 1 icon before the text and not multiple / after text etc.",
      "parentUuid": "cd3730cb_cd57d7a5",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e266d55c_f0d13733",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-03-14T10:03:53Z",
      "side": 1,
      "message": "How do you enforce that people use helpers?\nIf you are feeling strongly about enforcing 1 icon on the left, how about\n\n\n    button .icon:not(:first-element-child) {\n      display: none; \n    }",
      "parentUuid": "1e8296bf_4df09e68",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ecc7aa1_c805d12d",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2024-03-14T10:27:49Z",
      "side": 1,
      "message": "This makes sense!\nWe could add an eslint rule that complains about adding `\u003cbutton\u003e`s, wdyt?\n\nI feel like a helper would help avoid many questions when adding buttons, like \u0027does the text need to be in a span or div, or plainly in-between `\u003cbutton\u003e\u003c/button\u003e`?\u0027\u003chow exactly do I add an icon inside a button?\u003e etc.\nWe would need to enforce following a certain pattern here too, but not have the ease of use and convenience that a helper brings",
      "parentUuid": "e266d55c_f0d13733",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e95b8468_db84524e",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-03-14T10:32:42Z",
      "side": 1,
      "message": "I think having a broader discussion of putting styles to global would be good before committing to this strategy.\n\nI understand the aim of \"making it as hard as possible for people to build wrong UI\" and global styles helping with this. Though I think this approach will come with its downsides and regressions.\n\n* How are we going to make sure that the styles we edit here are not going to cause issues for other parts of the codebase? It\u0027ll be super hard to make sure that any change we make in global styles here won\u0027t cause any regressions in other parts of the app.\n\n* The direction of the effects might reverse as well: the styles of other components affecting the style of these helpers. I see that since we assumed encapsulation for styles in web components; we used generic class names like `wrapper` without any attempt to make them unique in global namespace. Without realizing this, we can use class names in these helpers that collide with those class names and we don\u0027t even realize unless we use them in those specific places.\n\nI\u0027d prefer having a more explicit way of ensuring UI consistency be it through cultural means like educating people that we\u0027re using GMButtons for all button needs or by enforcing rules like adding a lint rule for not using \"\u003cbutton\u003e\" and asking people to use \"GMButton\".",
      "parentUuid": "e266d55c_f0d13733",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d945cb_7b199d2c",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2024-03-14T10:41:52Z",
      "side": 1,
      "message": "Okay, I see this requires more discussion than expected. Let\u0027s shelve adding global styles/helpers/components for now and just update the css for existing button implementation(s) to make progress with Material update.",
      "parentUuid": "e95b8468_db84524e",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d40bc5e8_3e997d3b",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-03-14T11:58:52Z",
      "side": 1,
      "message": "I think Ergün has a point, making it work for button might be challenging in practice given that we will do a gradual migration. I\u0027d vote for a custom component, so that we can write `\u003cdevtools-gm-button\u003e` or event`\u003cdevtools-button\u003e` for now and maybe will be able to replace it with `\u003cbutton\u003e` later.",
      "parentUuid": "73d945cb_7b199d2c",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73f612d1_c9e4a298",
        "filename": "front_end/ui/ui-helpers/Button.ts",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-03-14T12:48:01Z",
      "side": 1,
      "message": "Instead of introducing helpers we can introduce components with LitElement and I think this shouldn\u0027t change the approach that much.\n\nWe can still keep the `createButton` helper even and make it return an HTMLElement instead of a Lit template.\n\nThough, your call on whether to update current button styles or creating a new component :)",
      "parentUuid": "d40bc5e8_3e997d3b",
      "revId": "615c9aed1eff2e2d9ecf0df8d5bb08215736f2bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}