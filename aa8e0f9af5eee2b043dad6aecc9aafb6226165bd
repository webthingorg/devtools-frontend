{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "663811ef_60dcacf3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-12-21T06:48:40Z",
      "side": 1,
      "message": "As requested on the bug, could you please give a failing example, and then add a test to ClientVariations_test.ts as part of this patch? I imagine it\u0027s when base64-decoding succeeds but proto-decoding fails, so e.g. `\u0027Z2liYmVyaXNo\u0027`?",
      "revId": "aa8e0f9af5eee2b043dad6aecc9aafb6226165bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b137b59f_365b5697",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1448638
      },
      "writtenOn": "2020-12-28T20:33:11Z",
      "side": 1,
      "message": "Hi Mathias,\n\nI started a new review https://chromium-review.googlesource.com/c/chromium/src/+/2605396 to update client_variations.js in chromium src. However I am having difficult time to generate the compiled file from uncompiled js file, upon running python script, I am getting the following error\n\n```\ncall D:\\Chrome\\depot_tools\\ninja.bat -C D:\\Chrome\\src\\out\\release_x64 components/variations/proto/devtools -j 240\nninja: Entering directory `D:\\Chrome\\src\\out\\release_x64\u0027\nninja: error: unknown target \u0027components/variations/proto/devtools\u0027\nTraceback (most recent call last):\n  File \"components\\variations\\proto\\devtools\\update_client_variations.py\", line 66, in \u003cmodule\u003e\n    main()\n  File \"components\\variations\\proto\\devtools\\update_client_variations.py\", line 55, in main\n    with open(script_file, \u0027r\u0027) as f:\nIOError: [Errno 2] No such file or directory: \u0027D:\\\\Chrome\\\\src\\\\out\\\\release_x64\\\\gen\\\\components\\\\variations\\\\proto\\\\devtools\\\\client_variations_gen.js\u0027\n```\n\nHow do I resolve this and once I check in the updated and generated client_variations file, how do I update devtools-frontend?\n\nThanks,\nChait.",
      "revId": "aa8e0f9af5eee2b043dad6aecc9aafb6226165bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1572e761_56aa54e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1448638
      },
      "writtenOn": "2020-12-29T22:32:26Z",
      "side": 1,
      "message": "Figured it out, looks like BUILD.gn in client variations is disabled for windows machines, enabled it and added Java in my machine.",
      "parentUuid": "b137b59f_365b5697",
      "revId": "aa8e0f9af5eee2b043dad6aecc9aafb6226165bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3001683_81943775",
        "filename": "front_end/network/RequestHeadersView.js",
        "patchSetId": 1
      },
      "lineNbr": 808,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-12-21T06:48:40Z",
      "side": 1,
      "message": "Instead of try-catching this whole block, WDYT about addressing this in parseClientVariations itself? We could make it return `null` for this error case, for example, and then break early from this in that case. (We already detect when base64-decoding fails, so I guess the example you had in mind is one where base64-decoding succeeds but proto-decoding fails?)\n https://source.chromium.org/chromium/chromium/src/+/master:components/variations/proto/devtools/client_variations_uncompiled.js;l\u003d35;drc\u003dc167a96509c1cd47923288d3656ccb5ff250ef9e",
      "revId": "aa8e0f9af5eee2b043dad6aecc9aafb6226165bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49baa0c7_6be12554",
        "filename": "front_end/network/RequestHeadersView.js",
        "patchSetId": 1
      },
      "lineNbr": 808,
      "author": {
        "id": 1448638
      },
      "writtenOn": "2020-12-22T00:43:41Z",
      "side": 1,
      "message": "Yes currently parseClientVariations throws an error if decoding works but proto-decoding fails. Since we are handling the decoding fail in parseClientVariations, it makes sense to handle the proto-deocing failing parseClientVariations as well. \n\nI will update this and also add a test case. I have added an example in the bug as a comment.",
      "parentUuid": "d3001683_81943775",
      "revId": "aa8e0f9af5eee2b043dad6aecc9aafb6226165bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}