{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc84d525_4a0cf719",
        "filename": "test/e2e/freestyler/freestyler_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1557932
      },
      "writtenOn": "2024-08-21T13:07:31Z",
      "side": 1,
      "message": "I don\u0027t understand this part why do we need to JSON.stringify it?",
      "revId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e026851c_b890b364",
        "filename": "test/e2e/freestyler/freestyler_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2024-08-21T13:09:48Z",
      "side": 1,
      "message": "why not? we need a JS literal string value",
      "parentUuid": "cc84d525_4a0cf719",
      "revId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "788428fb_47a619fe",
        "filename": "test/e2e/freestyler/freestyler_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1557932
      },
      "writtenOn": "2024-08-21T13:16:12Z",
      "side": 1,
      "message": "So you are using it to add the quotes I see.",
      "parentUuid": "e026851c_b890b364",
      "revId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb7bd15b_c6b5fa15",
        "filename": "test/e2e/freestyler/freestyler_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2024-08-21T13:19:10Z",
      "side": 1,
      "message": "(and other escaping)",
      "parentUuid": "788428fb_47a619fe",
      "revId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a DevTools committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-devtools-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-devtools-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-devtools-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f8dd4d83e531551e5cfb9be4583030a94158d6f0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}