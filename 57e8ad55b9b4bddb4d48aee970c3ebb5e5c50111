{
  "comments": [
    {
      "key": {
        "uuid": "b6dbeea2_67154dc8",
        "filename": "front_end/elements/ElementsTreeElement.js",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1390564
      },
      "writtenOn": "2020-05-28T16:29:39Z",
      "side": 1,
      "message": "Since the broken state is related to the tree element being unbound while we\u0027re editing, could we prevent ever even getting into this broken state by calling `dispose()` here (which cleans up editing state)? Then we wouldn\u0027t need to check for it later.",
      "revId": "57e8ad55b9b4bddb4d48aee970c3ebb5e5c50111",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94a274b7_4e31bf5a",
        "filename": "front_end/elements/ElementsTreeElement.js",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1341633
      },
      "writtenOn": "2020-05-28T17:13:37Z",
      "side": 1,
      "message": "This solution will work as well, but dispose is actually a function within _startEditingAsHTML, so it is not currently accessible here.  We could move the dispose function out as a ElementsTreeElement function, but I kind of like the organization of all HTML editing code inside _startEditingAsHTML.  Let me know what you think.",
      "parentUuid": "b6dbeea2_67154dc8",
      "revId": "57e8ad55b9b4bddb4d48aee970c3ebb5e5c50111",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}