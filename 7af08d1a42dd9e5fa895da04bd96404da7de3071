{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c07133b_31eb6d29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-15T12:52:56Z",
      "side": 1,
      "message": "PTAL :)",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f2b3ec4_bb616023",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "perhaps\n\n    /[\\0-\\x1F\\x7F-\\x9F]|\u003c(?:!--|\\/?script)/g",
      "range": {
        "startLine": 229,
        "startChar": 27,
        "endLine": 229,
        "endChar": 73
      },
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa78ea90_0f948c9f",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f2b3ec4_bb616023",
      "range": {
        "startLine": 229,
        "startChar": 27,
        "endLine": 229,
        "endChar": 73
      },
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "133a4e28_b192eca3",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "perhaps\n\n    /[\\0-\\x1F\u0027\\x7F-\\x9F]|\u003c(?:!--|\\/?script)/g",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2647ae6_ca15fa9b",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "133a4e28_b192eca3",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38af633a_dc78f98a",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Was `\\v` omitted intentionally? If so, might be worth adding a comment explaining why (I could think of a few reasons, but I\u0027m not sure if they apply here.)",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d5c78f0_8344ddfe",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "I just mirrored what node.js does, so no conscious decision here.\nI now see that jsesc omits it intentionally to support older IE versions.\nConsidering that IE changed the behavior around 2011, I do not think we need to take this into account here.\nI have added \\v in the newest patchset. WDYT?",
      "parentUuid": "38af633a_dc78f98a",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4be9f27d_cdfb180a",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-17T08:47:08Z",
      "side": 1,
      "message": "I don\u0027t feel strongly either way, I just wanted it to be a conscious decision. Another reason to exclude it (other than oldIE support, which I agree no longer seems relevant, and definitely not for our Chrome-only codebase) could be that JSON doesn\u0027t support `\\v`. So if we were planning on extending this utility for future right-click → “copy as JSON string” in the future, we’d need to make `\\v` output conditional.",
      "parentUuid": "1d5c78f0_8344ddfe",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e58f419_751b0c1f",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-17T08:57:31Z",
      "side": 1,
      "message": "Good point. I\u0027ll leave it in for now then, since we are explicitly forming js literals for now.",
      "parentUuid": "4be9f27d_cdfb180a",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4518ac06_cd4d27ce",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Instead of a switch, we could also use a `Map` defined outside of this function:\n\n    const escapeMap \u003d new Map([\n      [\u0027\\b\u0027, \u0027\\\\b\u0027],\n      [\u0027\\f\u0027, \u0027\\\\f\u0027],\n      // …\n    ]);\n    \n`escapePattern` would then simply `return escapeMap.get(string)`.\n\nWith a longer list, a Map might be slightly nicer/more convenient to extend in the future, but at the current length either option seems fine. WDYT?",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f9655a4_7a4884ba",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "I have refactored a bit here to account for lone surrogates and we now use a map for the replacements. The map contains both \"miscellaneous\" patterns such as \u0027\u003cscript\u0027 and the special characters such as \u0027\\n\u0027. Should we split this into two maps instead?",
      "parentUuid": "4518ac06_cd4d27ce",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74ac1044_2af88bb7",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-17T08:47:08Z",
      "side": 1,
      "message": "I like it! A single map seems fine, IMHO.",
      "parentUuid": "0f9655a4_7a4884ba",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb57990c_2c8970ff",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-17T08:57:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74ac1044_2af88bb7",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "921836a4_29a8b84e",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Let\u0027s use hex integer literals (`0xNN`) when referring to code points/units/bytes\n\n32 -\u003e 0x20 etc.",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb5591ef_0040b340",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "921836a4_29a8b84e",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae58959_4673f19e",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Use String#padStart",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cd14071_b079a238",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 254,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Neat!",
      "parentUuid": "eae58959_4673f19e",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc71a93f_43498852",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "We need to escape lone surrogates as well, otherwise the content is not well-formed Unicode, and cannot be represented in UTF-8 / copied to text editors properly",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec796665_e69602c3",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc71a93f_43498852",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39356562_78ba4f4c",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Use String#includes",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03955c68_b7ad0347",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39356562_78ba4f4c",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1a48877_d116fb8b",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "How about:\n\n    let escapedContent \u003d \u0027\u0027;\n    let quote \u003d \u0027\u0027;\n    if (...) {\n      quote \u003d \u0027...\u0027;\n      escapedContent \u003d ...;\n    } else if (...) {\n      quote \u003d \u0027...\u0027;\n      escapedContent \u003d ...;\n    } else {\n      quote \u003d \u0027...\u0027;\n      escapedContent \u003d ...;\n    }\n    return `${quote}${escapedContent}${quote}`;",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "607458cf_77688eca",
        "filename": "front_end/core/platform/string-utilities.ts",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1a48877_d116fb8b",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae4e15c_0367ee77",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 2
      },
      "lineNbr": 760,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Let\u0027s update or remove this comment now",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "835cb171_4a015f04",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 2
      },
      "lineNbr": 760,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "eae4e15c_0367ee77",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "421ea69e_69ce08ff",
        "filename": "test/unittests/front_end/core/platform/StringUtilities_test.ts",
        "patchSetId": 2
      },
      "lineNbr": 723,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "You could use\n\n    String.raw`...`\n    \nto avoid the double-escaping in these tests",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aada321e_fb933cfb",
        "filename": "test/unittests/front_end/core/platform/StringUtilities_test.ts",
        "patchSetId": 2
      },
      "lineNbr": 723,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Ah yes that is definitely useful for some of the tests.\nUnfortunately it makes eslint unhappy if the file contains \u003cCRLF\u003e, so it does not seem suitable for the whitespace related tests.",
      "parentUuid": "421ea69e_69ce08ff",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf1f9c81_9578fadd",
        "filename": "test/unittests/front_end/core/platform/StringUtilities_test.ts",
        "patchSetId": 2
      },
      "lineNbr": 725,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-06-15T13:40:01Z",
      "side": 1,
      "message": "Please add some tests with lone surrogates (lone lead surrogate, lone trail surrogate, surrogate pair in the wrong order, etc.).",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b897ca8_046e9fc5",
        "filename": "test/unittests/front_end/core/platform/StringUtilities_test.ts",
        "patchSetId": 2
      },
      "lineNbr": 725,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2021-06-16T14:54:01Z",
      "side": 1,
      "message": "Done. I have added tests for lone surrogates for the endpoints of both ranges and one in the middle, a test for valid surrogate pairs, and a test one for invalid pairs.",
      "parentUuid": "bf1f9c81_9578fadd",
      "revId": "7af08d1a42dd9e5fa895da04bd96404da7de3071",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}