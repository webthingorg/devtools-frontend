{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "41d5dbb2_05720aa1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-11-09T08:36:50Z",
      "side": 1,
      "message": "ptal",
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77fce279_ea3ac4bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-11-09T09:07:46Z",
      "side": 1,
      "message": "Would it make sense to have a reviewer from MS also to get their localization PoV?",
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09ec3d9f_fa0ed2a2",
        "filename": "front_end/issues/MarkdownIssueDescription.ts",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-11-09T09:07:11Z",
      "side": 1,
      "message": "Will there be a way to provide examples for how the placeholders will be replaced?",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0c7e0f3_4cfea255",
        "filename": "front_end/issues/MarkdownIssueDescription.ts",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-11-09T09:30:18Z",
      "side": 1,
      "message": "Where would we show such an example? We don\u0027t have a translation pipeline where examples are important to the translator. The only place would be inline in the Markdown doc for future non-dev editors.\n\nTo be honest, I am not sure that complicating the placeholder syntax + parsing it is worth it. I\u0027d propose we re-visit that decision once its clear whether this code stays or is replaced by some l10n mechanism.",
      "parentUuid": "09ec3d9f_fa0ed2a2",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cefde171_db47c0c9",
        "filename": "front_end/issues/MarkdownIssueDescription.ts",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-11-09T09:35:23Z",
      "side": 1,
      "message": "Ack, let\u0027s see what other stakeholders say.",
      "parentUuid": "d0c7e0f3_4cfea255",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3758808_c70b2f37",
        "filename": "front_end/issues/MarkdownIssueDescription.ts",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-11-09T17:27:40Z",
      "side": 1,
      "message": "Thanks for adding us in here :). It seems it does not interfere with V2 and both can coexist. As SDK and issues has not been migrated yet my suggestion would be to add localization V1 in here, to keep consistency and to make the porting process to V2 easier. e.g \n\nPlain text:\n\u0027Example string with two placeholders, \\\u0027{ph1}\\\u0027 and \\\u0027{ph2}\\\u0027.\u0027;\n\nLocalization V1:\nls`Example string with two placeholders, \\\u0027\u0027${ph1}\u0027\\\u0027 and \\\u0027\u0027${ph2}\u0027\\\u0027.`\n\nLocalization V2:\nUIStrings \u003d {\n     ...\n    \"notAnId\": \u0027Example string with two placeholders, \\\u0027{ph1}\\\u0027 and \\\u0027{ph2}\\\u0027\n     ...\n}\n\ni18nString(UIStrings.example, {ph1:\"Placeholder\", ph2: \"Fooholder\"})\n\nThat  will also help with the example @Sigurd mentioned, as it can be provided in V1 format (like any other module in the grdp file) and it will be migrated when we pick issues and/or sdk.",
      "parentUuid": "cefde171_db47c0c9",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39d87c26_d9c74e7a",
        "filename": "front_end/issues/MarkdownIssueDescription.ts",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-11-11T06:25:39Z",
      "side": 1,
      "message": "The problem is, the input string is not just a plain old string, but markdown. i18n (V2) has special handling for markdown links and codespans, but not lists and headings.\n\ni18n does this, by heuristically replacing things that look like markdown syntax into placeholders. I am not sure that is a viable solution in the future.\n\nWe can also not use V1, as V1 relies on the fact that the plain string is part of the JavaScript code, which is not the case for Markdown files. So V1 is also off the table.",
      "parentUuid": "b3758808_c70b2f37",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 31,
        "endChar": 43
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e20e2fe9_044c21d8",
        "filename": "test/unittests/front_end/issues/MarkdownIssueDescription_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-11-09T08:36:50Z",
      "side": 1,
      "message": "alternatively, we could throw in this case. It could be equally likely that there is a typo or a dev forgot to specify the replacement.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a23b6e3_f9871362",
        "filename": "test/unittests/front_end/issues/MarkdownIssueDescription_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-11-09T09:07:11Z",
      "side": 1,
      "message": "Let\u0027s throw.",
      "parentUuid": "e20e2fe9_044c21d8",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf330365_43824f50",
        "filename": "test/unittests/front_end/issues/MarkdownIssueDescription_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-11-09T09:30:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a23b6e3_f9871362",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "41f94b5c34e7d517a8086be7cf880027978cd2cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}