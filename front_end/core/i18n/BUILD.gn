# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../scripts/build/ninja/devtools_entrypoint.gni")
import("../../../scripts/build/ninja/devtools_module.gni")
import("../../../scripts/build/ninja/devtools_pre_built.gni")
import("../../../scripts/build/ninja/minify_json.gni")
import("../../../scripts/build/ninja/node.gni")

import("//$devtools_root_location/config/gni/i18n.gni")

devtools_module("i18n") {
  sources = [
    "DevToolsLocale.ts",
    "i18nImpl.ts",
    "i18nTypes.ts",
    "time-utilities.ts",
  ]

  deps = [
    ":locales_js",
    "../../core/platform:bundle",
    "../../core/root:bundle",
    "../../third_party/i18n:bundle",
    "../../third_party/intl-messageformat:bundle",
  ]

  public_deps = [
    ":collect_strings",
    ":i18n_bundled_locales",
    ":i18n_locales",
  ]
}

devtools_entrypoint("bundle") {
  entrypoint = "i18n.ts"
  deps = [ ":i18n" ]

  visibility = [ "*" ]
}

node_action("generate_locales_js") {
  script = "front_end/core/i18n/generate-locales-js.js"

  args = [
    "--target-gen-dir",
    rebase_path(target_gen_dir, root_build_dir),
  ]
  args += [ "--remote-locales" ]
  args += remote_devtools_locales

  args += [ "--bundled-locales" ]
  args += bundled_devtools_locales

  args += [
    "--default-locale",
    devtools_default_locale,
  ]

  args += [
    "--remote-fetch-pattern",
    remote_fetch_pattern,
  ]

  args += [
    "--local-fetch-pattern",
    local_fetch_pattern,
  ]

  outputs = [ "$target_gen_dir/locales.js" ]
  data = outputs

  if (is_debug) {
    metadata = {
      grd_files = outputs
    }
  }
}

node_action("collect_strings") {
  script = "front_end/core/i18n/collect-ui-strings.js"

  args = [ "--input-directories" ]
  foreach(dir, devtools_collection_directories) {
    args += [ rebase_path(dir, root_build_dir) ]
  }
  args += [
    "--output-directory",
    rebase_path("$target_gen_dir/locales/generated"),
  ]

  outputs = [ "$target_gen_dir/locales/generated/en-US.json" ]
  if (include_en_xl) {
    args += [ "--include-en-xl" ]
    outputs += [ "$target_gen_dir/locales/generated/en-XL.json" ]
  }
}

devtools_pre_built("locales_js") {
  sources = [
    "locales.d.ts",
    "locales_js-tsconfig.json",
  ]

  deps = [ ":generate_locales_js" ]
}

minify_json("i18n_locales") {
  sources = []
  foreach(locale, remote_devtools_locales + bundled_devtools_locales) {
    sources += [ "locales/$locale.json" ]
  }
}

group("i18n_bundled_locales") {
  public_deps = [ ":i18n_locales" ]

  data = []

  foreach(locale, bundled_devtools_locales) {
    data += [ "$target_gen_dir/locales/$locale.json" ]
  }

  metadata = {
    grd_files = data
  }
}
