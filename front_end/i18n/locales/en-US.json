{
  "changes/ChangesSidebar.js | sFromSourceMap": {
    "message": "{PH1} (from source map)"
  },
  "changes/ChangesTextEditor.js | additions": {
    "message": "Addition:{PH1}"
  },
  "changes/ChangesTextEditor.js | deletions": {
    "message": "Deletion:{PH1}"
  },
  "changes/ChangesView.js | binaryData": {
    "message": "Binary data"
  },
  "changes/ChangesView.js | changesDiffViewer": {
    "message": "Changes diff viewer"
  },
  "changes/ChangesView.js | noChanges": {
    "message": "No changes"
  },
  "changes/ChangesView.js | revertAllChangesToCurrentFile": {
    "message": "Revert all changes to current file"
  },
  "changes/ChangesView.js | sDeletion": {
    "message": "{PH1} deletion (-)"
  },
  "changes/ChangesView.js | sDeletions": {
    "message": "{PH1} deletions (-)"
  },
  "changes/ChangesView.js | sInsertion": {
    "message": "{PH1} insertion (+),"
  },
  "changes/ChangesView.js | sInsertions": {
    "message": "{PH1} insertions (+),"
  },
  "changes/ChangesView.js | SkippingDMatchingLines": {
    "message": "( … Skipping {PH1} matching lines … )"
  },
  "changes/ModuleUIStrings.js | changes": {
    "message": "Changes"
  },
  "changes/ModuleUIStrings.js | changesDrawer": {
    "message": "Changes drawer"
  },
  "coverage/CoverageListView.js | Byte": {
    "message": "1 byte"
  },
  "coverage/CoverageListView.js | ByteS": {
    "message": "1 byte, {PH1}"
  },
  "coverage/CoverageListView.js | codeCoverage": {
    "message": "Code Coverage"
  },
  "coverage/CoverageListView.js | css": {
    "message": "CSS"
  },
  "coverage/CoverageListView.js | jsCoverageWithPerBlock": {
    "message": "JS coverage with per block granularity: Once a block of JavaScript was executed, that block is marked as covered."
  },
  "coverage/CoverageListView.js | jsCoverageWithPerFunction": {
    "message": "JS coverage with per function granularity: Once a function was executed, the whole function is marked as covered."
  },
  "coverage/CoverageListView.js | jsPerBlock": {
    "message": "JS (per block)"
  },
  "coverage/CoverageListView.js | jsPerFunction": {
    "message": "JS (per function)"
  },
  "coverage/CoverageListView.js | sBytes": {
    "message": "{PH1} bytes"
  },
  "coverage/CoverageListView.js | sBytesS": {
    "message": "{PH1} bytes, {PH2}"
  },
  "coverage/CoverageListView.js | sBytesSBelongToBlocksOf": {
    "message": "{PH1} bytes ({PH2} %) belong to blocks of JavaScript that have not (yet) been executed."
  },
  "coverage/CoverageListView.js | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} bytes ({PH2} %) belong to blocks of JavaScript that have executed at least once."
  },
  "coverage/CoverageListView.js | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} bytes ({PH2} %) belong to functions that have not (yet) been executed."
  },
  "coverage/CoverageListView.js | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} bytes ({PH2} %) belong to functions that have executed at least once."
  },
  "coverage/CoverageListView.js | sOfFileUnusedSOfFileUsed": {
    "message": "{PH1} % of file unused, {PH2} % of file used"
  },
  "coverage/CoverageListView.js | sPercent": {
    "message": "{PH1} %"
  },
  "coverage/CoverageListView.js | totalBytes": {
    "message": "Total Bytes"
  },
  "coverage/CoverageListView.js | type": {
    "message": "Type"
  },
  "coverage/CoverageListView.js | unusedBytes": {
    "message": "Unused Bytes"
  },
  "coverage/CoverageListView.js | url": {
    "message": "URL"
  },
  "coverage/CoverageListView.js | usageVisualization": {
    "message": "Usage Visualization"
  },
  "coverage/CoverageView.js | all": {
    "message": "All"
  },
  "coverage/CoverageView.js | chooseCoverageGranularityPer": {
    "message": "Choose coverage granularity: Per function has low overhead, per block has significant overhead."
  },
  "coverage/CoverageView.js | clearAll": {
    "message": "Clear all"
  },
  "coverage/CoverageView.js | clickTheRecordButtonSToStart": {
    "message": "Click the record button {PH1} to start capturing coverage."
  },
  "coverage/CoverageView.js | clickTheReloadButtonSToReloadAnd": {
    "message": "Click the reload button {PH1} to reload and start capturing coverage."
  },
  "coverage/CoverageView.js | contentScripts": {
    "message": "Content scripts"
  },
  "coverage/CoverageView.js | css": {
    "message": "CSS"
  },
  "coverage/CoverageView.js | export": {
    "message": "Export..."
  },
  "coverage/CoverageView.js | filterCoverageByType": {
    "message": "Filter coverage by type"
  },
  "coverage/CoverageView.js | filteredSTotalS": {
    "message": "Filtered: {PH1}  Total: {PH2}"
  },
  "coverage/CoverageView.js | includeExtensionContentScripts": {
    "message": "Include extension content scripts"
  },
  "coverage/CoverageView.js | javascript": {
    "message": "JavaScript"
  },
  "coverage/CoverageView.js | perBlock": {
    "message": "Per block"
  },
  "coverage/CoverageView.js | perFunction": {
    "message": "Per function"
  },
  "coverage/CoverageView.js | sOfSSUsedSoFarSUnused": {
    "message": "{PH1} of {PH2} ({PH3}%) used so far,\n        {PH4} unused."
  },
  "coverage/CoverageView.js | urlFilter": {
    "message": "URL filter"
  },
  "coverage/ModuleUIStrings.js | coverage": {
    "message": "Coverage"
  },
  "coverage/ModuleUIStrings.js | instrumentCoverage": {
    "message": "Instrument coverage"
  },
  "coverage/ModuleUIStrings.js | performance": {
    "message": "Performance"
  },
  "coverage/ModuleUIStrings.js | startInstrumentingCoverageAnd": {
    "message": "Start instrumenting coverage and reload page"
  },
  "coverage/ModuleUIStrings.js | stopInstrumentingCoverageAndShow": {
    "message": "Stop instrumenting coverage and show results"
  },
  "devices/DevicesView.js | thisPanelHasBeenDeprecatedIn": {
    "message": "This panel has been deprecated in favor of the {PH1} interface, which has equivalent functionality."
  },
  "devices/ModuleUIStrings.js | android": {
    "message": "android"
  },
  "devices/ModuleUIStrings.js | mobile": {
    "message": "mobile"
  },
  "devices/ModuleUIStrings.js | remoteDevices": {
    "message": "Remote devices"
  },
  "devices/ModuleUIStrings.js | usb": {
    "message": "usb"
  },
  "layer_viewer/LayerDetailsView.js | compositingReasons": {
    "message": "Compositing Reasons"
  },
  "layer_viewer/LayerDetailsView.js | containingBlocRectangleDimensions": {
    "message": "Containing Block {PH1} × {PH2} (at {PH3}, {PH4})"
  },
  "layer_viewer/LayerDetailsView.js | hasABackdropFilter": {
    "message": "Has a backdrop filter."
  },
  "layer_viewer/LayerDetailsView.js | hasABlendingEffectThatNeedsToBe": {
    "message": "Has a blending effect that needs to be known by compositor because of composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasAClipThatNeedsToBeKnownBy": {
    "message": "Has a clip that needs to be known by compositor because of composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasADTransform": {
    "message": "Has a 3d transform."
  },
  "layer_viewer/LayerDetailsView.js | hasAFilterEffectThatNeedsToBe": {
    "message": "Has a filter effect that needs to be known by compositor because of composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasAMaskThatNeedsToBeKnownBy": {
    "message": "Has a mask that needs to be known by compositor because of composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasAnActiveAcceleratedBackdrop": {
    "message": "Has an active accelerated backdrop filter animation or transition."
  },
  "layer_viewer/LayerDetailsView.js | hasAnActiveAcceleratedFilter": {
    "message": "Has an active accelerated filter animation or transition."
  },
  "layer_viewer/LayerDetailsView.js | hasAnActiveAcceleratedOpacity": {
    "message": "Has an active accelerated opacity animation or transition."
  },
  "layer_viewer/LayerDetailsView.js | hasAnActiveAcceleratedTransform": {
    "message": "Has an active accelerated transform animation or transition."
  },
  "layer_viewer/LayerDetailsView.js | hasAPerspectiveTransformThat": {
    "message": "Has a perspective transform that needs to be known by compositor because of 3d descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasAPreservesdPropertyThatNeeds": {
    "message": "Has a preserves-3d property that needs to be known by compositor because of 3d descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasAReflectionThatNeedsToBeKnown": {
    "message": "Has a reflection that needs to be known by compositor because of composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | hasAWillchangeCompositingHint": {
    "message": "Has a will-change compositing hint other than transform and opacity."
  },
  "layer_viewer/LayerDetailsView.js | hasAWillchangeOpacityCompositing": {
    "message": "Has a will-change: opacity compositing hint."
  },
  "layer_viewer/LayerDetailsView.js | hasAWillchangeTransform": {
    "message": "Has a will-change: transform compositing hint."
  },
  "layer_viewer/LayerDetailsView.js | hasBackfacevisibilityHidden": {
    "message": "Has backface-visibility: hidden."
  },
  "layer_viewer/LayerDetailsView.js | hasClippingAncestor": {
    "message": "Has clipping ancestor."
  },
  "layer_viewer/LayerDetailsView.js | hasOpacityThatNeedsToBeAppliedBy": {
    "message": "Has opacity that needs to be applied by compositor because of composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | isAnAcceleratedCanvasOrIsA": {
    "message": "Is an accelerated canvas, or is a display list backed canvas that was promoted to a layer based on a performance heuristic."
  },
  "layer_viewer/LayerDetailsView.js | isAnAcceleratedIframe": {
    "message": "Is an accelerated iFrame."
  },
  "layer_viewer/LayerDetailsView.js | isAnAcceleratedPlugin": {
    "message": "Is an accelerated plugin."
  },
  "layer_viewer/LayerDetailsView.js | isAnAcceleratedVideo": {
    "message": "Is an accelerated video."
  },
  "layer_viewer/LayerDetailsView.js | isAPositionfixedElementWith": {
    "message": "Is a position:fixed element with composited descendants."
  },
  "layer_viewer/LayerDetailsView.js | isAScrollableOverflowElement": {
    "message": "Is a scrollable overflow element."
  },
  "layer_viewer/LayerDetailsView.js | isDomOverlayForWebxrImmersivear": {
    "message": "Is DOM overlay for WebXR immersive-ar mode."
  },
  "layer_viewer/LayerDetailsView.js | isFixedOrStickyPosition": {
    "message": "Is fixed or sticky position."
  },
  "layer_viewer/LayerDetailsView.js | isOverlayControlsForVideo": {
    "message": "Is overlay controls for video."
  },
  "layer_viewer/LayerDetailsView.js | isTheDocumentrootscroller": {
    "message": "Is the document.rootScroller."
  },
  "layer_viewer/LayerDetailsView.js | isTheRootLayer": {
    "message": "Is the root layer."
  },
  "layer_viewer/LayerDetailsView.js | layerForLinkHighlightFrame": {
    "message": "Layer for link highlight, frame overlay, etc."
  },
  "layer_viewer/LayerDetailsView.js | layerPaintedOnTopOfOtherLayersAs": {
    "message": "Layer painted on top of other layers as decoration."
  },
  "layer_viewer/LayerDetailsView.js | layerWasSeparatelyComposited": {
    "message": "Layer was separately composited because it could not be squashed."
  },
  "layer_viewer/LayerDetailsView.js | mainThreadScrollingReason": {
    "message": "Main thread scrolling reason"
  },
  "layer_viewer/LayerDetailsView.js | memoryEstimate": {
    "message": "Memory estimate"
  },
  "layer_viewer/LayerDetailsView.js | mightOverlapOtherComposited": {
    "message": "Might overlap other composited content."
  },
  "layer_viewer/LayerDetailsView.js | nearestLayerShiftingContaining": {
    "message": "Nearest Layer Shifting Containing Block"
  },
  "layer_viewer/LayerDetailsView.js | nearestLayerShiftingStickyBox": {
    "message": "Nearest Layer Shifting Sticky Box"
  },
  "layer_viewer/LayerDetailsView.js | nonFastScrollable": {
    "message": "Non fast scrollable"
  },
  "layer_viewer/LayerDetailsView.js | overlapsOtherCompositedContent": {
    "message": "Overlaps other composited content."
  },
  "layer_viewer/LayerDetailsView.js | paintCount": {
    "message": "Paint count"
  },
  "layer_viewer/LayerDetailsView.js | paintProfiler": {
    "message": "Paint Profiler"
  },
  "layer_viewer/LayerDetailsView.js | parentWithCompositedNegative": {
    "message": "Parent with composited negative z-index content."
  },
  "layer_viewer/LayerDetailsView.js | repaintsOnScroll": {
    "message": "Repaints on scroll"
  },
  "layer_viewer/LayerDetailsView.js | scrollParentIsNotAnAncestor": {
    "message": "Scroll parent is not an ancestor."
  },
  "layer_viewer/LayerDetailsView.js | scrollRectangleDimensions": {
    "message": "{PH1} {PH2} × {PH3} (at {PH4}, {PH5})"
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerHomeForAGroupOf": {
    "message": "Secondary layer, home for a group of squashable content."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerNoopLayerToPlace": {
    "message": "Secondary layer, no-op layer to place the squashing layer correctly in the composited layer tree."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerTheHorizontal": {
    "message": "Secondary layer, the horizontal scrollbar layer."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerTheOverflow": {
    "message": "Secondary layer, the overflow controls host layer."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerTheScrollCorner": {
    "message": "Secondary layer, the scroll corner layer."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerTheVertical": {
    "message": "Secondary layer, the vertical scrollbar layer."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerToContainAnyNormal": {
    "message": "Secondary layer, to contain any normal flow and positive z-index contents on top of a negative z-index layer."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerToContainTheMask": {
    "message": "Secondary layer, to contain the mask contents."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerToHouseContents": {
    "message": "Secondary layer, to house contents that can be scrolled."
  },
  "layer_viewer/LayerDetailsView.js | secondaryLayerUsedToPositionThe": {
    "message": "Secondary layer, used to position the scrolling contents while scrolling."
  },
  "layer_viewer/LayerDetailsView.js | selectALayerToSeeItsDetails": {
    "message": "Select a layer to see its details"
  },
  "layer_viewer/LayerDetailsView.js | shouldIsolateDescendantsToApplyA": {
    "message": "Should isolate descendants to apply a blend effect."
  },
  "layer_viewer/LayerDetailsView.js | size": {
    "message": "Size"
  },
  "layer_viewer/LayerDetailsView.js | slowScrollRegions": {
    "message": "Slow scroll regions"
  },
  "layer_viewer/LayerDetailsView.js | stickyAncenstorLayersS": {
    "message": "{PH1}: {PH2} ({PH3})"
  },
  "layer_viewer/LayerDetailsView.js | stickyBoxRectangleDimensions": {
    "message": "Sticky Box {PH1} × {PH2} (at {PH3}, {PH4})"
  },
  "layer_viewer/LayerDetailsView.js | stickyPositionConstraint": {
    "message": "Sticky position constraint"
  },
  "layer_viewer/LayerDetailsView.js | touchEventHandler": {
    "message": "Touch event handler"
  },
  "layer_viewer/LayerDetailsView.js | unnamed": {
    "message": "<unnamed>"
  },
  "layer_viewer/LayerDetailsView.js | updateRectangleDimensions": {
    "message": "{PH1} × {PH2} (at {PH3},{PH4})"
  },
  "layer_viewer/LayerDetailsView.js | wheelEventHandler": {
    "message": "Wheel event handler"
  },
  "layer_viewer/Layers3DView.js | cantDisplayLayers": {
    "message": "Can't display layers,"
  },
  "layer_viewer/Layers3DView.js | checkSForPossibleReasons": {
    "message": "Check {PH1} for possible reasons."
  },
  "layer_viewer/Layers3DView.js | dLayersView": {
    "message": "3D Layers View"
  },
  "layer_viewer/Layers3DView.js | layerInformationIsNotYet": {
    "message": "Layer information is not yet available."
  },
  "layer_viewer/Layers3DView.js | mousewheelEventListener": {
    "message": "mousewheel event listener"
  },
  "layer_viewer/Layers3DView.js | paints": {
    "message": "Paints"
  },
  "layer_viewer/Layers3DView.js | repaintsOnScroll": {
    "message": "repaints on scroll"
  },
  "layer_viewer/Layers3DView.js | resetView": {
    "message": "Reset View"
  },
  "layer_viewer/Layers3DView.js | showPaintProfiler": {
    "message": "Show Paint Profiler"
  },
  "layer_viewer/Layers3DView.js | slowScrollRects": {
    "message": "Slow scroll rects"
  },
  "layer_viewer/Layers3DView.js | touchEventListener": {
    "message": "touch event listener"
  },
  "layer_viewer/Layers3DView.js | webglSupportIsDisabledInYour": {
    "message": "WebGL support is disabled in your browser."
  },
  "layer_viewer/LayerTreeOutline.js | layersTreePane": {
    "message": "Layers Tree Pane"
  },
  "layer_viewer/LayerTreeOutline.js | showPaintProfiler": {
    "message": "Show Paint Profiler"
  },
  "layer_viewer/LayerTreeOutline.js | updateChildDimension": {
    "message": " ({PH1} × {PH2})"
  },
  "layer_viewer/LayerViewHost.js | showInternalLayers": {
    "message": "Show internal layers"
  },
  "layer_viewer/ModuleUIStrings.js | layers": {
    "message": "Layers"
  },
  "layer_viewer/ModuleUIStrings.js | panOrRotateDown": {
    "message": "Pan or rotate down"
  },
  "layer_viewer/ModuleUIStrings.js | panOrRotateLeft": {
    "message": "Pan or rotate left"
  },
  "layer_viewer/ModuleUIStrings.js | panOrRotateRight": {
    "message": "Pan or rotate right"
  },
  "layer_viewer/ModuleUIStrings.js | panOrRotateUp": {
    "message": "Pan or rotate up"
  },
  "layer_viewer/ModuleUIStrings.js | resetView": {
    "message": "Reset view"
  },
  "layer_viewer/ModuleUIStrings.js | switchToPanMode": {
    "message": "Switch to pan mode"
  },
  "layer_viewer/ModuleUIStrings.js | switchToRotateMode": {
    "message": "Switch to rotate mode"
  },
  "layer_viewer/ModuleUIStrings.js | zoomIn": {
    "message": "Zoom in"
  },
  "layer_viewer/ModuleUIStrings.js | zoomOut": {
    "message": "Zoom out"
  },
  "layer_viewer/PaintProfilerView.js | bitmap": {
    "message": "Bitmap"
  },
  "layer_viewer/PaintProfilerView.js | commandLog": {
    "message": "Command Log"
  },
  "layer_viewer/PaintProfilerView.js | misc": {
    "message": "Misc"
  },
  "layer_viewer/PaintProfilerView.js | profiling": {
    "message": "Profiling…"
  },
  "layer_viewer/PaintProfilerView.js | profilingResults": {
    "message": "Profiling results"
  },
  "layer_viewer/PaintProfilerView.js | shapes": {
    "message": "Shapes"
  },
  "layer_viewer/PaintProfilerView.js | text": {
    "message": "Text"
  },
  "layer_viewer/TransformController.js | panModeX": {
    "message": "Pan mode (X)"
  },
  "layer_viewer/TransformController.js | resetTransform": {
    "message": "Reset transform (0)"
  },
  "layer_viewer/TransformController.js | rotateModeV": {
    "message": "Rotate mode (V)"
  },
  "layers/LayersPanel.js | details": {
    "message": "Details"
  },
  "layers/LayersPanel.js | profiler": {
    "message": "Profiler"
  },
  "layers/ModuleUIStrings.js | layers": {
    "message": "Layers"
  },
  "resources/ClearStorageView.js | storageQuotaUsed": {
    "message": "{PH1} used out of {PH2} storage quota"
  },
  "resources/ClearStorageView.js | storageQuotaUsedWithBytes": {
    "message": "{PH1} bytes used out of {PH2} bytes storage quota"
  },
  "resources/ClearStorageView.js | storageWithCustomMarker": {
    "message": "{PH1} (custom)"
  },
  "settings/FrameworkBlackboxSettingsTab.js | addFilenamePattern": {
    "message": "Add filename pattern"
  },
  "settings/FrameworkBlackboxSettingsTab.js | addPattern": {
    "message": "Add pattern..."
  },
  "settings/FrameworkBlackboxSettingsTab.js | behavior": {
    "message": "Behavior"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackbox": {
    "message": "Blackbox"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackboxContentScripts": {
    "message": "Blackbox content scripts"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackboxContentScriptsExtension": {
    "message": "Blackbox content scripts (extension scripts in the page)"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackboxScriptsWhoseNamesMatchS": {
    "message": "Blackbox scripts whose names match '{PH1}'"
  },
  "settings/FrameworkBlackboxSettingsTab.js | debuggerWillSkipThroughThe": {
    "message": "Debugger will skip through the scripts and will not stop on exceptions thrown by them."
  },
  "settings/FrameworkBlackboxSettingsTab.js | disabled": {
    "message": "Disabled"
  },
  "settings/FrameworkBlackboxSettingsTab.js | frameworkBlackboxing": {
    "message": "Framework Blackboxing"
  },
  "settings/FrameworkBlackboxSettingsTab.js | noBlackboxedPatterns": {
    "message": "No blackboxed patterns"
  },
  "settings/FrameworkBlackboxSettingsTab.js | pattern": {
    "message": "Pattern"
  },
  "settings/FrameworkBlackboxSettingsTab.js | patternAlreadyExists": {
    "message": "Pattern already exists"
  },
  "settings/FrameworkBlackboxSettingsTab.js | patternCannotBeEmpty": {
    "message": "Pattern cannot be empty"
  },
  "settings/FrameworkBlackboxSettingsTab.js | patternMustBeAValidRegular": {
    "message": "Pattern must be a valid regular expression"
  },
  "settings/KeybindsSettingsTab.js | addAShortcut": {
    "message": "Add a shortcut"
  },
  "settings/KeybindsSettingsTab.js | confirmChanges": {
    "message": "Confirm changes"
  },
  "settings/KeybindsSettingsTab.js | discardChanges": {
    "message": "Discard changes"
  },
  "settings/KeybindsSettingsTab.js | editShortcut": {
    "message": "Edit shortcut"
  },
  "settings/KeybindsSettingsTab.js | FullListOfDevtoolsKeyboard": {
    "message": "Full list of DevTools keyboard shortcuts and gestures"
  },
  "settings/KeybindsSettingsTab.js | keyboardShortcutsList": {
    "message": "Keyboard shortcuts list"
  },
  "settings/KeybindsSettingsTab.js | matchShortcutsFromPreset": {
    "message": "Match shortcuts from preset"
  },
  "settings/KeybindsSettingsTab.js | noShortcutForAction": {
    "message": "No shortcut for action"
  },
  "settings/KeybindsSettingsTab.js | removeShortcut": {
    "message": "Remove shortcut"
  },
  "settings/KeybindsSettingsTab.js | ResetShortcutsForAction": {
    "message": "Reset shortcuts for action"
  },
  "settings/KeybindsSettingsTab.js | RestoreDefaultShortcuts": {
    "message": "Restore default shortcuts"
  },
  "settings/KeybindsSettingsTab.js | shortcutModified": {
    "message": "Shortcut modified"
  },
  "settings/KeybindsSettingsTab.js | shortcuts": {
    "message": "Shortcuts"
  },
  "settings/KeybindsSettingsTab.js | shortcutsCannotContainOnly": {
    "message": "Shortcuts cannot contain only modifier keys."
  },
  "settings/KeybindsSettingsTab.js | thisShortcutIsInUseByS": {
    "message": "This shortcut is in use by {PH1}: {PH2}."
  },
  "settings/ModuleUIStrings.js | blackboxing": {
    "message": "Blackboxing"
  },
  "settings/ModuleUIStrings.js | documentation": {
    "message": "Documentation"
  },
  "settings/ModuleUIStrings.js | experiments": {
    "message": "Experiments"
  },
  "settings/ModuleUIStrings.js | preferences": {
    "message": "Preferences"
  },
  "settings/ModuleUIStrings.js | settings": {
    "message": "Settings"
  },
  "settings/ModuleUIStrings.js | shortcuts": {
    "message": "Shortcuts"
  },
  "settings/SettingsScreen.js | experiments": {
    "message": "Experiments"
  },
  "settings/SettingsScreen.js | oneOrMoreSettingsHaveChanged": {
    "message": "One or more settings have changed which requires a reload to take effect."
  },
  "settings/SettingsScreen.js | preferences": {
    "message": "Preferences"
  },
  "settings/SettingsScreen.js | restoreDefaultsAndReload": {
    "message": "Restore defaults and reload"
  },
  "settings/SettingsScreen.js | settings": {
    "message": "Settings"
  },
  "settings/SettingsScreen.js | shortcuts": {
    "message": "Shortcuts"
  },
  "settings/SettingsScreen.js | theseExperimentsAreParticularly": {
    "message": "These experiments are particularly unstable. Enable at your own risk."
  },
  "settings/SettingsScreen.js | theseExperimentsCouldBeUnstable": {
    "message": "These experiments could be unstable or unreliable and may require you to restart DevTools."
  },
  "settings/SettingsScreen.js | warning": {
    "message": "WARNING:"
  },
  "web_audio/AudioContextContentBuilder.js | audiocontext": {
    "message": "AudioContext"
  },
  "web_audio/AudioContextContentBuilder.js | callbackBufferSize": {
    "message": "Callback Buffer Size"
  },
  "web_audio/AudioContextContentBuilder.js | callbackInterval": {
    "message": "Callback Interval"
  },
  "web_audio/AudioContextContentBuilder.js | currentTime": {
    "message": "Current Time"
  },
  "web_audio/AudioContextContentBuilder.js | maxOutputChannels": {
    "message": "Max Output Channels"
  },
  "web_audio/AudioContextContentBuilder.js | offlineaudiocontext": {
    "message": "OfflineAudioContext"
  },
  "web_audio/AudioContextContentBuilder.js | renderCapacity": {
    "message": "Render Capacity"
  },
  "web_audio/AudioContextContentBuilder.js | sampleRate": {
    "message": "Sample Rate"
  },
  "web_audio/AudioContextContentBuilder.js | state": {
    "message": "State"
  },
  "web_audio/AudioContextSelector.js | audioContextS": {
    "message": "Audio context: {PH1}"
  },
  "web_audio/AudioContextSelector.js | noRecordings": {
    "message": "(no recordings)"
  },
  "web_audio/ModuleUIStrings.js | audio": {
    "message": "audio"
  },
  "web_audio/ModuleUIStrings.js | webaudio": {
    "message": "WebAudio"
  },
  "web_audio/WebAudioView.js | openAPageThatUsesWebAudioApiTo": {
    "message": "Open a page that uses Web Audio API to start monitoring."
  },
  "webauthn/ModuleUIStrings.js | webauthn": {
    "message": "WebAuthn"
  },
  "webauthn/WebauthnPane.js | actions": {
    "message": "Actions"
  },
  "webauthn/WebauthnPane.js | active": {
    "message": "Active"
  },
  "webauthn/WebauthnPane.js | add": {
    "message": "Add"
  },
  "webauthn/WebauthnPane.js | addAuthenticator": {
    "message": "Add authenticator"
  },
  "webauthn/WebauthnPane.js | authenticatorS": {
    "message": "Authenticator {PH1}"
  },
  "webauthn/WebauthnPane.js | credentials": {
    "message": "Credentials"
  },
  "webauthn/WebauthnPane.js | editName": {
    "message": "Edit name"
  },
  "webauthn/WebauthnPane.js | enableVirtualAuthenticator": {
    "message": "Enable virtual authenticator environment"
  },
  "webauthn/WebauthnPane.js | export": {
    "message": "Export"
  },
  "webauthn/WebauthnPane.js | id": {
    "message": "ID"
  },
  "webauthn/WebauthnPane.js | isResident": {
    "message": "Is Resident"
  },
  "webauthn/WebauthnPane.js | learnMore": {
    "message": "Learn more"
  },
  "webauthn/WebauthnPane.js | newAuthenticator": {
    "message": "New authenticator"
  },
  "webauthn/WebauthnPane.js | no": {
    "message": "No"
  },
  "webauthn/WebauthnPane.js | noCredentialsTryCallingSFromYour": {
    "message": "No credentials. Try calling {PH1} from your website."
  },
  "webauthn/WebauthnPane.js | privateKeypem": {
    "message": "Private key.pem"
  },
  "webauthn/WebauthnPane.js | protocol": {
    "message": "Protocol"
  },
  "webauthn/WebauthnPane.js | remove": {
    "message": "Remove"
  },
  "webauthn/WebauthnPane.js | rpId": {
    "message": "RP ID"
  },
  "webauthn/WebauthnPane.js | saveName": {
    "message": "Save name"
  },
  "webauthn/WebauthnPane.js | setSAsTheActiveAuthenticator": {
    "message": "Set {PH1} as the active authenticator"
  },
  "webauthn/WebauthnPane.js | signCount": {
    "message": "Sign Count"
  },
  "webauthn/WebauthnPane.js | supportsResidentKeys": {
    "message": "Supports resident keys"
  },
  "webauthn/WebauthnPane.js | supportsUserVerification": {
    "message": "Supports user verification"
  },
  "webauthn/WebauthnPane.js | transport": {
    "message": "Transport"
  },
  "webauthn/WebauthnPane.js | userHandle": {
    "message": "User Handle"
  },
  "webauthn/WebauthnPane.js | useWebauthnForPhishingresistant": {
    "message": "Use WebAuthn for phishing-resistant authentication"
  },
  "webauthn/WebauthnPane.js | uuid": {
    "message": "UUID"
  },
  "webauthn/WebauthnPane.js | yes": {
    "message": "Yes"
  }
}
