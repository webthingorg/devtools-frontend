{
  "coverage/CoverageListView.js | Byte": {
    "message": "1 byte"
  },
  "coverage/CoverageListView.js | ByteS": {
    "message": "1 byte, {PH1}"
  },
  "coverage/CoverageListView.js | codeCoverage": {
    "message": "Code Coverage"
  },
  "coverage/CoverageListView.js | css": {
    "message": "CSS"
  },
  "coverage/CoverageListView.js | jsCoverageWithPerBlock": {
    "message": "JS coverage with per block granularity: Once a block of JavaScript was executed, that block is marked as covered."
  },
  "coverage/CoverageListView.js | jsCoverageWithPerFunction": {
    "message": "JS coverage with per function granularity: Once a function was executed, the whole function is marked as covered."
  },
  "coverage/CoverageListView.js | jsPerBlock": {
    "message": "JS (per block)"
  },
  "coverage/CoverageListView.js | jsPerFunction": {
    "message": "JS (per function)"
  },
  "coverage/CoverageListView.js | sBytes": {
    "message": "{PH1} bytes"
  },
  "coverage/CoverageListView.js | sBytesS": {
    "message": "{PH1} bytes, {PH2}"
  },
  "coverage/CoverageListView.js | sBytesSBelongToBlocksOf": {
    "message": "{PH1} bytes ({PH2} %) belong to blocks of JavaScript that have not (yet) been executed."
  },
  "coverage/CoverageListView.js | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} bytes ({PH2} %) belong to blocks of JavaScript that have executed at least once."
  },
  "coverage/CoverageListView.js | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} bytes ({PH2} %) belong to functions that have not (yet) been executed."
  },
  "coverage/CoverageListView.js | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} bytes ({PH2} %) belong to functions that have executed at least once."
  },
  "coverage/CoverageListView.js | sOfFileUnusedSOfFileUsed": {
    "message": "{PH1} % of file unused, {PH2} % of file used"
  },
  "coverage/CoverageListView.js | sPercent": {
    "message": "{PH1} %"
  },
  "coverage/CoverageListView.js | totalBytes": {
    "message": "Total Bytes"
  },
  "coverage/CoverageListView.js | type": {
    "message": "Type"
  },
  "coverage/CoverageListView.js | unusedBytes": {
    "message": "Unused Bytes"
  },
  "coverage/CoverageListView.js | url": {
    "message": "URL"
  },
  "coverage/CoverageListView.js | usageVisualization": {
    "message": "Usage Visualization"
  },
  "coverage/CoverageView.js | all": {
    "message": "All"
  },
  "coverage/CoverageView.js | chooseCoverageGranularityPer": {
    "message": "Choose coverage granularity: Per function has low overhead, per block has significant overhead."
  },
  "coverage/CoverageView.js | clearAll": {
    "message": "Clear all"
  },
  "coverage/CoverageView.js | clickTheRecordButtonSToStart": {
    "message": "Click the record button {PH1} to start capturing coverage."
  },
  "coverage/CoverageView.js | clickTheReloadButtonSToReloadAnd": {
    "message": "Click the reload button {PH1} to reload and start capturing coverage."
  },
  "coverage/CoverageView.js | contentScripts": {
    "message": "Content scripts"
  },
  "coverage/CoverageView.js | css": {
    "message": "CSS"
  },
  "coverage/CoverageView.js | export": {
    "message": "Export..."
  },
  "coverage/CoverageView.js | filterCoverageByType": {
    "message": "Filter coverage by type"
  },
  "coverage/CoverageView.js | filteredSTotalS": {
    "message": "Filtered: {PH1}  Total: {PH2}"
  },
  "coverage/CoverageView.js | includeExtensionContentScripts": {
    "message": "Include extension content scripts"
  },
  "coverage/CoverageView.js | javascript": {
    "message": "JavaScript"
  },
  "coverage/CoverageView.js | perBlock": {
    "message": "Per block"
  },
  "coverage/CoverageView.js | perFunction": {
    "message": "Per function"
  },
  "coverage/CoverageView.js | sOfSSUsedSoFarSUnused": {
    "message": "{PH1} of {PH2} ({PH3}%) used so far,\n        {PH4} unused."
  },
  "coverage/CoverageView.js | urlFilter": {
    "message": "URL filter"
  },
  "coverage/ModuleUIStrings.js | coverage": {
    "message": "Coverage"
  },
  "coverage/ModuleUIStrings.js | instrumentCoverage": {
    "message": "Instrument coverage"
  },
  "coverage/ModuleUIStrings.js | performance": {
    "message": "Performance"
  },
  "coverage/ModuleUIStrings.js | startInstrumentingCoverageAnd": {
    "message": "Start instrumenting coverage and reload page"
  },
  "coverage/ModuleUIStrings.js | stopInstrumentingCoverageAndShow": {
    "message": "Stop instrumenting coverage and show results"
  },
  "devices/DevicesView.js | thisPanelHasBeenDeprecatedIn": {
    "message": "This panel has been deprecated in favor of the {PH1} interface, which has equivalent functionality."
  },
  "devices/ModuleUIStrings.js | android": {
    "message": "android"
  },
  "devices/ModuleUIStrings.js | mobile": {
    "message": "mobile"
  },
  "devices/ModuleUIStrings.js | remoteDevices": {
    "message": "Remote devices"
  },
  "devices/ModuleUIStrings.js | usb": {
    "message": "usb"
  },
  "resources/ClearStorageView.js | storageQuotaUsed": {
    "message": "{PH1} used out of {PH2} storage quota"
  },
  "resources/ClearStorageView.js | storageQuotaUsedWithBytes": {
    "message": "{PH1} bytes used out of {PH2} bytes storage quota"
  },
  "resources/ClearStorageView.js | storageWithCustomMarker": {
    "message": "{PH1} (custom)"
  },
  "security/ModuleUIStrings.js | security": {
    "message": "Security"
  },
  "security/SecurityModel.js | cipherWithMAC": {
    "message": "{PH1} with {PH2}"
  },
  "security/SecurityModel.js | theSecurityOfThisPageIsUnknown": {
    "message": "The security of this page is unknown."
  },
  "security/SecurityModel.js | thisPageIsNotSecure": {
    "message": "This page is not secure."
  },
  "security/SecurityModel.js | thisPageIsNotSecureBrokenHttps": {
    "message": "This page is not secure (broken HTTPS)."
  },
  "security/SecurityModel.js | thisPageIsSecureValidHttps": {
    "message": "This page is secure (valid HTTPS)."
  },
  "security/SecurityPanel.js | activeContentWithCertificate": {
    "message": "active content with certificate errors"
  },
  "security/SecurityPanel.js | activeMixedContent": {
    "message": "active mixed content"
  },
  "security/SecurityPanel.js | allResourcesOnThisPageAreServed": {
    "message": "All resources on this page are served securely."
  },
  "security/SecurityPanel.js | allServedSecurely": {
    "message": "all served securely"
  },
  "security/SecurityPanel.js | blockedMixedContent": {
    "message": "Blocked mixed content"
  },
  "security/SecurityPanel.js | certificate": {
    "message": "Certificate"
  },
  "security/SecurityPanel.js | certificateExpiresSoon": {
    "message": "Certificate expires soon"
  },
  "security/SecurityPanel.js | certificateTransparency": {
    "message": "Certificate Transparency"
  },
  "security/SecurityPanel.js | chromeHasDeterminedThatThisSite": {
    "message": "Chrome has determined that this site could be fake or fraudulent.\n\nIf you believe this is shown in error please visit https://bugs.chromium.org/p/chromium/issues/entry?template=Safety+Tips+Appeals."
  },
  "security/SecurityPanel.js | cipher": {
    "message": "Cipher"
  },
  "security/SecurityPanel.js | connection": {
    "message": "Connection"
  },
  "security/SecurityPanel.js | contentWithCertificateErrors": {
    "message": "content with certificate errors"
  },
  "security/SecurityPanel.js | dataWasEnteredInAFieldOnA": {
    "message": "Data was entered in a field on a non-secure page. A warning has been added to the URL bar."
  },
  "security/SecurityPanel.js | flaggedByGoogleSafeBrowsing": {
    "message": "Flagged by Google Safe Browsing"
  },
  "security/SecurityPanel.js | formFieldEditedOnANonsecurePage": {
    "message": "Form field edited on a non-secure page"
  },
  "security/SecurityPanel.js | hashAlgorithm": {
    "message": "Hash algorithm"
  },
  "security/SecurityPanel.js | hideFullDetails": {
    "message": "Hide full details"
  },
  "security/SecurityPanel.js | info": {
    "message": "Info"
  },
  "security/SecurityPanel.js | insecureSha": {
    "message": "insecure (SHA-1)"
  },
  "security/SecurityPanel.js | issuedAt": {
    "message": "Issued at"
  },
  "security/SecurityPanel.js | issuer": {
    "message": "Issuer"
  },
  "security/SecurityPanel.js | keyExchange": {
    "message": "Key exchange"
  },
  "security/SecurityPanel.js | keyExchangeGroup": {
    "message": "Key exchange group"
  },
  "security/SecurityPanel.js | logId": {
    "message": "Log ID"
  },
  "security/SecurityPanel.js | logName": {
    "message": "Log name"
  },
  "security/SecurityPanel.js | mainOrigin": {
    "message": "Main origin"
  },
  "security/SecurityPanel.js | mainOriginNonsecure": {
    "message": "Main origin (non-secure)"
  },
  "security/SecurityPanel.js | mainOriginSecure": {
    "message": "Main origin (secure)"
  },
  "security/SecurityPanel.js | missing": {
    "message": "missing"
  },
  "security/SecurityPanel.js | mixedContent": {
    "message": "mixed content"
  },
  "security/SecurityPanel.js | na": {
    "message": "(n/a)"
  },
  "security/SecurityPanel.js | nonsecureForm": {
    "message": "non-secure form"
  },
  "security/SecurityPanel.js | nonsecureOrigins": {
    "message": "Non-secure origins"
  },
  "security/SecurityPanel.js | noSecurityDetailsAreAvailableFor": {
    "message": "No security details are available for this origin."
  },
  "security/SecurityPanel.js | noSecurityInformation": {
    "message": "No security information"
  },
  "security/SecurityPanel.js | notSecure": {
    "message": "Not secure"
  },
  "security/SecurityPanel.js | notSecureBroken": {
    "message": "Not secure (broken)"
  },
  "security/SecurityPanel.js | obsoleteConnectionSettings": {
    "message": "obsolete connection settings"
  },
  "security/SecurityPanel.js | openFullCertificateDetails": {
    "message": "Open full certificate details"
  },
  "security/SecurityPanel.js | origin": {
    "message": "Origin"
  },
  "security/SecurityPanel.js | overview": {
    "message": "Overview"
  },
  "security/SecurityPanel.js | possibleSpoofingUrl": {
    "message": "Possible spoofing URL"
  },
  "security/SecurityPanel.js | protocol": {
    "message": "Protocol"
  },
  "security/SecurityPanel.js | publickeypinningBypassed": {
    "message": "Public-Key-Pinning bypassed"
  },
  "security/SecurityPanel.js | publickeypinningWasBypassedByA": {
    "message": "Public-Key-Pinning was bypassed by a local root certificate."
  },
  "security/SecurityPanel.js | reloadThePageToRecordRequestsFor": {
    "message": "Reload the page to record requests for HTTP resources."
  },
  "security/SecurityPanel.js | reloadToViewDetails": {
    "message": "Reload to view details"
  },
  "security/SecurityPanel.js | resources": {
    "message": "Resources"
  },
  "security/SecurityPanel.js | rsaKeyExchangeIsObsoleteEnableAn": {
    "message": "RSA key exchange is obsolete. Enable an ECDHE-based cipher suite."
  },
  "security/SecurityPanel.js | san": {
    "message": "SAN"
  },
  "security/SecurityPanel.js | sct": {
    "message": "SCT"
  },
  "security/SecurityPanel.js | secure": {
    "message": "Secure"
  },
  "security/SecurityPanel.js | secureConnectionSettings": {
    "message": "secure connection settings"
  },
  "security/SecurityPanel.js | secureOrigins": {
    "message": "Secure origins"
  },
  "security/SecurityPanel.js | securityOverview": {
    "message": "Security overview"
  },
  "security/SecurityPanel.js | showFullDetails": {
    "message": "Show full details"
  },
  "security/SecurityPanel.js | showLess": {
    "message": "Show less"
  },
  "security/SecurityPanel.js | showMoreSTotal": {
    "message": "Show more ({PH1} total)"
  },
  "security/SecurityPanel.js | signatureAlgorithm": {
    "message": "Signature algorithm"
  },
  "security/SecurityPanel.js | signatureData": {
    "message": "Signature data"
  },
  "security/SecurityPanel.js | sIsObsoleteEnableAnAesgcmbased": {
    "message": "{PH1} is obsolete. Enable an AES-GCM-based cipher suite."
  },
  "security/SecurityPanel.js | sIsObsoleteEnableTlsOrLater": {
    "message": "{PH1} is obsolete. Enable TLS 1.2 or later."
  },
  "security/SecurityPanel.js | source": {
    "message": "Source"
  },
  "security/SecurityPanel.js | subject": {
    "message": "Subject"
  },
  "security/SecurityPanel.js | subjectAlternativeNameMissing": {
    "message": "Subject Alternative Name missing"
  },
  "security/SecurityPanel.js | theCertificateChainForThisSite": {
    "message": "The certificate chain for this site contains a certificate signed using SHA-1."
  },
  "security/SecurityPanel.js | theCertificateForThisSiteDoesNot": {
    "message": "The certificate for this site does not contain a Subject Alternative Name extension containing a domain name or IP address."
  },
  "security/SecurityPanel.js | theCertificateForThisSiteExpires": {
    "message": "The certificate for this site expires in less than 48 hours and needs to be renewed."
  },
  "security/SecurityPanel.js | theConnectionToThisSiteIs": {
    "message": "The connection to this site is encrypted and authenticated using {PH1}, {PH2}, and {PH3}."
  },
  "security/SecurityPanel.js | theConnectionToThisSiteIsUsingA": {
    "message": "The connection to this site is using a valid, trusted server certificate issued by {PH1}."
  },
  "security/SecurityPanel.js | theSecurityDetailsAboveAreFrom": {
    "message": "The security details above are from the first inspected response."
  },
  "security/SecurityPanel.js | theSecurityOfThisPageIsUnknown": {
    "message": "The security of this page is unknown."
  },
  "security/SecurityPanel.js | theServerSignatureUsesShaWhichIs": {
    "message": "The server signature uses SHA-1, which is obsolete. Enable a SHA-2 signature algorithm instead. (Note this is different from the signature in the certificate.)"
  },
  "security/SecurityPanel.js | thisIsAnErrorPage": {
    "message": "This is an error page."
  },
  "security/SecurityPanel.js | thisOriginIsANonhttpsSecure": {
    "message": "This origin is a non-HTTPS secure origin."
  },
  "security/SecurityPanel.js | thisPageHasANonhttpsSecureOrigin": {
    "message": "This page has a non-HTTPS secure origin."
  },
  "security/SecurityPanel.js | thisPageIncludesAFormWithA": {
    "message": "This page includes a form with a non-secure \"action\" attribute."
  },
  "security/SecurityPanel.js | thisPageIncludesHttpResources": {
    "message": "This page includes HTTP resources."
  },
  "security/SecurityPanel.js | thisPageIncludesResourcesThat": {
    "message": "This page includes resources that were loaded with certificate errors."
  },
  "security/SecurityPanel.js | thisPageIsDangerousFlaggedBy": {
    "message": "This page is dangerous (flagged by Google Safe Browsing)."
  },
  "security/SecurityPanel.js | thisPageIsInsecureUnencrypted": {
    "message": "This page is insecure (unencrypted HTTP)."
  },
  "security/SecurityPanel.js | thisPageIsNotSecure": {
    "message": "This page is not secure."
  },
  "security/SecurityPanel.js | thisPageIsNotSecureBrokenHttps": {
    "message": "This page is not secure (broken HTTPS)."
  },
  "security/SecurityPanel.js | thisPageIsSecureValidHttps": {
    "message": "This page is secure (valid HTTPS)."
  },
  "security/SecurityPanel.js | thisPageIsSuspicious": {
    "message": "This page is suspicious"
  },
  "security/SecurityPanel.js | thisPageIsSuspiciousFlaggedBy": {
    "message": "This page is suspicious (flagged by Chrome)."
  },
  "security/SecurityPanel.js | thisRequestCompliesWithChromes": {
    "message": "This request complies with Chrome's Certificate Transparency policy."
  },
  "security/SecurityPanel.js | thisRequestDoesNotComplyWith": {
    "message": "This request does not comply with Chrome's Certificate Transparency policy."
  },
  "security/SecurityPanel.js | thisResponseWasLoadedFromCache": {
    "message": "This response was loaded from cache. Some security details might be missing."
  },
  "security/SecurityPanel.js | thisSiteIsMissingAValidTrusted": {
    "message": "This site is missing a valid, trusted certificate ({PH1})."
  },
  "security/SecurityPanel.js | thisSitesHostnameLooksSimilarToS": {
    "message": "This site's hostname looks similar to {PH1}. Attackers sometimes mimic sites by making small, hard-to-see changes to the domain name.\n\nIf you believe this is shown in error please visit https://bugs.chromium.org/p/chromium/issues/entry?template=Safety+Tips+Appeals."
  },
  "security/SecurityPanel.js | toCheckThisPagesStatusVisit": {
    "message": "To check this page's status, visit g.co/safebrowsingstatus."
  },
  "security/SecurityPanel.js | unknownCanceled": {
    "message": "Unknown / canceled"
  },
  "security/SecurityPanel.js | validAndTrusted": {
    "message": "valid and trusted"
  },
  "security/SecurityPanel.js | validationStatus": {
    "message": "Validation status"
  },
  "security/SecurityPanel.js | validFrom": {
    "message": "Valid from"
  },
  "security/SecurityPanel.js | validUntil": {
    "message": "Valid until"
  },
  "security/SecurityPanel.js | viewCertificate": {
    "message": "View certificate"
  },
  "security/SecurityPanel.js | viewDRequestInNetworkPanel": {
    "message": "View {PH1} request in Network Panel"
  },
  "security/SecurityPanel.js | viewDRequestsInNetworkPanel": {
    "message": "View {PH1} requests in Network Panel"
  },
  "security/SecurityPanel.js | viewRequestsInNetworkPanel": {
    "message": "View requests in Network Panel"
  },
  "security/SecurityPanel.js | youHaveRecentlyAllowedContent": {
    "message": "You have recently allowed content loaded with certificate errors (such as scripts or iframes) to run on this site."
  },
  "security/SecurityPanel.js | youHaveRecentlyAllowedNonsecure": {
    "message": "You have recently allowed non-secure content (such as scripts or iframes) to run on this site."
  },
  "security/SecurityPanel.js | yourConnectionToThisOriginIsNot": {
    "message": "Your connection to this origin is not secure."
  },
  "security/SecurityPanel.js | yourPageRequestedNonsecure": {
    "message": "Your page requested non-secure resources that were blocked."
  },
  "settings/FrameworkBlackboxSettingsTab.js | addFilenamePattern": {
    "message": "Add filename pattern"
  },
  "settings/FrameworkBlackboxSettingsTab.js | addPattern": {
    "message": "Add pattern..."
  },
  "settings/FrameworkBlackboxSettingsTab.js | behavior": {
    "message": "Behavior"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackbox": {
    "message": "Blackbox"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackboxContentScripts": {
    "message": "Blackbox content scripts"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackboxContentScriptsExtension": {
    "message": "Blackbox content scripts (extension scripts in the page)"
  },
  "settings/FrameworkBlackboxSettingsTab.js | blackboxScriptsWhoseNamesMatchS": {
    "message": "Blackbox scripts whose names match '{PH1}'"
  },
  "settings/FrameworkBlackboxSettingsTab.js | debuggerWillSkipThroughThe": {
    "message": "Debugger will skip through the scripts and will not stop on exceptions thrown by them."
  },
  "settings/FrameworkBlackboxSettingsTab.js | disabled": {
    "message": "Disabled"
  },
  "settings/FrameworkBlackboxSettingsTab.js | frameworkBlackboxing": {
    "message": "Framework Blackboxing"
  },
  "settings/FrameworkBlackboxSettingsTab.js | noBlackboxedPatterns": {
    "message": "No blackboxed patterns"
  },
  "settings/FrameworkBlackboxSettingsTab.js | pattern": {
    "message": "Pattern"
  },
  "settings/FrameworkBlackboxSettingsTab.js | patternAlreadyExists": {
    "message": "Pattern already exists"
  },
  "settings/FrameworkBlackboxSettingsTab.js | patternCannotBeEmpty": {
    "message": "Pattern cannot be empty"
  },
  "settings/FrameworkBlackboxSettingsTab.js | patternMustBeAValidRegular": {
    "message": "Pattern must be a valid regular expression"
  },
  "settings/KeybindsSettingsTab.js | addAShortcut": {
    "message": "Add a shortcut"
  },
  "settings/KeybindsSettingsTab.js | confirmChanges": {
    "message": "Confirm changes"
  },
  "settings/KeybindsSettingsTab.js | discardChanges": {
    "message": "Discard changes"
  },
  "settings/KeybindsSettingsTab.js | editShortcut": {
    "message": "Edit shortcut"
  },
  "settings/KeybindsSettingsTab.js | FullListOfDevtoolsKeyboard": {
    "message": "Full list of DevTools keyboard shortcuts and gestures"
  },
  "settings/KeybindsSettingsTab.js | keyboardShortcutsList": {
    "message": "Keyboard shortcuts list"
  },
  "settings/KeybindsSettingsTab.js | matchShortcutsFromPreset": {
    "message": "Match shortcuts from preset"
  },
  "settings/KeybindsSettingsTab.js | noShortcutForAction": {
    "message": "No shortcut for action"
  },
  "settings/KeybindsSettingsTab.js | removeShortcut": {
    "message": "Remove shortcut"
  },
  "settings/KeybindsSettingsTab.js | ResetShortcutsForAction": {
    "message": "Reset shortcuts for action"
  },
  "settings/KeybindsSettingsTab.js | RestoreDefaultShortcuts": {
    "message": "Restore default shortcuts"
  },
  "settings/KeybindsSettingsTab.js | shortcutModified": {
    "message": "Shortcut modified"
  },
  "settings/KeybindsSettingsTab.js | shortcuts": {
    "message": "Shortcuts"
  },
  "settings/KeybindsSettingsTab.js | shortcutsCannotContainOnly": {
    "message": "Shortcuts cannot contain only modifier keys."
  },
  "settings/KeybindsSettingsTab.js | thisShortcutIsInUseByS": {
    "message": "This shortcut is in use by {PH1}: {PH2}."
  },
  "settings/ModuleUIStrings.js | blackboxing": {
    "message": "Blackboxing"
  },
  "settings/ModuleUIStrings.js | documentation": {
    "message": "Documentation"
  },
  "settings/ModuleUIStrings.js | experiments": {
    "message": "Experiments"
  },
  "settings/ModuleUIStrings.js | preferences": {
    "message": "Preferences"
  },
  "settings/ModuleUIStrings.js | settings": {
    "message": "Settings"
  },
  "settings/ModuleUIStrings.js | shortcuts": {
    "message": "Shortcuts"
  },
  "settings/SettingsScreen.js | experiments": {
    "message": "Experiments"
  },
  "settings/SettingsScreen.js | oneOrMoreSettingsHaveChanged": {
    "message": "One or more settings have changed which requires a reload to take effect."
  },
  "settings/SettingsScreen.js | preferences": {
    "message": "Preferences"
  },
  "settings/SettingsScreen.js | restoreDefaultsAndReload": {
    "message": "Restore defaults and reload"
  },
  "settings/SettingsScreen.js | settings": {
    "message": "Settings"
  },
  "settings/SettingsScreen.js | shortcuts": {
    "message": "Shortcuts"
  },
  "settings/SettingsScreen.js | theseExperimentsAreParticularly": {
    "message": "These experiments are particularly unstable. Enable at your own risk."
  },
  "settings/SettingsScreen.js | theseExperimentsCouldBeUnstable": {
    "message": "These experiments could be unstable or unreliable and may require you to restart DevTools."
  },
  "settings/SettingsScreen.js | warning": {
    "message": "WARNING:"
  },
  "web_audio/AudioContextContentBuilder.js | audiocontext": {
    "message": "AudioContext"
  },
  "web_audio/AudioContextContentBuilder.js | callbackBufferSize": {
    "message": "Callback Buffer Size"
  },
  "web_audio/AudioContextContentBuilder.js | callbackInterval": {
    "message": "Callback Interval"
  },
  "web_audio/AudioContextContentBuilder.js | currentTime": {
    "message": "Current Time"
  },
  "web_audio/AudioContextContentBuilder.js | maxOutputChannels": {
    "message": "Max Output Channels"
  },
  "web_audio/AudioContextContentBuilder.js | offlineaudiocontext": {
    "message": "OfflineAudioContext"
  },
  "web_audio/AudioContextContentBuilder.js | renderCapacity": {
    "message": "Render Capacity"
  },
  "web_audio/AudioContextContentBuilder.js | sampleRate": {
    "message": "Sample Rate"
  },
  "web_audio/AudioContextContentBuilder.js | state": {
    "message": "State"
  },
  "web_audio/AudioContextSelector.js | audioContextS": {
    "message": "Audio context: {PH1}"
  },
  "web_audio/AudioContextSelector.js | noRecordings": {
    "message": "(no recordings)"
  },
  "web_audio/ModuleUIStrings.js | audio": {
    "message": "audio"
  },
  "web_audio/ModuleUIStrings.js | webaudio": {
    "message": "WebAudio"
  },
  "web_audio/WebAudioView.js | openAPageThatUsesWebAudioApiTo": {
    "message": "Open a page that uses Web Audio API to start monitoring."
  }
}
