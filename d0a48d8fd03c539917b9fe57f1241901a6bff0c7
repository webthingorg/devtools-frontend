{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "31b1e776_b0d829d3",
        "filename": "front_end/panels/application/preloading/components/UsedPreloadingView.ts",
        "patchSetId": 33
      },
      "lineNbr": 39,
      "author": {
        "id": 1541419
      },
      "writtenOn": "2023-10-02T08:57:05Z",
      "side": 1,
      "message": "Before this CL, those message were abbrev of \n\n- (Not attempted) Preload was not attempted in the previous page\n- (Successful) Preload was used successfully\n- (Failed) Preload failed.\n\nThis CL changes them as follows:\n\n- Preload was not attempted in the previous page\n- Preload was Prefetch and used successfully\n- Preload was Prefetch and failed.\n\nSo, I think abbrev should be\n\n- (Not attempted) Preload was not attempted in the previous page\n- (Prefetch succeed) Preload was Prefetch and used successfully\n- (Prefetch failed) Preload was Prefetch and failed.\n\nHow about `s/successful/succeeded/g`?",
      "revId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5254540_678efcdc",
        "filename": "front_end/panels/application/preloading/components/UsedPreloadingView.ts",
        "patchSetId": 33
      },
      "lineNbr": 182,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-10-02T08:21:55Z",
      "side": 1,
      "message": "There\u0027s much more space here in the mock. Let\u0027s have it defined in CSS, not in the markup.",
      "range": {
        "startLine": 182,
        "startChar": 48,
        "endLine": 182,
        "endChar": 52
      },
      "revId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bda92cc_ad3f00b6",
        "filename": "front_end/panels/application/preloading/components/UsedPreloadingView.ts",
        "patchSetId": 33
      },
      "lineNbr": 189,
      "author": {
        "id": 1541419
      },
      "writtenOn": "2023-10-02T08:57:05Z",
      "side": 1,
      "message": "I tried it, but I feel that this tooltip is very difficult to find. (I see it because I know it from source code, but I don\u0027t think organic user can find it.) I prefer to show the message in raw text.\nAt least, it\u0027s good to expand it to whole \u003cspan\u003e, rather than icon. (But still difficult to find.)",
      "revId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfdff5b0_9b9bf79e",
        "filename": "front_end/panels/application/preloading/components/UsedPreloadingView.ts",
        "patchSetId": 33
      },
      "lineNbr": 189,
      "author": {
        "id": 1197619
      },
      "writtenOn": "2023-10-02T17:50:25Z",
      "side": 1,
      "message": "I think we should stick with the design as much as possible though. If we think the design is hard to understand, we should have a workflow of ask Peter for new design -\u003e implement that, instead of changing it while implementing. (Ideally we would note that we are unhappy with it when Peter first gave us the designs.)",
      "parentUuid": "7bda92cc_ad3f00b6",
      "revId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50642494_f3e029aa",
        "filename": "front_end/panels/application/preloading/components/UsedPreloadingView.ts",
        "patchSetId": 33
      },
      "lineNbr": 189,
      "author": {
        "id": 1541419
      },
      "writtenOn": "2023-10-03T05:12:11Z",
      "side": 1,
      "message": "I love the new design at the first look, but we have now found the wireframe doesn\u0027t have failure case for \"Preload status for this page\" with this Robert\u0027s effort. (Failure on \"Preloads initialized by this page\" is not a problem because we can see details in Preloads panel. But we don\u0027t have such thing for \"this page\" other than here.) I think it\u0027s good time to step back to design and reconsider failure case.",
      "parentUuid": "cfdff5b0_9b9bf79e",
      "revId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MIN"],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MIN"],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0a48d8fd03c539917b9fe57f1241901a6bff0c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}