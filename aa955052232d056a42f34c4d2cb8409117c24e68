{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "990725cd_8b920ae6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1475325
      },
      "writtenOn": "2021-02-09T06:21:19Z",
      "side": 1,
      "message": "PTAL, thank you!",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15631dac_08c79ad3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-02-09T09:06:32Z",
      "side": 1,
      "message": "Perhaps we could simplify it a bit more? It looks like right now the AccessibilityNode uses both AXNodes and AccessibilityNodes to traverse the tree. How about the following?\n\n1) We move the extended attribute to the AXNode so that AXNode contains the complete data for traversing.\n2) We extract tree traversal into a separate class/module so that we can test the traversing independently.\n3) We add two events NodeSelected and NodeAdded to notify the tree component about the nodes so that we don\u0027t need to send the axTree down to the nodes.\n\nI think in this case it\u0027d be a bit simpler and easier to test. WDYT?\n\nP.S. I have a local branch where I tried this ideas out. For some reason I cannot upload it at the moment. But let me know if you want to have a look and discuss it.",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "249d3fae_bd4c0273",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-02-09T09:35:35Z",
      "side": 1,
      "message": "Uploaded the CL https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2678693\n\nPerhaps it can be simplified even more and it looks like we might not need to keep track of the rendered nodes if the selectedAXNode would be an instance of AXNode",
      "parentUuid": "15631dac_08c79ad3",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b74e0e4f_191a76e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2021-02-09T23:54:33Z",
      "side": 1,
      "message": "It\u0027s a bit hard to see what you\u0027re suggesting, since there are so many changes.\n\nI uploaded a version to allow comparing against Annabel\u0027s current patch: https://crrev.com/c/2684029/1..2 - however, it\u0027s still a lot to take in.\n\nIt looks like this is actually three or more separate changes:\n\n1) some code structure nits e.g. adding early returns\n2) pulling the tree traversal logic out into its own class, and pulling `expanded` into AXNode\n3) adding `NodeSelectedEvent` and `NodeAddedEvent` and wiring up the user interactions using those events.\n\nCould Annabel land this change more or less as-is (perhaps using assertNotNull()), and then you could land your suggested changes as a series of follow-up changes, which Annabel would review?\n\nI think that would be less effort for everyone over-all than Annabel trying to understand make these changes herself before this CL is landed. \n\nThat would mean Annabel can more quickly move on to writing tests based on your changes, as well.",
      "parentUuid": "249d3fae_bd4c0273",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebb69943_f089b57f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-10T02:06:33Z",
      "side": 1,
      "message": "+1. I think it\u0027s better for velocity and for internship outcomes to have Annabel land this patch, or a version of it before she finishes. Alex, Is there a version of this patch that would be acceptable to the devtools team without the changes you\u0027ve suggested in https://crrev.com/c/2678693? I mostly want to avoid overburdening Annabel in this week, effectively her last full time week.\n\nIf this CL lands, either myself or Alex can then land the follow up to extract traversal logic to it\u0027s own class/util library, and implement the events (I\u0027m more than happy to do it, for the record, although recognise that you\u0027ve basically already done the hard work, heh). \n\nIn terms of using AXNode for traversal, I was thinking of it more as AXNode is just meant to represent the SDK.AccessibilityNode. It contains all of the attributes of an accessibility node in the tree (name, role, children etc). The AccessibilityNode component is all of the logic required to present that node, so the expanded/selected state lives as a member of that class. These states aren\u0027t related to the actual data representing a node in the tree, it\u0027s just presentational. WDYT?",
      "parentUuid": "b74e0e4f_191a76e5",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f73a012_481eba13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-02-10T06:52:08Z",
      "side": 1,
      "message": "I think we can land this CL (maybe not even solving the if checks/assertNotNull right now). We\u0027d need some tests for the keyboard navigation but I think we can address it later.",
      "parentUuid": "ebb69943_f089b57f",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c81a2493_5ae20921",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-10T23:25:52Z",
      "side": 1,
      "message": "lgtm once test failures are fixed up.\n\nJust need to create an instance of the AccessibilityTree in the tests new using Elements.AccessibilityTree.AccessibilityTree, and passing that through to each makeAXNode to ensure the tree isn\u0027t null and doesn\u0027t early exit on any null checks.",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d704ccda_85785ec8",
        "filename": "front_end/elements/AccessibilityTree.ts",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-02-09T09:17:30Z",
      "side": 1,
      "message": "instead of wasShown I believe it\u0027s possible to use adoptedCallback. See https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dbf2859_a9a6a50f",
        "filename": "front_end/elements/AccessibilityTree.ts",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1002537
      },
      "writtenOn": "2021-02-09T23:54:33Z",
      "side": 1,
      "message": "We want to do this whenever the user switches to the accessibility tree, not just when it\u0027s instantiated, since setting the selected node also causes it to be focused.",
      "parentUuid": "d704ccda_85785ec8",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3135c2a3_b0ab2548",
        "filename": "front_end/elements/AccessibilityTree.ts",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-02-10T06:52:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5dbf2859_a9a6a50f",
      "revId": "aa955052232d056a42f34c4d2cb8409117c24e68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}