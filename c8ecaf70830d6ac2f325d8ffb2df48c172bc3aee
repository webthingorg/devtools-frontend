{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "17dd0c97_80dc1848",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-10-26T18:08:12Z",
      "side": 1,
      "message": "General direction LGTM, as per previous discussions. +1 to Eric\u0027s feedback.",
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcd45057_74ef68ab",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-10-26T15:29:47Z",
      "side": 1,
      "message": "Might be a little simpler to return this, and add the returnByValue:true option, and then not do a JSON.parse.",
      "range": {
        "startLine": 80,
        "startChar": 42,
        "endLine": 80,
        "endChar": 70
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94284d37_19ee2e23",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-10-26T18:08:12Z",
      "side": 1,
      "message": "That seems to match what we\u0027re doing otherwise more closely. +1",
      "parentUuid": "fcd45057_74ef68ab",
      "range": {
        "startLine": 80,
        "startChar": 42,
        "endLine": 80,
        "endChar": 70
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b602ca76_1ab77db2",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-27T09:56:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94284d37_19ee2e23",
      "range": {
        "startLine": 80,
        "startChar": 42,
        "endLine": 80,
        "endChar": 70
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "820fdfd8_ebe3a92e",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-10-26T15:29:47Z",
      "side": 1,
      "message": "hook is not a very descriptive name, please choose a name giving it a clearer purpose",
      "range": {
        "startLine": 171,
        "startChar": 12,
        "endLine": 171,
        "endChar": 16
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "927384aa_13dd43e8",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-27T09:56:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "820fdfd8_ebe3a92e",
      "range": {
        "startLine": 171,
        "startChar": 12,
        "endLine": 171,
        "endChar": 16
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86d43556_9518b7d7",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-10-26T15:29:47Z",
      "side": 1,
      "message": "Another reason not to name it hook.",
      "range": {
        "startLine": 215,
        "startChar": 94,
        "endLine": 215,
        "endChar": 114
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f79aa54_98ded50a",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-27T09:56:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86d43556_9518b7d7",
      "range": {
        "startLine": 215,
        "startChar": 94,
        "endLine": 215,
        "endChar": 114
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aac06778_22207481",
        "filename": "front_end/sdk/RemoteObject.js",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-10-26T15:29:47Z",
      "side": 1,
      "message": "If you make these changes to EvalNode or a new subclass you won\u0027t need to worry about disabling the test and we\u0027ll be able to make additional customizations without mixing our code with the code for handling JavaScript.",
      "range": {
        "startLine": 357,
        "startChar": 64,
        "endLine": 357,
        "endChar": 76
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fae8425_c7a2d57d",
        "filename": "front_end/sdk/RemoteObject.js",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-26T18:06:00Z",
      "side": 1,
      "message": "Pulling this feature into EvalNode or my own subclass would mean basically copying RemoteObjectImpl. I don\u0027t think that\u0027s reasonable. If you don\u0027t like the hook mechanism, what do you think about replacing it with an overridable _createRemoteObject method on RemoteObjectImpl?",
      "parentUuid": "aac06778_22207481",
      "range": {
        "startLine": 357,
        "startChar": 64,
        "endLine": 357,
        "endChar": 76
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc0733f_97dabd1a",
        "filename": "front_end/sdk/RemoteObject.js",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-10-27T13:42:54Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "6fae8425_c7a2d57d",
      "range": {
        "startLine": 357,
        "startChar": 64,
        "endLine": 357,
        "endChar": 76
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7aa4475_492a9cd1",
        "filename": "front_end/sdk/RemoteObject.js",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-27T16:54:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5dc0733f_97dabd1a",
      "range": {
        "startLine": 357,
        "startChar": 64,
        "endLine": 357,
        "endChar": 76
      },
      "revId": "c8ecaf70830d6ac2f325d8ffb2df48c172bc3aee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}