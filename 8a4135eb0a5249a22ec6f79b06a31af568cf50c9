{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6276e0b8_844a91de",
        "filename": "front_end/formatter/SourceFormatter.js",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-27T15:15:26Z",
      "side": 0,
      "message": "I stared at this code for like 5 minutes. I *think* your transformation is fine, expect one thing:\n\nThe old code updated `this._formattedSourceCodes` before we retrieve the content and format. Could this potentially lead to a race where we format the same source code twice? E.g. if we run this code and meanwhile some other piece of code checks `this._formattedSourceCodes`, then in the old version there would already be an entry in there and it would be enough to just wait for the result promise, now we would queue a second formatting operation.",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 155,
        "endChar": 67
      },
      "revId": "8a4135eb0a5249a22ec6f79b06a31af568cf50c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ead619b_7b11de63",
        "filename": "front_end/formatter/SourceFormatter.js",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-10-27T15:39:01Z",
      "side": 0,
      "message": "Yeah, this diff is quite unfortunate ðŸ˜ž\n\nIiuc, the callback in the promise runs in the next task, which would be after we return in `format` here, would it not? E.g. we request the content and format it in the callback, which afaik runs after we called `this._formattedSourceCodes.set`.\n\nEven then, I don\u0027t think we will run into this race-condition for now. However, I do agree that this code could use a cleanup to restructure how all the infra is wired.",
      "parentUuid": "6276e0b8_844a91de",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 155,
        "endChar": 67
      },
      "revId": "8a4135eb0a5249a22ec6f79b06a31af568cf50c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ed892f0_8ba79661",
        "filename": "front_end/formatter/SourceFormatter.js",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-27T15:44:44Z",
      "side": 0,
      "message": "Ahh, you are right I missed where the `await uiSourceCode.requestContent()` moved into the Promise construction.\n\nAt least the new code is cleaner with one less promise indirection gone.",
      "parentUuid": "3ead619b_7b11de63",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 155,
        "endChar": 67
      },
      "revId": "8a4135eb0a5249a22ec6f79b06a31af568cf50c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}