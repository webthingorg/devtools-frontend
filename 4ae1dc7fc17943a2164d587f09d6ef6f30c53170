{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "71a8070a_3903d04b",
        "filename": "test/conductor/frontend_tab.ts",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-06-21T05:10:02Z",
      "side": 1,
      "message": "Do I understand correctly that `globalThis.startTestLogging` carries across DevTools session because it stashes state in local storage? Maybe we should add a comment that thats why it\u0027s here and not below in `reload`.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "466bfbeb_0e783513",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-06-20T12:53:30Z",
      "side": 1,
      "message": "I\u0027m a bit reluctant to have the assertions below regarding ve logging in all `reloadDevTools` calls considering that they are used in many tests that are not related to ve logging.\n\nIt might be confusing for the people that used `reloadDevTools` and received a ve logging related assertion error that is totally not related to their tests.\n\nWDYT of adding tests specifically for VE logging in respective e2e test files? (like elements panel etc?)",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bbe2f75_5bcf3f86",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-06-20T14:12:06Z",
      "side": 1,
      "message": "I thought about and I don\u0027t think we can have a adequate coverage this way. One has to practically repeat all tests performing interactions twice, once without VE assertions and once with them.",
      "parentUuid": "466bfbeb_0e783513",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb65a27a_bf53717d",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-06-20T15:06:35Z",
      "side": 1,
      "message": "I didn\u0027t exactly understand. As far as I understand the assertions below are only for reload. So, I thought we can write tests for different panels and assert what they log on reloads.\n\nWe can have these tests in a snapshot fashion and one can update relevant test if the VE logging situation for that case is changed.\n\nI believe any failure in the assertions below would be annoying for us since:\n* the failure won\u0027t give enough context (i.e. a test name that shows what it tests specifically, failure message that shows exactly what I need to change).\n* the failure won\u0027t be directly related to the feature I\u0027m working on. (e.g. I changed the jslogContext of a button in Animations panel with VE logging \u0026 the view transitions tests are broken).\n---\nThough if you think it\u0027s a tradeoff we can take, WDYT of getting another view from someone else, maybe Simon? :)",
      "parentUuid": "0bbe2f75_5bcf3f86",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6744cf8f_7c029501",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-06-20T15:17:13Z",
      "side": 1,
      "message": "1) Reload is only beginning. I plan to add VE assertions to most of the e2e test helpers. For instance `navigateToConsoleTab` will expect a click on the tab header followed by he impressions for the console panel.\n2) I put quite some effort in making the failure message easy to understand, see e.g. https://ci.chromium.org/ui/labs/p/devtools-frontend/inv/build-8744683876165125409/test/e2e%2Femulation%2Fcustom-devices_test.ts%3A%20Custom%20devices%2F%22before%20each%22%20hook%20for%20%22can%20add%20and%20then%20edit%20a%20custom%20device%20with%20UA-CH%20emulation%22/variant/e3b0c44298fc1c14?resultIndex\u003d0\n3) This is why I am adding these to the e2e tests, not unit tests. We should not be writing e2e tests to test a tiny aspect of a feature, but to test it end-to-end, which IMO includes logging. Your example with jslogContext of a button in Animations seems to be WAI to me.\n\nAdding Simon for a second opinion.",
      "parentUuid": "bb65a27a_bf53717d",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b730daf1_b412e2ed",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-06-21T05:10:02Z",
      "side": 1,
      "message": "I don\u0027t mind having a reload variant that checks VEs, but I\u0027d like to name it a bit more explicitly, since now we have two `reloadDevTools` functions and it\u0027s not clear which one does what or which one should use.\n\nMaybe we should call this one `reloadDevToolsWithVECheck`?\n\nJust to be clear though. These VE checks will only happen for tests that actually use this new `reload` function. The vast majority relies on the `reset` call inbetween tests, that enables VE logging, but does not do any actual checking.",
      "parentUuid": "6744cf8f_7c029501",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc1c44dc_e9558305",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-06-21T07:49:36Z",
      "side": 1,
      "message": "1) The name clash also bothers me, but I am not sure if `reloadDevToolsWithVECheck` is a good idea as all the other VE assertions will be in helper functions like `navigateToConsoleTab` and calling out VE Check in this one seems strange. I am not feeling strongly though, if you don\u0027t have an alternative name in mind and thinks it is important to avoid the name clash, I could live with `reloadDevToolsWithVECheck` \n\n2) Yes, I realize this is only for explicit calls to `reloadDevTools`. I am not sure we can make it work reliably timing-wise for the regular `reload` and checking \n for VE in the conductor seems to be a layering violation. However I think we get enough coverage with the explicit call to `reloadDevTools`.",
      "parentUuid": "b730daf1_b412e2ed",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51eee963_cba33f86",
        "filename": "test/e2e/helpers/cross-tool-helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-06-21T08:01:42Z",
      "side": 1,
      "message": "I\u0027m fine with re-using `reloadDevTools`, but I\u0027d expect folks to use one or the other randomly. At the very least I suggest adding a JSDoc comment that calls out that the new version checks VE so folks have chance to catch it when using auto-complete in their IDE.",
      "parentUuid": "bc1c44dc_e9558305",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e6b62fb_5021db13",
        "filename": "test/e2e/helpers/visual-logging-helpers.ts",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-06-21T05:10:02Z",
      "side": 1,
      "message": "`.values()` not required. You can spread a `Set` directly.\n\nOnce we update Node to a more recent version of V8 we can use `const missing \u003d expectedSet.difference(actualSet);` :)",
      "range": {
        "startLine": 32,
        "startChar": 33,
        "endLine": 32,
        "endChar": 42
      },
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c857f6a_3ea23a2b",
        "filename": "test/e2e/helpers/visual-logging-helpers.ts",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-06-21T07:49:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e6b62fb_5021db13",
      "range": {
        "startLine": 32,
        "startChar": 33,
        "endLine": 32,
        "endChar": 42
      },
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "290764dc_fffeaf13",
        "filename": "test/e2e/helpers/visual-logging-helpers.ts",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-06-20T12:53:30Z",
      "side": 1,
      "message": "I wonder how stable these ve impressions for the elements panel will be in the future considering that elements panel can be rendered with different CSS rules in e2e tests (which will contain different number of style-properties sections).\n\nWDYT?",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "201dc837_0f121dc4",
        "filename": "test/e2e/helpers/visual-logging-helpers.ts",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-06-20T14:12:06Z",
      "side": 1,
      "message": "One thing which probably needs clarification is that we only check for the given subset of VE event is present, so unexpected VE events won\u0027t fail the test. I didn\u0027t encounter yet a case where these events won\u0027t be present, but we can always update the expectations if the reality is legitimately different.",
      "parentUuid": "290764dc_fffeaf13",
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc567e8a_cc69fa35",
        "filename": "test/e2e/helpers/visual-logging-helpers.ts",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-06-21T05:10:02Z",
      "side": 1,
      "message": "```\nconst actualImpressionEvent \u003d actualEvents.findLast(event \u003d\u003e \u0027impressions\u0027 in event);\nif (!actualImpressionEvent?.impressions) {\n  assert.fail(...)\n}\n```",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 167,
        "endChar": 3
      },
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd79811c_60317209",
        "filename": "test/e2e/helpers/visual-logging-helpers.ts",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-06-21T07:49:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc567e8a_cc69fa35",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 167,
        "endChar": 3
      },
      "revId": "4ae1dc7fc17943a2164d587f09d6ef6f30c53170",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}