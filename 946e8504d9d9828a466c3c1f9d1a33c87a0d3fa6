{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "57de372f_4770b53b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-26T10:54:06Z",
      "side": 1,
      "message": "In a couple places I\u0027m adding null-checks just to appease the typechecker, but being null would actually be an error, like when this._editor is null. Can I do better than early return if a null-check fails? console.assert isn\u0027t picked up by the typechecker.",
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5640986_0d5c4d21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-26T10:58:58Z",
      "side": 1,
      "message": "LGTM with one nit.\n\nRegarding null checks, you can either do what you\u0027ve done or sometimes we\u0027ve also done a:\n\n```\nif (!crucialThing) {\n  throw new Error(\u0027Could not find crucialThing...\u0027)\n}\n```.\n\nUp to you really. Recognise that neither of these options are ideal but we\u0027re limiting the scope here to TS-ifiying rather than fixing all issues we find along the way.",
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6150a4b_21beceac",
        "filename": "front_end/sources/BreakpointEditDialog.js",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-26T10:58:58Z",
      "side": 1,
      "message": "if this is a callback style function, this probably returns `void` rather than `?`. Can we see if where it\u0027s called we care about the return value?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "912bc00a_71cc6aba",
        "filename": "front_end/sources/BreakpointEditDialog.js",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-26T11:15:28Z",
      "side": 1,
      "message": "We don\u0027t care about the return here, that\u0027s why I put ?\n\nThe one place where we currently instantiate this class the callback returns Promise\u003cvoid\u003e, but since we don\u0027t care about the return, I would prefer not to impose any specific type on the caller.",
      "parentUuid": "a6150a4b_21beceac",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2565516c_a4758471",
        "filename": "front_end/sources/BreakpointEditDialog.js",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-26T11:51:16Z",
      "side": 1,
      "message": "But there\u0027s no point in the caller returning anything if we ignore it, so we should put `void` here?",
      "parentUuid": "912bc00a_71cc6aba",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42ba8e11_15313c54",
        "filename": "front_end/sources/BreakpointEditDialog.js",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-26T12:01:05Z",
      "side": 1,
      "message": "`void` would be wrong here, since the caller is returning a Promise. But why force the caller to use a particular return type at all? We don\u0027t care, so we\u0027re narrowing the interface for no particular effect besides making it harder to use. If the caller wants to return something, even if it\u0027s just a Promise like in this case, why forbid it?",
      "parentUuid": "2565516c_a4758471",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd127a7_cb86885d",
        "filename": "front_end/sources/BreakpointEditDialog.js",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-26T12:07:51Z",
      "side": 1,
      "message": "I want to avoid it because it\u0027s pointless them returning anything because the code that will execute that callback doesn\u0027t care about it.\n\nSo if I\u0027m creating a `BreakpointEditDialog` with:\n\n```\nonFinish: function() { \n  // do stuff async\n  return 4;\n}\n```\n\nI want a type error there, because that return value will be lost and never used by the caller. Therefore we can catch that error at compile time by typing this function correctly as a Promise\u003cvoid\u003e, which signifies to the caller that we expect `onFinish` to be async, but we don\u0027t expect (or deal with) any return value.\n\nUsing ? only serves to reduce the effectiveness of the compiler in this case and if I\u0027m the developer who has misunderstood the `onFinish` function and think I have to return a particular value, I want my compiler to shout at me when I get it wrong.",
      "parentUuid": "42ba8e11_15313c54",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85f02b44_d05a8868",
        "filename": "front_end/sources/BreakpointEditDialog.js",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-10-26T13:15:38Z",
      "side": 1,
      "message": "I don\u0027t want to block this on the return type, so I\u0027m setting this now!",
      "parentUuid": "edd127a7_cb86885d",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "946e8504d9d9828a466c3c1f9d1a33c87a0d3fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}