{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "27436408_43311098",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-14T01:02:37Z",
      "side": 1,
      "message": "I dig it.   \n\nA fairly free-floating return value of each insight is both inline with Handlers and probably best to support our RPP needs, along with supporting LH. SG.\n\nI kinda expect Jack/Andres to have thoughts about this on-demand style of `generateInsight(handlerdata,stuff)`  but.. generally it seems solid. I like it.\n\n\ni could nit on a few things when you\u0027re ready for review but.. highlevel offers no surprises. :)",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1597ca10_02be9364",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-02-14T02:21:17Z",
      "side": 1,
      "message": "andoli@ interested in your high level thoughts on the structure of insights here",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b19c304f_f05d0b70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-02-14T12:11:22Z",
      "side": 1,
      "message": "this LGTM! The only doubt I have is how we\u0027re going to draw the line between what belongs to insights vs handlers vs root-causes vs extras etc. (this is applies to our current architecture in general, not to this change in particular). Do you see \"insights\" as something that\u0027s clearly different from the other modules?",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be9c0a25_a5db437f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-02-14T22:05:41Z",
      "side": 1,
      "message": "Yeah I think insights are different because they contain opinionated advice about things a user should address. I don\u0027t know everything that\u0027s in handlers/root/causes but they seem more like data sources than opinionated advice.",
      "parentUuid": "b19c304f_f05d0b70",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8ee7494_ab03cc17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-02-15T08:30:38Z",
      "side": 1,
      "message": "makes sense, thanks for pointing that out!",
      "parentUuid": "be9c0a25_a5db437f",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18f8641a_055f84ca",
        "filename": "front_end/models/trace/insights/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-02-14T12:11:22Z",
      "side": 1,
      "message": "nit: 2024 :)",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "190abaf0_d6cf6302",
        "filename": "front_end/models/trace/insights/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-02-15T00:09:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18f8641a_055f84ca",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aca06765_91b39c4c",
        "filename": "front_end/models/trace/insights/RenderBlockingRequests.ts",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-02-14T12:11:22Z",
      "side": 1,
      "message": "maybe it\u0027s worth caching this for future calls?",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98484804_32cb0935",
        "filename": "front_end/models/trace/insights/RenderBlockingRequests.ts",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-02-14T22:05:41Z",
      "side": 1,
      "message": "Yeah caching the result somehow seems good. Not sure if we would want the caching logic to be in this function but I will expand on that before this is done.",
      "parentUuid": "aca06765_91b39c4c",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e45fa8e4_30cd3ebf",
        "filename": "front_end/models/trace/insights/RenderBlockingRequests.ts",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-02-15T00:09:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98484804_32cb0935",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9324d12_8898a8c4",
        "filename": "front_end/models/trace/insights/RenderBlockingRequests.ts",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-02-15T08:30:38Z",
      "side": 1,
      "message": "fwiw the approach in other similar helpers is to let the implementation itself own and handle caches. It might be nice if could do that here as well for consistency, but I guess it depends on how everything is assembled in the end so it\u0027s your call.",
      "parentUuid": "e45fa8e4_30cd3ebf",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3080957_14d4b049",
        "filename": "front_end/models/trace/insights/types.ts",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-14T01:02:37Z",
      "side": 1,
      "message": "plenty of handlers export their own types.  i think that\u0027d be fine.",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "989d260d_ae9011d5",
        "filename": "front_end/models/trace/insights/types.ts",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-02-14T02:16:45Z",
      "side": 1,
      "message": "I expect this type to be reused by multiple different insights. Every nav related insight will need to know which part of the trace to look at.",
      "parentUuid": "e3080957_14d4b049",
      "revId": "f8814810b4c05a82b548a9c3557babdbf30b1e1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}