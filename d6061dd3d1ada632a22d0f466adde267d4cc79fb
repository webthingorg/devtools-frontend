{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "524d0ead_52f8da4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2020-11-25T15:35:54Z",
      "side": 1,
      "message": "PTAL",
      "revId": "d6061dd3d1ada632a22d0f466adde267d4cc79fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bd3f64d_8d786ba3",
        "filename": "front_end/elements/ElementsPanel.js",
        "patchSetId": 4
      },
      "lineNbr": 1323,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-11-25T16:20:39Z",
      "side": 1,
      "message": "I think this would suit a baseclass to prevent the duplication, but that\u0027s out-of-scope for this CL. I filed crbug.com/1152792 to track that.",
      "range": {
        "startLine": 1312,
        "startChar": 0,
        "endLine": 1323,
        "endChar": 3
      },
      "revId": "d6061dd3d1ada632a22d0f466adde267d4cc79fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e92160e_c14051c3",
        "filename": "front_end/elements/elements-meta.ts",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-11-25T16:20:39Z",
      "side": 1,
      "message": "I would not have expected this to be necessary. What was the error that you were hitting? If the linter rule has an unexpected issue, please file a bug for it and we can take a look in fixing it.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 54
      },
      "revId": "d6061dd3d1ada632a22d0f466adde267d4cc79fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4643c9cf_6decba3b",
        "filename": "front_end/elements/elements-meta.ts",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-11-25T16:20:39Z",
      "side": 1,
      "message": "Nit: can we extract a method here to avoid the duplication? Ideally this method would be implemented as such:\n\n  contextTypes() {\n    return maybeRetrieveContextTypes(Elements \u003d\u003e [Elements.ElementsPanel.ElementsPanel]);\n  }\n\nThat would avoid the duplication of the `loadedElementsModule` check and makes the retrieval of the type mimic how you would do it with a static import. That would improve searching in the codebase.",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 14
      },
      "revId": "d6061dd3d1ada632a22d0f466adde267d4cc79fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "994fee12_78d1126e",
        "filename": "front_end/elements/elements-meta.ts",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-11-25T16:20:39Z",
      "side": 1,
      "message": "Nit: we should migrate `ActionRegistration` to a `.ts` file so that we can make the typedef an `interface`. Then we can use the optional fields feature in TypeScript, to make these `undefined` usages no longer required. We can do this in a follow-up though.",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 136,
        "endChar": 23
      },
      "revId": "d6061dd3d1ada632a22d0f466adde267d4cc79fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8be8c0e3_55a1746d",
        "filename": "front_end/elements/elements-meta.ts",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-11-25T16:20:39Z",
      "side": 1,
      "message": "If you haven\u0027t done so, can we do 2 small verifications to make sure everything is working as intended?\n\n1. Declare a duplicate binding in a preregistered action. E.g. change \u0027elements.edit-as-html\u0027 to use \u0027Ctrl+Z\u0027 instead of \u0027F2\u0027 and verify that DevTools provides a decent error\n2. Declare a duplicate binding in a legacy action. E.g. change an action in a module.json file to use \u0027Ctrl+Z\u0027 and verify that DevTools provides a decent error.",
      "range": {
        "startLine": 186,
        "startChar": 17,
        "endLine": 186,
        "endChar": 23
      },
      "revId": "d6061dd3d1ada632a22d0f466adde267d4cc79fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}