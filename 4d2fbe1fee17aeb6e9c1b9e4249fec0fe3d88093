{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "60943b53_d0e24381",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 12,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-05-27T10:35:25Z",
      "side": 1,
      "message": "I\u0027d rather avoid this if we can; is this needed for harmony-input? If so, we should not use that and instead use https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/ui/components/input/textInput.css",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2156686b_1920c12b",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 12,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-27T22:02:01Z",
      "side": 1,
      "message": "Yes, for harmony-input and chrome-select. Although only for two classes, I wasn\u0027t sure of another way of easily applying these classes. I\u0027m happy to use textInput.css instead of harmony-input, but would you happen to know of an alternative for chrome-select as well?",
      "parentUuid": "60943b53_d0e24381",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f4c0d28_2d680ff5",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 12,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-06-04T03:50:06Z",
      "side": 1,
      "message": "Hi @Jack, I\u0027ve changed it so \nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/ui/components/input/textInput.css is now being used instead of harmony-input. I have looked into finding another way to apply chrome-select without having to import InspectorCommonStyles, but, unfortunately, a solution hasn\u0027t been found yet. I\u0027m told chrome-select should apply without any imports, but it\u0027s not working as shown in this screenshot (https://drive.google.com/file/d/1PI89zNcadqIBsplQJr-DlcVG38sAEDC9/view?usp\u003dsharing). So I\u0027ve left the import in for now since that seems to work. If you know of any possible solutions, please do share.",
      "parentUuid": "2156686b_1920c12b",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9005d483_b74b6a46",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 12,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-06-06T15:14:43Z",
      "side": 1,
      "message": "Ah I didn\u0027t realise chrome-select was in use; in that case I think we should leave this in (but still use textInput for the other input). But please could you leave a comment explaining that chrome-select is the reason why we have this? Thanks!",
      "parentUuid": "6f4c0d28_2d680ff5",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7defe89_bd264e45",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 124,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-27T07:21:12Z",
      "side": 1,
      "message": "since it is a short lambda, we could use shorter names for parameters like `p` for brevity and hence better readability",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 107
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1213866f_abc6b051",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 124,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-27T22:02:01Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "d7defe89_bd264e45",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 107
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3295c76_7cf048fd",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 125,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-27T07:21:12Z",
      "side": 1,
      "message": "You can drop curly braces and a `return` keyword for brevity.",
      "range": {
        "startLine": 125,
        "startChar": 10,
        "endLine": 125,
        "endChar": 16
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6431b58a_b1c5011c",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 20
      },
      "lineNbr": 125,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-27T22:02:01Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "a3295c76_7cf048fd",
      "range": {
        "startLine": 125,
        "startChar": 10,
        "endLine": 125,
        "endChar": 16
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8661e7bb_05b53f76",
        "filename": "test/e2e/application/manifest-protocol-handlers_test.ts",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-27T07:21:12Z",
      "side": 1,
      "message": "e2e are fine but for new code we\u0027d prefer unit tests. E.g. create an instance of a ProtocolHandlersView, give it some data, let it render and assert that HTML is more or less as expected.\n\nSee test/unittests/front_end/panels/network/components/RequestHeadersView_test.ts for example",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 88
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb829bfc_5d2f5957",
        "filename": "test/e2e/application/manifest-protocol-handlers_test.ts",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-27T22:02:01Z",
      "side": 1,
      "message": "We will look into this. Thanks for sharing an example!",
      "parentUuid": "8661e7bb_05b53f76",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 88
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1e5c69c_9eaba8f4",
        "filename": "test/e2e/application/manifest-protocol-handlers_test.ts",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-06-04T03:50:06Z",
      "side": 1,
      "message": "We\u0027ve removed the e2e tests and added unit tests.",
      "parentUuid": "fb829bfc_5d2f5957",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 88
      },
      "revId": "4d2fbe1fee17aeb6e9c1b9e4249fec0fe3d88093",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}