{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7a0f4dda_9fa447a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-07-11T10:49:00Z",
      "side": 1,
      "message": "Can you take a look please? Thanks! üôè",
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b20eccf_4ea0a729",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 2
      },
      "lineNbr": 569,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-07-11T10:52:14Z",
      "side": 1,
      "message": "Do we need a `ConsoleFilterByFullText` (or similar) so we have a baseline to compare against?",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 569,
        "endChar": 27
      },
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4780a7fe_fbc2b1cf",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 2
      },
      "lineNbr": 569,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-07-11T12:14:33Z",
      "side": 1,
      "message": "Nope, this is really usage of the keys in the wild, specifically `context:`.",
      "parentUuid": "4b20eccf_4ea0a729",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 569,
        "endChar": 27
      },
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3118d311_540dc3d4",
        "filename": "front_end/panels/console/ConsoleView.ts",
        "patchSetId": 2
      },
      "lineNbr": 1729,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-07-11T10:59:10Z",
      "side": 1,
      "message": "Quickly browsing through the code it seems that each input event can trigger this. Which means we can potentially emit a lot of actionTaken UMA events for a single search/filter term.",
      "range": {
        "startLine": 1729,
        "startChar": 9,
        "endLine": 1729,
        "endChar": 28
      },
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a4ec3b1_7bc50409",
        "filename": "front_end/panels/console/ConsoleView.ts",
        "patchSetId": 2
      },
      "lineNbr": 1729,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-07-11T12:14:33Z",
      "side": 1,
      "message": "Do you think we should go for a different approach than the Actions?",
      "parentUuid": "3118d311_540dc3d4",
      "range": {
        "startLine": 1729,
        "startChar": 9,
        "endLine": 1729,
        "endChar": 28
      },
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a4c0d6_d766383b",
        "filename": "front_end/panels/console/ConsoleView.ts",
        "patchSetId": 2
      },
      "lineNbr": 1729,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-07-11T12:33:07Z",
      "side": 1,
      "message": "I think actions are ok, but when exactly we are recording the metrics. I guess there is no \"Enter\" key so it\u0027s probably hard to figure out when to record the metrics.\n\nIf the event is somewhat throttled I\u0027d be fine with the current solution, but if we record one action per character type, that would skew the results. (Realistically I don\u0027t think anyone is actually using this feature a lot so just to get a rough feeling then this approach is fine).",
      "parentUuid": "1a4ec3b1_7bc50409",
      "range": {
        "startLine": 1729,
        "startChar": 9,
        "endLine": 1729,
        "endChar": 28
      },
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67f4c6cb_ddef3f04",
        "filename": "front_end/panels/console/ConsoleView.ts",
        "patchSetId": 2
      },
      "lineNbr": 1729,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-07-11T12:37:40Z",
      "side": 1,
      "message": "Ok, I\u0027ll do this first, and if we see there\u0027s actual usage, we can improve the metrics.",
      "parentUuid": "43a4c0d6_d766383b",
      "range": {
        "startLine": 1729,
        "startChar": 9,
        "endLine": 1729,
        "endChar": 28
      },
      "revId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1b78a71d7884782d08d3030fc2bbae570d77a0a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}