{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ddde384_f468bcf5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "https://crbug.com/1409768",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edd8ce02_af96b117",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-25T15:29:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ddde384_f468bcf5",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5779aa38_843bb079",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "Nice! LGTM with a couple nits!",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab821d12_dfe45a71",
        "filename": "test/e2e/cross_tool_integration/workflow_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "Should this be clickElement too?",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3027f6a6_11f3403b",
        "filename": "test/e2e/cross_tool_integration/workflow_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-25T15:29:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab821d12_dfe45a71",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bec59ec_281613b7",
        "filename": "test/e2e/elements/style-pane-properties_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "Let\u0027s add a crbug or at least an owner to the TODO",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4df71eee_fa78cd90",
        "filename": "test/e2e/elements/style-pane-properties_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-25T13:15:20Z",
      "side": 1,
      "message": "I will remove TODOs if the tests are successful, if they fail, I will disable it with proper formalities.",
      "parentUuid": "2bec59ec_281613b7",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aad7f22b_02240854",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "Same as above",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e4f2013_7c32b354",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1532678
      },
      "writtenOn": "2023-01-26T06:42:44Z",
      "side": 1,
      "message": "Let\u0027s extend an interface such as\n\n```\nexport interface WaitForSelectorOptions\u003cSelectorType\u003e {\n  root?: puppeteer.Page|puppeteer.ElementHandle;\n  type?: SelectorType;\n  scope?: AsyncScope;\n}\n```\n\nand implement the click options.",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4886c35b_f2b3554c",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-26T08:56:07Z",
      "side": 1,
      "message": "I don\u0027t think we need an asyncScope here because we use waitForFunction inside. Also, SelectorType will be redundant.",
      "parentUuid": "6e4f2013_7c32b354",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "434851a1_d7dfbd5d",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "Same as above",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10703003_76b3a30b",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-25T13:05:45Z",
      "side": 1,
      "message": "Can we drop the warning? We already know we\u0027re going to hit this, so logging is mostly noise.",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bef1680_1697f733",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-25T13:15:20Z",
      "side": 1,
      "message": "I would prefer to keep it for a while to make sure we didn\u0027t overlook some cases that don\u0027t require retries. Or do we have some ability to control verbosity of the logs?",
      "parentUuid": "10703003_76b3a30b",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b979fbbf_c48f514c",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1532146
      },
      "writtenOn": "2023-01-26T00:58:13Z",
      "side": 1,
      "message": "+1 about the retry warning. I actually assert that retrying is not fixing anything; if the warning does pop up, this would prove me wrong but also point to a potential point of flakiness. We may be able to do better if we find where the click retries (e.g. by waiting for the render coordinator)!",
      "parentUuid": "1bef1680_1697f733",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a142d5_c8d6486e",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1532678
      },
      "writtenOn": "2023-01-26T06:42:44Z",
      "side": 1,
      "message": "I think it makes sense to get rid of this and just have a \u0027keyDownModifier` and `keyUpModifier` utility.\n\nThe workflow would be\n```ts\nawait keyDownModifier();\nawait click(...);\nawait keyUpModifier();\n```\n\nThis makes perfect sense since the modifier doesn\u0027t affect activation of the click.",
      "range": {
        "startLine": 101,
        "startChar": 16,
        "endLine": 101,
        "endChar": 17
      },
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbd2a0f5_51c1bde2",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-26T08:56:07Z",
      "side": 1,
      "message": "I think it\u0027s more convenient if we include id: the modifiers to affect the click event modifiers that are emitted.",
      "parentUuid": "c8a142d5_c8d6486e",
      "range": {
        "startLine": 101,
        "startChar": 16,
        "endLine": 101,
        "endChar": 17
      },
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ec8fccf_86e2e474",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1532678
      },
      "writtenOn": "2023-01-26T06:42:44Z",
      "side": 1,
      "message": "Do we need this? Can we just migrate everything to `click`?",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "917f3a6a_db934aa8",
        "filename": "test/shared/helper.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-26T08:56:07Z",
      "side": 1,
      "message": "Some cases are not trivial to migrate right away. Once all of them use selectors, this method can be removed. That\u0027s why it\u0027s marked as deprecated.",
      "parentUuid": "1ec8fccf_86e2e474",
      "revId": "b8ae986adb7b49d6ea66608e118ad8f34e3d6b02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}