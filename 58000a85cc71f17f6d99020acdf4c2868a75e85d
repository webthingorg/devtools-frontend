{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a5b807ae_0d8ecb9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-05-25T10:37:24Z",
      "side": 1,
      "message": "Looks good from my side, but would still like Benedikts opinion on the feature detection. I think this is a good first step and we can always update the logic in the future if we are missing edge cases.",
      "revId": "58000a85cc71f17f6d99020acdf4c2868a75e85d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7b61620_de9cd5c5",
        "filename": "front_end/ui/legacy/components/source_frame/ResourceSourceFrame.ts",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-05-25T10:37:24Z",
      "side": 1,
      "message": "I think this is matching maybe a bit too many cases. E.g. the following would also match: `someresponse.json.txt`. I would prefer using a conservative approach here and use `.endsWith` to be sure. We can always relax the check later when we discover edge cases we are missing with this logic. WDYT?",
      "range": {
        "startLine": 60,
        "startChar": 101,
        "endLine": 60,
        "endChar": 118
      },
      "revId": "58000a85cc71f17f6d99020acdf4c2868a75e85d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d3f5a50_08ecf79f",
        "filename": "test/unittests/front_end/entrypoints/formatter_worker/JSONFormatter_test.ts",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-05-25T10:37:24Z",
      "side": 1,
      "message": "Rather than including newline characters, can we use multiline string templates for these test expectations? E.g.\n\n```\nconst expectedCode \u003d `{\n    \"ddd\": 0,\n    \"ind: 2,\n    \u003c...\u003e\n}`;\n```\n\netc...\n\n(Sorry for the trouble caused manually adding all the required newline characters)",
      "range": {
        "startLine": 41,
        "startChar": 10,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "58000a85cc71f17f6d99020acdf4c2868a75e85d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}