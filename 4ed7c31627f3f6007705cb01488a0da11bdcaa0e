{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "233f71c0_a41ec2b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-07-07T11:18:59Z",
      "side": 1,
      "message": "PTAL",
      "revId": "4ed7c31627f3f6007705cb01488a0da11bdcaa0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a492436_54d1c3e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-07-08T07:17:51Z",
      "side": 1,
      "message": "LGTM % the question about AdornerRegistry vs. the new enum + helper function.",
      "revId": "4ed7c31627f3f6007705cb01488a0da11bdcaa0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38bc99bb_c13e3f15",
        "filename": "front_end/panels/elements/components/AdornerManager.ts",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-07-08T07:17:51Z",
      "side": 1,
      "message": "What would be the reason to prefer an enum of `RegisteredAdorners` + a helper function `getRegisteredAdorner` over the original `AdornerRegistry`?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 84
      },
      "revId": "4ed7c31627f3f6007705cb01488a0da11bdcaa0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25034fa3_220ce13b",
        "filename": "front_end/panels/elements/components/AdornerManager.ts",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-07-08T07:50:22Z",
      "side": 1,
      "message": "Good point, I guess I wouldn\u0027t have needed to change this. What prompted me to do this is that it makes it clear the the entries of the adorner registry aren\u0027t supposed to change, and we remove a case of using an object as a map.\n\nIf you prefer, I can revert to the old definition.",
      "parentUuid": "38bc99bb_c13e3f15",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 84
      },
      "revId": "4ed7c31627f3f6007705cb01488a0da11bdcaa0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab972dd4_a7061e26",
        "filename": "front_end/panels/elements/components/AdornerManager.ts",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-07-08T08:01:34Z",
      "side": 1,
      "message": "I\u0027m not that in favor of declaring AdornerRegistry as an object. How about we revert to the old approach, but declare AdornerRegistry as\n```\nexport const readonly AdornerRegistry \u003d new Map\u003cstring, RegisteredAdorner\u003e([\n  [\u0027GRID\u0027, {\n    name: \u0027grid\u0027,\n    category: AdornerCategories.LAYOUT,\n    enabledByDefault: true,\n  }],\n  ...\n]);\n```\n\nBasically I\u0027d hope we could keep only one place to add/remove/modify registered adorners. But it\u0027s definitely not a must.",
      "parentUuid": "25034fa3_220ce13b",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 35,
        "endChar": 84
      },
      "revId": "4ed7c31627f3f6007705cb01488a0da11bdcaa0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}