{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dcf6d52f_003d9ef1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-02T18:47:42Z",
      "side": 1,
      "message": "Some comments so far but I\u0027d take another look tomorrow.",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "841759c5_b2be54de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T06:57:18Z",
      "side": 1,
      "message": "LGTM % comments\n\nKim, could you please review as well since you are more familiar with breakpoints? ",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cd72cd3_6acbd458",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T06:59:31Z",
      "side": 1,
      "message": "Simon, PTAL as the owner of InspectorBackend.ts and EventListenerBreakpointsSidebarPane",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d4f1da3_5d7ff7f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-11-03T08:33:36Z",
      "side": 1,
      "message": "LGTM on breakpoint side % comments",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e8daf32_41f4bec0",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-02T18:47:42Z",
      "side": 1,
      "message": "Here and in other localized strings could you provide more context about the meaning of the string? so that translators who are not developers would be able to translate those strings into various languages? They would most likely ask the question about these strings. \n\nAnother thing: I believe we should use sentence case for strings in DevTools.",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02341372_8bff303f",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "I understand the significance of these things, but I am at a loss as to what actually would be helpful for the translators here.\n\nWith respect to capitalization, other stuff in that panel (that\u0027s not just a literal), e.g. \"Request Animation Frame\", uses this style.",
      "parentUuid": "0e8daf32_41f4bec0",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dad608a4_51eea04c",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T14:44:33Z",
      "side": 1,
      "message": "Re: capitalization, yes, DevTools is currently mixing styles, unfortunately. Let\u0027s stick with what is typical for this panel then.\n\nRe: string descriptions, is there perhaps a link to some public documentation about these terms that we can link to at least? If not, I think we can land but we might reach out to you if translators get specific questions that we cannot answer.",
      "parentUuid": "02341372_8bff303f",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c68ccb7_7fa1e65a",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-11-03T08:33:36Z",
      "side": 1,
      "message": "Can you add a comment here that EventListenerBreakpoints are for events in targets that run JS but do not have a DOM?",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8ee5c12_c1f78487",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Done. This reminds me that I was thinking of factoring out DOMDebuggerModel.CategorizedBreakpoint out of DOMDebuggerModel (since it doesn\u0027t actually depend on DOMDebuggerModel, which in turns means that neither does CategorizedBreakpointsSidebarPane\n\nDoes this seem appropriate, and would it make sense to just make it another file in front_end/code/sdk/ ?",
      "parentUuid": "8c68ccb7_7fa1e65a",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bafa92f_1bbea4c0",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-11-03T08:01:43Z",
      "side": 1,
      "message": "nit: Its fine to move trivial initialization into the fields declaration above.",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 47
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4736e72f_affc5fdd",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bafa92f_1bbea4c0",
      "range": {
        "startLine": 89,
        "startChar": 44,
        "endLine": 89,
        "endChar": 47
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ccc9d90_a7bd4f22",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-11-03T08:01:43Z",
      "side": 1,
      "message": "Alternatively: Could we have an enum for these string constants?\nThen we could have a simple helper called `getTitleForInstrumentationName` that takes the enum and returns the corresponding LocalizedString. You can even loop over the enum like:\n\n  for (const value of InstrumentationName) {\n    this.#eventLIstenerBreakpointsInternal.push(new EventListenerBreakpoint(value, category);\n  }\n  \n(The call for getTitleForInstrumentationName could be moved into the constructor of `EventListenerBreakpoint`) wdyt?",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 95,
        "endChar": 7
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7040f49d_f4a35c92",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Specifically what kind of enum are you talking about? Something like \nconst enum BreakpointNames \u003d {\n  BeforeBidderWorkletBiddingStart \u003d \"beforeBidderWorkletBiddingStart\"\n}\n\nhas the disadvantage of mostly duplicating the name. I guess TS may give you exhaustiveness checks though, which is nice. Other stuff feels like capitalization might be unconventional?\n\nActually if you look at what I did with DOMDebuggerModel before this (when I thought I would be adding these here), I ended up putting an array there for these things, but I changed to this form here since it keeps everything in one spot, so it\u0027s really easy to add stuff.",
      "parentUuid": "9ccc9d90_a7bd4f22",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 95,
        "endChar": 7
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d676eeb1_4e4cbdb7",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T06:57:18Z",
      "side": 1,
      "message": "is it the same as EventListenerBreakpoint.instrumentation ?",
      "range": {
        "startLine": 125,
        "startChar": 10,
        "endLine": 125,
        "endChar": 31
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aca8306_2fd9dc97",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Yeah, used that.",
      "parentUuid": "d676eeb1_4e4cbdb7",
      "range": {
        "startLine": 125,
        "startChar": 10,
        "endLine": 125,
        "endChar": 31
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42a8d0ae_ca51c7ea",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T06:57:18Z",
      "side": 1,
      "message": "nit: \n\n```\nif (!eventName.startsWith(instrumentationPrefix)) {\n return null;\n}\nconst instrumentationName \u003d eventName.substring(instrumentationPrefix.length;\n```",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f09b99fa_4b6c72c1",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42a8d0ae_ca51c7ea",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d528b01_623aede2",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-11-03T08:01:43Z",
      "side": 1,
      "message": "nit:\n\n return this.#eventListenerBreakpointsInternal.find(b \u003d\u003e b.instrumentationName \u003d\u003d\u003d instrumentationName)?",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 137,
        "endChar": 16
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e185c9ad_7cf5d1a6",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "find returns undefined and not null. I could make this function |undefined, but that seems different from the usual practices here?",
      "parentUuid": "1d528b01_623aede2",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 137,
        "endChar": 16
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "901f7bee_15a07553",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-11-03T08:33:36Z",
      "side": 1,
      "message": "You could use `const breakpoint \u003d this.resolveEventListenerBreakpoint(auxData)` here",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fb34550_1e40caa0",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Done, and then folded Inernal into plain version, since down to one call site and isn\u0027t complex.",
      "parentUuid": "901f7bee_15a07553",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5629d54_207da8db",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-02T18:47:42Z",
      "side": 1,
      "message": "nit: auxData.eventName",
      "range": {
        "startLine": 149,
        "startChar": 55,
        "endLine": 149,
        "endChar": 75
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3c89b88_f408658b",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-11-03T08:01:43Z",
      "side": 1,
      "message": "and above",
      "parentUuid": "f5629d54_207da8db",
      "range": {
        "startLine": 149,
        "startChar": 55,
        "endLine": 149,
        "endChar": 75
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faa4c9d5_5eeb2a88",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3c89b88_f408658b",
      "range": {
        "startLine": 149,
        "startChar": 55,
        "endLine": 149,
        "endChar": 75
      },
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dea35014_3a4e4e8f",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T06:57:18Z",
      "side": 1,
      "message": "double checking: we don\u0027t need to disable the breakpoints if the model is being removed?",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26f2447e_7248736c",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1226494
      },
      "writtenOn": "2021-11-03T14:29:50Z",
      "side": 1,
      "message": "Hmm, I assumed this happened on target disconnect? If so, shouldn\u0027t be needed.",
      "parentUuid": "dea35014_3a4e4e8f",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e25d5c2_9b1aec8e",
        "filename": "front_end/core/sdk/EventBreakpointsModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-11-03T14:44:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "26f2447e_7248736c",
      "revId": "48d0b60c922a5bd8049c627e1e55cc7fa177aaad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}