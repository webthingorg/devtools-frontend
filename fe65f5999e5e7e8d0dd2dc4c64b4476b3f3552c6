{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d01fb3ae_11de0c0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2021-02-01T13:18:22Z",
      "side": 1,
      "message": "Migrate Network panel (big one ðŸ˜®), PTAL, thank you !",
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cecf782_16f01a14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "Some comments/questions",
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30f7aa5e_20141f7f",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "q: Whats with the double escaping here? The original version didn\u0027t include the backticks or am I missing something?",
      "range": {
        "startLine": 47,
        "startChar": 11,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6e22449_6db52f3a",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2021-02-02T14:25:33Z",
      "side": 1,
      "message": "This is because the \u003clocked\u003e tag from grdp, meaning this should not be translated, and in ctc.json this will get converted to placeholder.\nhttps://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2662325/6/front_end/network/network_strings.grdp#b1096\nBut then since the whole term is locked... maybe it should just be a regular string without going through the translation pipeline, WDYT?",
      "parentUuid": "30f7aa5e_20141f7f",
      "range": {
        "startLine": 47,
        "startChar": 11,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79358633_6110a61e",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-03T06:25:28Z",
      "side": 1,
      "message": "Ah that makes sense, thanks for the explanation. I forgot that V2 implements \u003clocked\u003e terms this way.\n\nI don\u0027t think we get any value translating terms where the whole term is locked. I\u0027d prefer if we turn these into plain old strings. This can also happen in a follow-up, should the types not match and the code expect a localized string (in which case we should update the types and not translate locked-only terms).",
      "parentUuid": "f6e22449_6db52f3a",
      "range": {
        "startLine": 47,
        "startChar": 11,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "589d92d3_7208b4c0",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "q: Is it intended that the hyphen is \"inlined\"? I checked and it has the right unicode, I just want to make sure that this is known and not just a byproduct of automation :)",
      "range": {
        "startLine": 51,
        "startChar": 55,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4056c868_4210ae0a",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2021-02-02T14:25:33Z",
      "side": 1,
      "message": "The version of the string is taken from grdp, is it better if we use \u0027\\u2014\u0027 instead?\nhttps://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2662325/6/front_end/network/network_strings.grdp#b42",
      "parentUuid": "589d92d3_7208b4c0",
      "range": {
        "startLine": 51,
        "startChar": 55,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e920a7e_60409fe4",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-03T06:25:28Z",
      "side": 1,
      "message": "Personally, I\u0027d prefer to use \u0027\\u2014\u0027. If someone refactors code here (or adds new entries), it will be easily missed that its not a standard hyphen. Wdyt?\n\nNot a strong opinion on this one though.",
      "parentUuid": "4056c868_4210ae0a",
      "range": {
        "startLine": 51,
        "startChar": 55,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f048e57_441fb932",
        "filename": "front_end/network/NetworkConfigView.js",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-03T08:32:28Z",
      "side": 1,
      "message": "DevTools guidance seems to be to use the raw character directly and only use the codes (\u0027\\u\u0027) for non-printable or otherwise weird whitespace characters. So we can leave it as-is :)",
      "parentUuid": "3e920a7e_60409fe4",
      "range": {
        "startLine": 51,
        "startChar": 55,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "330e92bb_df772556",
        "filename": "front_end/network/NetworkLogView.js",
        "patchSetId": 6
      },
      "lineNbr": 1179,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "resourceSize?",
      "range": {
        "startLine": 1179,
        "startChar": 56,
        "endLine": 1179,
        "endChar": 68
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74c85fe8_eb8d8cd9",
        "filename": "front_end/network/NetworkLogView.js",
        "patchSetId": 6
      },
      "lineNbr": 1179,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2021-02-02T14:25:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "330e92bb_df772556",
      "range": {
        "startLine": 1179,
        "startChar": 56,
        "endLine": 1179,
        "endChar": 68
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "114163b6_00ae7855",
        "filename": "front_end/network/RequestHeadersView.js",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "I think we should spell out the non-breakable space here. This could easily get lost. Also, why do we have to translate this in the first place? I think we could do the number formatting without going through the translation pipeline.",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 86,
        "endChar": 7
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84c86683_e7dd4375",
        "filename": "front_end/network/RequestHeadersView.js",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2021-02-02T14:25:33Z",
      "side": 1,
      "message": "Agreed that these don\u0027t need to go through the translation pipeline.",
      "parentUuid": "114163b6_00ae7855",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 86,
        "endChar": 7
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8011aed4_994cfff6",
        "filename": "front_end/network/RequestTimingView.js",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "Double escaping again.",
      "range": {
        "startLine": 138,
        "startChar": 17,
        "endLine": 138,
        "endChar": 35
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbccdb08_8bd3857f",
        "filename": "front_end/network/module.json",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-02T07:37:11Z",
      "side": 1,
      "message": "nit: alpha sorting",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 11
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "153bd928_7597aef4",
        "filename": "front_end/network/module.json",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2021-02-02T14:25:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbccdb08_8bd3857f",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 11
      },
      "revId": "fe65f5999e5e7e8d0dd2dc4c64b4476b3f3552c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}