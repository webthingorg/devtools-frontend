{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb45490a_4aff5a2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-01-03T18:26:18Z",
      "side": 1,
      "message": "Could you take a look, please?\n\nI am wondering how to test this change. E2E test would be very fiddly and\nwe do not really have unit tests for the UI components (such as SourcePanel).",
      "revId": "98b70d7f0614365672b060964a01bb2c5ec7f7fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d301a0d7_902260e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-01-04T06:07:10Z",
      "side": 1,
      "message": "LGTM modulo unittest",
      "revId": "98b70d7f0614365672b060964a01bb2c5ec7f7fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf76fb3_82faf984",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-01-04T06:07:10Z",
      "side": 1,
      "message": "I think we should add unit tests for the LiveLocationWithPool behavior. While that doesn\u0027t test the integration issue, and won\u0027t catch other related problems, it serves as executable documentation for the intended behavior.",
      "parentUuid": "cb45490a_4aff5a2a",
      "revId": "98b70d7f0614365672b060964a01bb2c5ec7f7fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc020283_e92d60c5",
        "filename": "front_end/panels/sources/SourcesPanel.ts",
        "patchSetId": 4
      },
      "lineNbr": 531,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-01-04T06:41:19Z",
      "side": 1,
      "message": "Would it make sense to add the check whether or not the live location is disposed into the function \"uiLocation()\", and return null if it already is disposed? Currently uiLocation may already return null, and we do check whether or not it is null in the \"uiLocation()\" callsites as far as I can see. This may catch other problematic cases in which we use disposed live locations, wdyt?",
      "revId": "98b70d7f0614365672b060964a01bb2c5ec7f7fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24bb23ec_77236f48",
        "filename": "front_end/panels/sources/SourcesPanel.ts",
        "patchSetId": 4
      },
      "lineNbr": 531,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-01-04T07:01:31Z",
      "side": 1,
      "message": "Funnily, that was my first idea, but I believe it does not quite work. Note that  it is the return from the uiLocation function that allows scheduling of the disposal. Since the disposing happens after uiLocation() runs, there is no way for uiLocation() to check if the location is disposed.",
      "parentUuid": "bc020283_e92d60c5",
      "revId": "98b70d7f0614365672b060964a01bb2c5ec7f7fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d2fd346_3efe090b",
        "filename": "front_end/panels/sources/SourcesPanel.ts",
        "patchSetId": 4
      },
      "lineNbr": 531,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-01-04T07:19:59Z",
      "side": 1,
      "message": "Ahh, right, thanks for the explanation!",
      "parentUuid": "24bb23ec_77236f48",
      "revId": "98b70d7f0614365672b060964a01bb2c5ec7f7fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}