{
  "comments": [
    {
      "key": {
        "uuid": "87e8fec7_92c61a99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2020-07-16T00:45:07Z",
      "side": 1,
      "message": "Where would y\u0027all like me to place this code? I assume that the \"scripts\" directory is not appropriate; I just picked a random place, as I wasn\u0027t sure where it belonged.",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded2c2ca_6a5ce460",
        "filename": "scripts/component_bridges/client_variations_proto.js",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2020-07-16T00:45:07Z",
      "side": 1,
      "message": "The linter really does not like the generated code. Is there a way to opt this code out of linting/formatting?",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9d8c0a9_9d5ecbd8",
        "filename": "scripts/component_bridges/client_variations_proto.js",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-16T06:35:46Z",
      "side": 1,
      "message": "Since it\u0027s generated code, I think we should just put it in third_party. My other comment elaborates on this.",
      "parentUuid": "ded2c2ca_6a5ce460",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e304304a_39eae297",
        "filename": "scripts/component_bridges/client_variations_proto.js",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2020-07-16T00:45:07Z",
      "side": 1,
      "message": "Is there a terser way to write this? I don\u0027t typically work with ES6 modules.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04a35ee7_e8f628b8",
        "filename": "scripts/component_bridges/client_variations_proto.js",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-16T06:35:46Z",
      "side": 1,
      "message": "This is fine üëç\n\nIn an ideal world we\u0027d do\n\n    export function parseClientVariations(data) {\n      // parse() logic inlined here\n    }\n\n...but I guess that this is just the output JSCompiler produces for exports?",
      "parentUuid": "e304304a_39eae297",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac383e32_9a0963be",
        "filename": "scripts/component_bridges/client_variations_proto.js",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2020-07-22T03:07:17Z",
      "side": 1,
      "message": "JSCompiler does not produce any code for exports; this part is hand-written",
      "parentUuid": "04a35ee7_e8f628b8",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0cfd0a7_8b5db295",
        "filename": "test/unittests/scripts/component_bridges/client_variations_proto_test.js",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2020-07-16T00:45:07Z",
      "side": 1,
      "message": "I have not run these tests, because I couldn\u0027t figure out how to do so. The docs that I found give a single command, \"npm run auto-unittest\". However, (a) the scripts directory doesn\u0027t seem to be hooked up, and (b) it\u0027s not really clear what tests are being run, nor how to tweak the command to run a specific test. Are there more detailed docs somewhere, or is this just tribal knowledge?\n\n(To re-iterate: I realize that this code probably belongs in a different location, and probably that location is \"easier\" to run tests for. Still, most of what I wrote above applies for tests in the front_end directory as well.)\n\nWhile on the topic of docs: I did not find any docs that explained how to install NPM, including in the Googler onboarding docs. I ended up figuring out *a* way to do so, but the docs really are hard to follow as a new developer in this codebase. Not sure whether anyone is particularly maintaining them?",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a955ca27_34a384f7",
        "filename": "test/unittests/scripts/component_bridges/client_variations_proto_test.js",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-16T06:35:46Z",
      "side": 1,
      "message": "Looping in Jan, who has been collecting feedback on our docs in order to improve them.\n\nI do think this is not the right directory for this file though. There\u0027s a few options here, but I think it might be easiest to put the generated JS somewhere in `src/third_party/blink/` (along with instructions on where to copy it from).\n\nIf we could tweak https://chromium-review.googlesource.com/c/chromium/src/+/2301121 and check in the generated JS upstream, then we could even have `roll_deps.py` handle it. Does that seem reasonable to you?\n\nAlso looping in Jack who likely has thoughts on this from the Testing \u0026 Architecture side. Jack, PTAL.",
      "parentUuid": "a0cfd0a7_8b5db295",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8601b448_cd479f53",
        "filename": "test/unittests/scripts/component_bridges/client_variations_proto_test.js",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002410
      },
      "writtenOn": "2020-07-22T03:07:17Z",
      "side": 1,
      "message": "Thanks for the feedback! I\u0027ve updated https://chromium-review.googlesource.com/c/chromium/src/+/2301121 to include the generated file, though I\u0027m not sure that it makes sense to check the generated file into the Chromium source tree. We can discuss that idea further on that CL.\n\nAssuming we can land this in Chromium, I think that would result in the generated file being landed in devtools-frontend/src/third_party/components/variations/proto/devtools/client_variations_parser.js. Am I understanding correctly how roll_deps.py works? Does that sound like an appropriate place for this file to end up?\n\nOr, where in third_party do we want this file to land? I am not familiar with how the devtools frontend codebase is organized, so would appreciate a really concrete suggestion here.\n\nAlso: Where should I put tests for this functionality, if it is pulled into third_party? Is there an example I can follow?\n\n--\n\nSorry for what probably feel like really basic questions. Cross-repo dependencies are a bit tricky.",
      "parentUuid": "a955ca27_34a384f7",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "188f58d1_c9e93f1b",
        "filename": "test/unittests/scripts/component_bridges/client_variations_proto_test.js",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-22T05:58:49Z",
      "side": 1,
      "message": "These are NOT basic questions, don\u0027t worry! I don\u0027t think there\u0027s precedent for importing a generated JS file from Chromium, so we\u0027re all just figuring this out together.\n\nThe file would need to go in devtools-frontend/front_end/third_party instead of devtools-frontend/src/third_party (which we don\u0027t ship). devtools-frontend/src/front_end/third_party/README.md has some more details. (I think we can skip the security review since this is Chromium code and not an actual \"third-party\" dependency.)\n\nFrom there we can directly import it in unit tests. szuend@ mentioned we might have to add a ts_library or a devtools_pre_built entry to the relevant BUILD file, so the unittest can DEPS it.\n\nSince you asked for a concrete unit test location, I\u0027d suggest placing it in third_party/devtools-frontend/src/test/unittests/front_end/common/ClientVariations_test.ts.",
      "parentUuid": "8601b448_cd479f53",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0165654_67c51aef",
        "filename": "test/unittests/scripts/component_bridges/client_variations_proto_test.js",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1368273
      },
      "writtenOn": "2020-08-10T13:07:25Z",
      "side": 1,
      "message": "Sorry for being a little late on this thread. I\u0027ll send you an email to learn more about your experience with the documentation.",
      "parentUuid": "188f58d1_c9e93f1b",
      "revId": "bf0a41e5d9a546908dd40047553c59a8a1936063",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}