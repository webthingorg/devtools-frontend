{
  "comments": [
    {
      "key": {
        "uuid": "fbf9a230_8fc7b2d3",
        "filename": "scripts/component_bridges/walk_tree.ts",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-08-13T10:45:44Z",
      "side": 1,
      "message": "does this make the parsing order dependent?\n\ne.g. if we define the interface first, and it references MyEnum.FOO, the code is going to search for the MyEnum reference but we might not have found it yet as we\u0027re still walking the tree.\n\nIf it does, this causes problems if the enum is defined in another file and imported and we might need to rethink.",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 118
      },
      "revId": "f55dc7026e169085f2295160693b38ad90a86e60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0059377_1a61ef4e",
        "filename": "scripts/component_bridges/walk_tree.ts",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-13T11:27:22Z",
      "side": 1,
      "message": "yes, I believe it\u0027d be order dependent. I only thought of this way of checking if a type is an enum though",
      "parentUuid": "fbf9a230_8fc7b2d3",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 118
      },
      "revId": "f55dc7026e169085f2295160693b38ad90a86e60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89f900c2_13d579c5",
        "filename": "scripts/component_bridges/walk_tree.ts",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-13T11:29:17Z",
      "side": 1,
      "message": "Would not it walk the imports first?",
      "parentUuid": "a0059377_1a61ef4e",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 118
      },
      "revId": "f55dc7026e169085f2295160693b38ad90a86e60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debdf74a_ef52d6fc",
        "filename": "scripts/component_bridges/walk_tree.ts",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-08-13T12:51:25Z",
      "side": 1,
      "message": "Not at the moment, the order is:\n\n1. Get initialized with the path to the component.\n2. Walk the tree of the component source file.\n3. If any type references are missing, check the imports to find them.\n4. If a missing interface is found in an import, parse that file and walk its tree.\n\nI think it might be best to do this checking in generate_closure.ts when we output members of an interface. We can then have an if(enumMemberReference) {} conditional that decides exactly what to output, and leave most of walk_tree.ts left alone without any changes. \n\nWDYT?",
      "parentUuid": "89f900c2_13d579c5",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 118
      },
      "revId": "f55dc7026e169085f2295160693b38ad90a86e60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23632c06_128ad251",
        "filename": "scripts/component_bridges/walk_tree.ts",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-13T13:03:04Z",
      "side": 1,
      "message": "Sounds better. How would we provide the qualified name to the generate_closure.ts? I think we cannot put the qualified name into foundInterfaces? Should we create something like foundQualifiedNames in walk_tree?",
      "parentUuid": "debdf74a_ef52d6fc",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 118
      },
      "revId": "f55dc7026e169085f2295160693b38ad90a86e60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}