{
  "comments": [
    {
      "key": {
        "uuid": "ab390fa7_15aca043",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-31T08:19:37Z",
      "side": 1,
      "message": "What do you think about moving timeout to the the 3rd arg, so that existing users of it() can switch over without changing the args?",
      "range": {
        "startLine": 54,
        "startChar": 9,
        "endLine": 54,
        "endChar": 82
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7ecf6a6_dcb1320b",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-07-31T08:49:16Z",
      "side": 1,
      "message": "How about getting rid of the timeout argument altogether and relying on a global default?\n\nA test can still set its own timeout manually.",
      "parentUuid": "ab390fa7_15aca043",
      "range": {
        "startLine": 54,
        "startChar": 9,
        "endLine": 54,
        "endChar": 82
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5286a49b_2bf0c9c4",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-31T08:19:37Z",
      "side": 1,
      "message": "I think you can remove trace.test entirely and just refer to test directly from this closure",
      "range": {
        "startLine": 57,
        "startChar": 6,
        "endLine": 57,
        "endChar": 30
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb7d7763_3b5749bd",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-07-31T08:49:16Z",
      "side": 1,
      "message": "While i\u0027m at it, how about I remove AsyncTrace completely? Then tests choose async scope reporting by importing it either from mocha or from the helper. How about also turning it() into a type to support it.only and it.skip?",
      "parentUuid": "5286a49b_2bf0c9c4",
      "range": {
        "startLine": 57,
        "startChar": 6,
        "endLine": 57,
        "endChar": 30
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00be6066_8e4644d8",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-31T08:19:37Z",
      "side": 1,
      "message": "What\u0027s the use-case for having multiple scopes at the same time?\nI can think of the case where we don\u0027t await something that calls WaitFor \u0026 friends, or where we explicitly want to nest them with different scopes but I\u0027m not sure why we\u0027d want that.",
      "range": {
        "startLine": 75,
        "startChar": 9,
        "endLine": 75,
        "endChar": 15
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48f083b8_a2154216",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-07-31T08:49:16Z",
      "side": 1,
      "message": "A test could do something like Promise.all(waitFor(A), waitFor(B), waitFor(C)).",
      "parentUuid": "00be6066_8e4644d8",
      "range": {
        "startLine": 75,
        "startChar": 9,
        "endLine": 75,
        "endChar": 15
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54d83a53_d47306e1",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-31T08:19:37Z",
      "side": 1,
      "message": "You can initialize this above too",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "221bb97a_f709ebc7",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-07-31T09:56:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54d83a53_d47306e1",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17823b28_5694a0c7",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-31T08:19:37Z",
      "side": 1,
      "message": "Another thing we could think about filtering is \n\n    at runMicrotasks (\u003canonymous\u003e)\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)\n\nWhich show up in most stacks at some point because of how node handles microtasks, but don\u0027t add any useful info for debugging as far as I can tell. We can do that later if people don\u0027t get any value out of them",
      "range": {
        "startLine": 98,
        "startChar": 44,
        "endLine": 98,
        "endChar": 50
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deadf8d7_dc43f49c",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-31T08:19:37Z",
      "side": 1,
      "message": "You could use .includes() instead, I was scratching my head for a minute at the bitwise-not",
      "range": {
        "startLine": 98,
        "startChar": 90,
        "endLine": 98,
        "endChar": 97
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "368048df_8b99fb09",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-07-31T09:56:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17823b28_5694a0c7",
      "range": {
        "startLine": 98,
        "startChar": 44,
        "endLine": 98,
        "endChar": 50
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe977d26_037398df",
        "filename": "test/shared/helper.ts",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-07-31T09:56:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "deadf8d7_dc43f49c",
      "range": {
        "startLine": 98,
        "startChar": 90,
        "endLine": 98,
        "endChar": 97
      },
      "revId": "1fdf64a2a0660cb3a4166a22cc7bdc65c921cbf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}