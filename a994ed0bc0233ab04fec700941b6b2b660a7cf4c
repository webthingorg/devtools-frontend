{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a59191e_7fac0220",
        "filename": "inspector_overlay/highlight_flex_common.ts",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-11-12T16:34:12Z",
      "side": 1,
      "message": "The way this works is we transform the usual paths we get from the backend into quads, and then process those quads to draw the lines we need.\nThe advantage of getting paths is we know they already account for CSS transforms, which is nice.\n\nOne thing we could do in the future though is return quads from the backend instead of paths. This would avoid 1 step, although it\u0027s not too bad, since the path is already  an array, that means we can just read values in the array to get coordinates.\n\nLet me know if you need more help to understand the drawing logic here. I can also add more comments if needed.",
      "range": {
        "startLine": 29,
        "startChar": 16,
        "endLine": 29,
        "endChar": 96
      },
      "revId": "a994ed0bc0233ab04fec700941b6b2b660a7cf4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4264c72_4ee9c34c",
        "filename": "inspector_overlay/highlight_flex_common.ts",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-11-13T07:24:54Z",
      "side": 1,
      "message": "So we get the border paths for flex items grouped by flex line? So to compute the flex line\u0027s top \u0026 bottom border paths we extend the lines to account for the gaps between the items and between the items and the container. Is that right?",
      "parentUuid": "1a59191e_7fac0220",
      "range": {
        "startLine": 29,
        "startChar": 16,
        "endLine": 29,
        "endChar": 96
      },
      "revId": "a994ed0bc0233ab04fec700941b6b2b660a7cf4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26362969_88a4d0ac",
        "filename": "inspector_overlay/highlight_flex_common.ts",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-11-13T09:39:13Z",
      "side": 1,
      "message": "Yes correct. The backend has no notion of flex lines after layout is done. The information is not kept around.\nSo on the backend we have some logic to discover when items start wrapping on subsequent lines.\nIn the end, we send the paths for all flex items, but grouped by flex lines as you said.\n\nOn the frontend, we go through all items on a line, and gradually create a quad that includes them all (to make sure flex lines are always as big as necessary to contain all their items), and then extend these quads to make sure they go to the edges of the flex container along the main direction.",
      "parentUuid": "d4264c72_4ee9c34c",
      "range": {
        "startLine": 29,
        "startChar": 16,
        "endLine": 29,
        "endChar": 96
      },
      "revId": "a994ed0bc0233ab04fec700941b6b2b660a7cf4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}