{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "08ced32a_e3b35dd1",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-06-30T13:14:01Z",
      "side": 1,
      "message": "nits: we can use the PrimitiveParameter",
      "range": {
        "startLine": 32,
        "startChar": 10,
        "endLine": 32,
        "endChar": 27
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3ea5922_12fbf93d",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-09-19T14:13:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08ced32a_e3b35dd1",
      "range": {
        "startLine": 32,
        "startChar": 10,
        "endLine": 32,
        "endChar": 27
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf6f9491_b830bdd7",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-06-30T13:27:10Z",
      "side": 1,
      "message": "Can we add some unit tests for this function in the later CL?",
      "range": {
        "startLine": 114,
        "startChar": 2,
        "endLine": 114,
        "endChar": 15
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d1b759f_2ff6f65e",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-09-19T14:13:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf6f9491_b830bdd7",
      "range": {
        "startLine": 114,
        "startChar": 2,
        "endLine": 114,
        "endChar": 15
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ba6b030_f74bbad6",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-06-30T13:27:10Z",
      "side": 1,
      "message": "Can we add some unit tests for this function in the later CL?",
      "range": {
        "startLine": 139,
        "startChar": 2,
        "endLine": 139,
        "endChar": 30
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d259250_93532b94",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-09-19T14:13:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ba6b030_f74bbad6",
      "range": {
        "startLine": 139,
        "startChar": 2,
        "endLine": 139,
        "endChar": 30
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d05172b3_b27709cf",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 194,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-06-30T13:27:10Z",
      "side": 1,
      "message": "Why we use `[]`, not `{}`?",
      "range": {
        "startLine": 194,
        "startChar": 28,
        "endLine": 194,
        "endChar": 30
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "525cb7c4_d715ff0a",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 194,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-09-19T14:13:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d05172b3_b27709cf",
      "range": {
        "startLine": 194,
        "startChar": 28,
        "endLine": 194,
        "endChar": 30
      },
      "revId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "10ea8f467f513d1e5481c8f833b62cd913275ea5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}