{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4aae78af_c76897d1",
        "filename": "test/unittests/front_end/panels/network/RequestResponseView_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-01-30T09:20:09Z",
      "side": 1,
      "message": "Open to suggestions if there is a better way to wait for this. Maybe `sinon` has a way to spy on e.g. `contentCommitted` of the source frame and fulfill a promise once the spy was called? I didn\u0027t find anything in their docs though.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 43,
        "endChar": 49
      },
      "revId": "56d767eb408963ce3f6501448c1aac64a0bf33e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79a11354_61aee099",
        "filename": "test/unittests/front_end/panels/network/RequestResponseView_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-01-30T09:30:17Z",
      "side": 1,
      "message": "Since it is the sourceFrame behavior that we are also testing here, I\u0027d observer effects it has outside of itself, e.g. spy on `textEditor` `state` setter",
      "parentUuid": "4aae78af_c76897d1",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 43,
        "endChar": 49
      },
      "revId": "56d767eb408963ce3f6501448c1aac64a0bf33e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8acbafc_d296a8d2",
        "filename": "test/unittests/front_end/panels/network/RequestResponseView_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-01-31T05:57:37Z",
      "side": 1,
      "message": "Thats my question, how can I `await` for a sinon.spy to be called? The problem is the asynchronicity between calling `component.showPreview()` and the `textEditor.state` setter being called.",
      "parentUuid": "79a11354_61aee099",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 43,
        "endChar": 49
      },
      "revId": "56d767eb408963ce3f6501448c1aac64a0bf33e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35710bd4_7f6f41f5",
        "filename": "test/unittests/front_end/panels/network/RequestResponseView_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-01-31T06:03:49Z",
      "side": 1,
      "message": "Oh, I typically do something like\n\n\n    await new Promise(resolve \u003d\u003e sinon.stub(...).callsFake(resolve));\n    \n See e.g. https://crsrc.org/third_party/devtools-frontend/src/test/unittests/front_end/entrypoints/inspector_main/InspectorMain_test.ts;l\u003d131",
      "parentUuid": "b8acbafc_d296a8d2",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 43,
        "endChar": 49
      },
      "revId": "56d767eb408963ce3f6501448c1aac64a0bf33e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}