{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b859145b_7bb367fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2024-06-13T20:34:16Z",
      "side": 1,
      "message": "Hey Changhao, would you be able to take a look, or route it to an appropriate reviewer? Thank you!",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b6e7258_3c60966d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-06-13T21:05:20Z",
      "side": 1,
      "message": "Hi Christy, I think Jack would be the expert here to look at this, along with Paul.",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2884daba_db60061c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "First up, I realize I basically handed you an impossible task. \n\"Let\u0027s have the instant events be part of a larger websocket event!\"   \nAs if that\u0027s trivial. :p  Anyhow, you\u0027re right that we\u0027ve never done that before.\n\nCreating a synthetic event for the overall websocket is perfect. Nailed that. :D\n\nI think there may be another direction to get the websocket events drawn on top of the synthetic one. Slightly less invasive.\nI did a quick spike to explore the idea and curious for your thoughts. This a diff on top of your CL: https://gist.github.com/paulirish/9542af86037e08ec513e684be11f34b1\n\nI am hoping you can tell me if this direction makes the forceDrawableLevel() method moot. I\u0027m still unsure of what behavior that check is fixing.\n\nI\u0027ll add that a bunch of your (and my) edits to TimelineFlameChartNetworkDataProvider.ts are because the real websocket trace events don\u0027t have args like SynNetworkRequest. We could create Syn events for each of those websocket events that do have a mimetype/url/priority/etc... But.. I agree with your impl that it feels kinda unnecessary. I could go either way, though. \n\nRegardless, you had a tough task here, as the infrastructure is not built well to suit this use case. Appreciate you giving it an honest go. :)",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f1f2338_928e01df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T23:10:58Z",
      "side": 1,
      "message": "\u003e  Slightly less invasive.\n\u003e I did a quick spike to explore the idea and curious for your thoughts.\n\nIn retrospect, I think much of the improvement in my attempt is worthwhile effects of merging WebsocketsHandler into NetworkRequestshandler.\n\nSo, feel free to gently ignore the details of that patch if it\u0027s annoying :)",
      "parentUuid": "2884daba_db60061c",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b8e428_e0440b55",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2024-06-14T23:20:06Z",
      "side": 1,
      "message": "Thank you so much for the inputs!\nI like the direction you are going in the refactor diff, though I was having a hard time making that work today... Typescript just wasnt happy about what I was trying to do here ðŸ˜‚, I\u0027ll spend more time on Monday.\nI think your approach can remove the forceDrawableLevel() hack I put in, which was needed because the flamechart assumes there\u0027s no stacking of the events (which make sense :), so it wont draw the synth event when zoomed in without that check.\n\nAnyways, I\u0027ll try and see if I can incorporate as much as your feedback and make the change less invasive.",
      "parentUuid": "2884daba_db60061c",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b68559a_b40c7d1b",
        "filename": "front_end/models/trace/handlers/WebSocketsHandler.ts",
        "patchSetId": 23
      },
      "lineNbr": 37,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "let\u0027s move this implementation into NetworkRequestHandler.\n\nConceptually it sorta belongs. (no strong feelings.)\n\nBut, more importantly, the main thing I noticed... Right now when we do the `this.#events.push` in networkdataprovider...  the events end up unsorted. And appendEventsAtLevel needs sorted.  Otherwise the level placement is incorrect and inefficient.. something i noticed with a trace.\nThe existing `traceEngineData.NetworkRequests.byTime` already takes care of the sort. So..  moving into there would address that bug. :)",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2060bb_0d87e7d2",
        "filename": "front_end/models/trace/handlers/WebSocketsHandler.ts",
        "patchSetId": 23
      },
      "lineNbr": 72,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "use Phase.COMPLETE, as this synth event has duration.",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecbe469c_a06ba319",
        "filename": "front_end/panels/timeline/NetworkTrackAppender.ts",
        "patchSetId": 23
      },
      "lineNbr": 22,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "is the word `connection` needed on these strings?   I don\u0027t care strongly but i\u0027m happy to reduce words if possible :)",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 2
      },
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa9141a8_fee94fe7",
        "filename": "front_end/panels/timeline/TimelineFlameChartNetworkDataProvider.ts",
        "patchSetId": 23
      },
      "lineNbr": 335,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "Probably want something with `ThemeSupport.ThemeSupport.instance().getComputedValue` so that it changes in dark mode.",
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "439b0972_fb58662b",
        "filename": "front_end/panels/timeline/TimelineFlameChartNetworkDataProvider.ts",
        "patchSetId": 23
      },
      "lineNbr": 340,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "how about\n\n```suggestion\n    context.setLineDash([3, 2]);\n    context.moveTo(start, lineY - 1);\n    context.lineTo(end, lineY - 1);\n    context.moveTo(start, lineY + 1);\n    context.lineTo(end, lineY + 1);\n```\n\ngoing double gives me more of a \u0027socket\u0027 feeling. and i think it needs the tighter spacing to help allow the tiny instant events to stand out.",
      "range": {
        "startLine": 338,
        "startChar": 0,
        "endLine": 340,
        "endChar": 31
      },
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7337415_6bf10c29",
        "filename": "front_end/panels/timeline/TimelineFlameChartNetworkDataProvider.ts",
        "patchSetId": 23
      },
      "lineNbr": 375,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-14T02:14:42Z",
      "side": 1,
      "message": "might as well set the args.data.priority to low in the synthetic event. can then avoid this special case.",
      "range": {
        "startLine": 374,
        "startChar": 2,
        "endLine": 375,
        "endChar": 33
      },
      "revId": "6090d28929b49fc8d5f4caeceee7a140a9e61c5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}