{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76ec5c1e_82797562",
        "filename": "front_end/entrypoints/main/MainImpl.ts",
        "patchSetId": 7
      },
      "lineNbr": 670,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-17T17:06:24Z",
      "side": 1,
      "message": "As this is coming from a CDP event I don\u0027t expect url will ever be branded.",
      "range": {
        "startLine": 670,
        "startChar": 4,
        "endLine": 670,
        "endChar": 110
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e41cdc0c_0b88eef8",
        "filename": "front_end/entrypoints/main/MainImpl.ts",
        "patchSetId": 7
      },
      "lineNbr": 670,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-03-18T13:37:20Z",
      "side": 1,
      "message": "The event is Defined in InspectorFrontendHostAPI.ts, I\u0027ve moved the typing to there",
      "parentUuid": "76ec5c1e_82797562",
      "range": {
        "startLine": 670,
        "startChar": 4,
        "endLine": 670,
        "endChar": 110
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e6d030e_6df41041",
        "filename": "front_end/models/bindings/FileUtils.ts",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-17T17:06:24Z",
      "side": 1,
      "message": "This cast looks unnecessary.",
      "range": {
        "startLine": 219,
        "startChar": 29,
        "endLine": 219,
        "endChar": 69
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80b2399e_5ae956a4",
        "filename": "front_end/models/bindings/FileUtils.ts",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-03-18T13:37:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e6d030e_6df41041",
      "range": {
        "startLine": 219,
        "startChar": 29,
        "endLine": 219,
        "endChar": 69
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73ddd9bc_2810149f",
        "filename": "front_end/models/workspace/WorkspaceImpl.ts",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-17T17:06:24Z",
      "side": 1,
      "message": "I\u0027m surprised that we are accepting every path type here; are all of them used?",
      "range": {
        "startLine": 43,
        "startChar": 27,
        "endLine": 43,
        "endChar": 36
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88079787_3e750398",
        "filename": "front_end/models/workspace/WorkspaceImpl.ts",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-03-18T13:37:20Z",
      "side": 1,
      "message": "I\u0027ve been checking it actually by logging, all three types appear there.",
      "parentUuid": "73ddd9bc_2810149f",
      "range": {
        "startLine": 43,
        "startChar": 27,
        "endLine": 43,
        "endChar": 36
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "238505e4_014df921",
        "filename": "front_end/models/workspace/WorkspaceImpl.ts",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-18T15:30:54Z",
      "side": 1,
      "message": "Leave as string for now, then. File a bug to look into the user experience implications of this.",
      "parentUuid": "88079787_3e750398",
      "range": {
        "startLine": 43,
        "startChar": 27,
        "endLine": 43,
        "endChar": 36
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47c4e41d_1f75b7e8",
        "filename": "front_end/panels/search/SearchConfig.ts",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-17T17:06:24Z",
      "side": 1,
      "message": "I\u0027d rather leave this as string if we haven\u0027t determined which it\u0027s supposed to be. And if people need to put `( |%20)` in their regexes to match spaces then that seems like a bug.",
      "range": {
        "startLine": 97,
        "startChar": 37,
        "endLine": 98,
        "endChar": 98
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62111fd6_ee95d642",
        "filename": "front_end/panels/search/SearchConfig.ts",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-03-18T13:37:20Z",
      "side": 1,
      "message": "We have figured out that it can be each of these 3 types here, should I still return string type in here?",
      "parentUuid": "47c4e41d_1f75b7e8",
      "range": {
        "startLine": 97,
        "startChar": 37,
        "endLine": 98,
        "endChar": 98
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63f513f2_d9b04e72",
        "filename": "front_end/panels/search/SearchConfig.ts",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-18T15:30:54Z",
      "side": 1,
      "message": "Yeah, leave it as a string.",
      "parentUuid": "62111fd6_ee95d642",
      "range": {
        "startLine": 97,
        "startChar": 37,
        "endLine": 98,
        "endChar": 98
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a5c0c8_d3268c48",
        "filename": "front_end/panels/sources/SourcesSearchScope.ts",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-17T17:06:24Z",
      "side": 1,
      "message": "We should not have situations where we know we have a path but don\u0027t know whether it is encoded. Should UISourceCode.fullDisplayName() have a branded type, or is it best understood as just a string?",
      "range": {
        "startLine": 162,
        "startChar": 45,
        "endLine": 163,
        "endChar": 53
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f5e9fef_b6a8186a",
        "filename": "front_end/panels/sources/SourcesSearchScope.ts",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-03-18T13:37:20Z",
      "side": 1,
      "message": "Hm, I don\u0027t remember how I figured it should be either Raw- or EncodedPathString last time, but I\u0027ve checked it just now and it\u0027s either EncodedPathString or UrlString that I\u0027m seeing here. Changing to these two",
      "parentUuid": "c6a5c0c8_d3268c48",
      "range": {
        "startLine": 162,
        "startChar": 45,
        "endLine": 163,
        "endChar": 53
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c4981bd_107a96aa",
        "filename": "front_end/panels/sources/SourcesSearchScope.ts",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-18T15:30:54Z",
      "side": 1,
      "message": "Leave as string for now. In the future we will want to figure out how fullDisplayName() is used in the UI and figure out an appropriate branded type for that first, and fix the various places where that is set in the same CL as updating the search config behavior.",
      "parentUuid": "1f5e9fef_b6a8186a",
      "range": {
        "startLine": 162,
        "startChar": 45,
        "endLine": 163,
        "endChar": 53
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b43f68d2_b41f64d3",
        "filename": "front_end/ui/legacy/components/perf_ui/LineLevelProfile.ts",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-17T17:06:24Z",
      "side": 1,
      "message": "Ideally you would change this to be UrlString|number and get rid of the cast below. However, I am uncertain whether TypeScript will be able to infer from that that it is a UrlString if its type is \u0027string\u0027. If it can\u0027t, it should be able to if you change the checks to see if the type is \u0027number\u0027, and I doubt that would cause a behavior change.",
      "range": {
        "startLine": 190,
        "startChar": 50,
        "endLine": 190,
        "endChar": 65
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96604b47_d82a5167",
        "filename": "front_end/ui/legacy/components/perf_ui/LineLevelProfile.ts",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-03-18T13:37:20Z",
      "side": 1,
      "message": "Looks like it does work!",
      "parentUuid": "b43f68d2_b41f64d3",
      "range": {
        "startLine": 190,
        "startChar": 50,
        "endLine": 190,
        "endChar": 65
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6872b738_169d3734",
        "filename": "front_end/ui/legacy/components/perf_ui/LineLevelProfile.ts",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2022-03-18T15:30:54Z",
      "side": 1,
      "message": "I think we can clean this code up more as long as we\u0027re here. On line 140, update the type from `string|number` to `UrlString|number`. Then change both of the for loops in this function to use destructuring assignment so you can get rid of the casts:\n\n```\nfor (const [target, scriptToLineMap] of this.lineData) {\n  const debuggerModel \u003d //...\n  for (const [scriptIdOrUrl, lineToDataMap] of scriptToLineMap) {\n    // debuggerModel is null when...\n```\n\nand update the signature of addLineData as well, and assuming that callFrame.url has already been branded you shouldn\u0027t need to do any casting. (If callFrame.url isn\u0027t branded you can cast on line 126.)",
      "parentUuid": "96604b47_d82a5167",
      "range": {
        "startLine": 190,
        "startChar": 50,
        "endLine": 190,
        "endChar": 65
      },
      "revId": "0b6402e9e9acf0d6217ede0bd00132b06a55f6db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}