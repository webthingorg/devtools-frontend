{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "09f0776d_62f16865",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-22T08:37:38Z",
      "side": 1,
      "message": "üëç to this. In my experience 2 components with specific use cases are often clearer than one that can do both.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 52
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bacec6c_022f406c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-21T08:10:23Z",
      "side": 1,
      "message": "PTAL",
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00c6050f_af1f7245",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-21T08:16:04Z",
      "side": 1,
      "message": "I always thought that the \"data setters\" would calculate all the necessary data and the render would then simply collect and display them. This CL goes against that convention (guideline?) by having `getStyles` do some computation.\n\nI\u0027ll leave the review to Jack, as I am a bit unsure about the finer points of component architecture.\n\n",
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "423c83dc_df95e0fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-21T08:20:32Z",
      "side": 1,
      "message": "Right, but in practice it\u0027d be only re-computed upon re-render (setStyles call is right before render) so I think there should be no difference (?) and it does not seem like we need to store the styles.",
      "parentUuid": "00c6050f_af1f7245",
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f83606a5_7db7b0fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:25:45Z",
      "side": 1,
      "message": "Jack, PTAL.",
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34178e9b_d52c6ebd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-22T08:37:38Z",
      "side": 1,
      "message": "I like the overall improvements but would prefer us not to go down the `this._data` route, for reasons I left in the comment. I also think it doesn\u0027t discourage components taking endless streams of data, whereas when you have to do:\n\n```\nthis.prop1 \u003d data.prop1\nthis.prop2 \u003d data.prop2\n...\n```\n\nIt becomes clear quickly when a component is dealing with too much.",
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d91b3dd3_cf7b28c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:52:17Z",
      "side": 1,
      "message": "I think the types would highlight this issue as well. This component is a bit special because it has the getter for data and I think it makes sense if the returned object is exactly the same as the set one: otherwise, we would need to re-assemble the properties back into data. I think it\u0027s done this way to allow icon updates, e.g. changing the color without having the full data object at hand.",
      "parentUuid": "34178e9b_d52c6ebd",
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e099e54_7c1819be",
        "filename": "front_end/elements/Icon.ts",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-22T08:37:38Z",
      "side": 1,
      "message": "nit: I wonder about this being `isString`.",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 13
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88bffba5_6e64e72e",
        "filename": "front_end/elements/Icon.ts",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:52:17Z",
      "side": 1,
      "message": "good point!",
      "parentUuid": "8e099e54_7c1819be",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 13
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0199bf6_e4681124",
        "filename": "front_end/elements/Icon.ts",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-22T08:37:38Z",
      "side": 1,
      "message": "I find this quite hard to follow because you use `this._data` sometimes and `this.data` other times.\n\nI would personally lean away from `this._data` and prefer having all the properties set as `this.X`, this.Y` and so on. I appreciate that it makes some of the code slightly more verbose (particularly the data setter) I think it ends up with clearer code as you don\u0027t have to constantly reach into `this._data`, or `this.data`, and it makes it clearer that `this.data` is really largely for external callers, and internally to the component we can use just this.myProp.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 52,
        "endChar": 6
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c30f46_28b9577c",
        "filename": "front_end/elements/Icon.ts",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:52:17Z",
      "side": 1,
      "message": "Good point, I have simplified the code. Actually, I didn\u0027t intend to use `this.data`. \n\nRegarding splitting into separate properties, please see my other comment about the getter for data.",
      "parentUuid": "b0199bf6_e4681124",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 52,
        "endChar": 6
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b920927b_44df6c8a",
        "filename": "front_end/elements/Icon.ts",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-10-22T08:37:38Z",
      "side": 1,
      "message": "nice, I like this change.\n\nIs there ever a situation where we can\u0027t use CSS, I wonder? Maybe that should be the only way we allow support for changing the colour? WDYT?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 60
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a738633_e5124de8",
        "filename": "front_end/elements/Icon.ts",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:52:17Z",
      "side": 1,
      "message": "I guess sometimes you could have automatically generated colors and it could be easier to specify them via data. Of course, I think you can always do `el.style[\u0027--icon-color\u0027] \u003d generatedColor`. It\u0027s probably possible to go with CSS alone but I am not sure if I\u0027d break some usages so I\u0027d leave it for a follow-up.\n\nActually, I think almost all properties can be set via CSS (width, height, path etc). But I guess it\u0027d be less type safe and less self-documenting.",
      "parentUuid": "b920927b_44df6c8a",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 60
      },
      "revId": "12e450c96de1d0c16327d1e9d9883897384e234a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}