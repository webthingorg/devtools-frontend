{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "24777b6a_575755ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:36:52Z",
      "side": 1,
      "message": "RE CSS, you\u0027re not quite right - I\u0027m afraid you\u0027ve noticed this just too early - We\u0027ve literally got a doc to share with info on this today, but we now have a Ninja integration to let us import special `.css.js` files that get auto-generated for us by a `.css` file.\n\nHave a look at Kriti\u0027s CL here https://crrev.com/c/2994705, which shows an example of doing this. We\u0027ll share a doc around too (internally) with more detail shortly. Happy to pair over VC if you need a hand.",
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0002926e_efcc4917",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:46:52Z",
      "side": 1,
      "message": "Broadly LGTM once the CSS is updated - thanks!",
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5acfca2a_299a52c9",
        "filename": "front_end/panels/elements/components/CSSQuery.ts",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:46:52Z",
      "side": 1,
      "message": "I\u0027m going to work on breaking inspectorCommon up so this becomes less of a pain: https://crbug.com/1225925.\n\n(no need to do anything now!)",
      "range": {
        "startLine": 32,
        "startChar": 1,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "074708e0_95549755",
        "filename": "front_end/panels/elements/components/CSSQuery.ts",
        "patchSetId": 9
      },
      "lineNbr": 42,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:46:52Z",
      "side": 1,
      "message": "if `this.editable` is always the result of `Boolean(this.onQueryTextclick)`, can we not store `this.editable` and calculate it based on `this.onQueryTextClick` every time?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 51
      },
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "756c8cfe_6bda06a9",
        "filename": "front_end/panels/elements/components/CSSQuery.ts",
        "patchSetId": 9
      },
      "lineNbr": 57,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:46:52Z",
      "side": 1,
      "message": "nit: would prefer `LitHtml.nothing` over `null`",
      "range": {
        "startLine": 57,
        "startChar": 67,
        "endLine": 57,
        "endChar": 71
      },
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a56f121c_5daf3bd6",
        "filename": "front_end/panels/elements/cssQuery.css",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:46:52Z",
      "side": 1,
      "message": "I think stylelint will moan here - these are gonna need to be prefixed with `--override`.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 11,
        "endChar": 50
      },
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b4fc947_c18dc98a",
        "filename": "test/unittests/front_end/panels/elements/components/CSSQuery_test.ts",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-02T07:46:52Z",
      "side": 1,
      "message": "nit : you could have used `sinon.spy` here to create a spy rather than increase the click counter\n\nhttps://sinonjs.org/releases/latest/spies/",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 41,
        "endChar": 6
      },
      "revId": "3e4a226cd7bb580653878b9f494b1721dee78f4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}