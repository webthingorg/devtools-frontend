{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "41dc6a85_45b41d49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 51
      },
      "lineNbr": 0,
      "author": {
        "id": 1341633
      },
      "writtenOn": "2020-11-11T20:47:01Z",
      "side": 1,
      "message": "+Yang to CC to delegate reviewers",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c3693c6_4e8fae77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 51
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Thanks, Iâ€™ve left some code comments. \n\nAt a higher level, it would have been nice to implement this new UI using the new components system. That would make it easier to add tests as well. Is this planned as follow-up work? +Paul and +Jack",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da274203_b48bd816",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 51
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-11-12T15:19:24Z",
      "side": 1,
      "message": "+1 to a component being a nicer experience here; particularly as this is a lot of code to add without tests.\n\nWas using the component system considered for this work? I ask only because if it was but there was something that blocked you using it, it\u0027d be great to know as our goal is to build all UI using the new system moving forwards and part of that includes unblocking us when we hit issues.",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "587ff274_7cc714b9",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 1,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "2020",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "785f1c30_663e2b37",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 29,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Let\u0027s try to keep some separation between JS and CSS, by instead adding a class here which then applies those styles.",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57f836d2_8e36f317",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 76,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Please turn this into a `FIXME(crbug.com/XXX): ...` comment",
      "range": {
        "startLine": 76,
        "startChar": 9,
        "endLine": 76,
        "endChar": 22
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19a82df1_f3737925",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 119,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "It doesn\u0027t look like we actually need `i` in the loop body, so let\u0027s clean this up by using for-of instead. That will allow us to get rid of the repeated `computedFontArray[i]` as well",
      "range": {
        "startLine": 119,
        "startChar": 9,
        "endLine": 119,
        "endChar": 53
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc57e271_cd04dedd",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 120,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Use String.prototype.includes",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3360f90_0b4b0176",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 141,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Please make this a `FIXME(crbug.com/XXX):` comment",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a395753a_422f7f28",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 144,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Since you use this repeatedly, let\u0027s do `const first \u003d value.charAt(0)` and re-use that",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 144,
        "endChar": 23
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7baac3db_2ccca60c",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 145,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "remove the redundant backslash",
      "range": {
        "startLine": 145,
        "startChar": 29,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1835101_0ae4d7f4",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 147,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "remove the redundant backslash",
      "range": {
        "startLine": 147,
        "startChar": 29,
        "endLine": 147,
        "endChar": 31
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "457addf6_6e44ffb5",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 289,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Can we use for-of?",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1eb5af9_ec7d9746",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 293,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Can we use for-of?",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee6c04c3_a756354f",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 384,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "!this._staticParams.unitsArray.includes(this._units)\n\nAlso, should this be a set?",
      "range": {
        "startLine": 384,
        "startChar": 24,
        "endLine": 384,
        "endChar": 90
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2e43cea_0f2f19f5",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 428,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Should keyValuesArray be a Set instead? (checking for presence would become O(1) instead of O(n))",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fd08a56_8a23c70d",
        "filename": "front_end/inline_editor/FontEditor.js",
        "patchSetId": 51
      },
      "lineNbr": 698,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Can we do\n\n    icon.height \u003d 16;\n\n?",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec5b7d14_81ed7e75",
        "filename": "front_end/inline_editor/FontEditorUnitConverter.js",
        "patchSetId": 51
      },
      "lineNbr": 146,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "Why do all these `*multiplier`s return strings? IIUC their return values are potentially being used later as:\n\n    prevUnitMultiplier / newUnitMultiplier\n\nâ€¦which forces number conversion anyway. Can we return numbers directly?",
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "babb48ac_02ebeb1c",
        "filename": "front_end/inline_editor/fontEditor.css",
        "patchSetId": 51
      },
      "lineNbr": 2,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "2020",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 17
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1663682_a99393a2",
        "filename": "front_end/inline_editor/fontEditor.css",
        "patchSetId": 51
      },
      "lineNbr": 105,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "What\u0027s the reason for the .00000000000002? It\u0027s not immediately obvious to me. Same below (line 124)",
      "range": {
        "startLine": 105,
        "startChar": 32,
        "endLine": 105,
        "endChar": 50
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ad390b_22c784fa",
        "filename": "front_end/ui/UIUtils.js",
        "patchSetId": 51
      },
      "lineNbr": 1303,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-11-12T10:55:31Z",
      "side": 1,
      "message": "entries is the default map iterator, so we can remove this",
      "range": {
        "startLine": 1303,
        "startChar": 39,
        "endLine": 1303,
        "endChar": 49
      },
      "revId": "ba2254b31f5b98b2e029780bbfcbc5b8b5b98f4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}