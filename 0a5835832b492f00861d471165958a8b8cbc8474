{
  "comments": [
    {
      "key": {
        "uuid": "b75b1409_01ce0692",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:01:28Z",
      "side": 1,
      "message": "This one was a bit tricky; mainly because the search bar doesn\u0027t work once you switch to the Containment view so you can\u0027t follow the same pattern as the other e2e tests.\n\nI think we have two options:\n\n1) Land this with the search not working, and file a bug to fix the search functionality and come back and update the layout test\n2) Don\u0027t land this until the search is fixed\n\nI lean towards 1) because it lets us more quickly get rid of the old layout tests and unblock the v8 work that\u0027s blocked on low test confidence.\n\nsigurds@ aerotwist@ what do you think?",
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66ae2a54_47e60d8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "Some comments. Please also run the test excessively locally to make sure it doesn\u0027t flake, the devil is in the details here.",
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f64731bb_a358c550",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-09-11T13:34:31Z",
      "side": 1,
      "message": "+1 to Sigurd\u0027s comments. LGTM otherwise.",
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c9d136_3fd2b9c2",
        "filename": "test/e2e/helpers/memory-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "Hmm.. is there a way to not use the internal values, but the names?",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 183,
        "endChar": 1
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac938474_3f548f6d",
        "filename": "test/e2e/helpers/memory-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:36:40Z",
      "side": 1,
      "message": "I\u0027m not sure... I guess we could query the DOM to find the `value`s for each of the `option`s and then find the one we want?",
      "parentUuid": "79c9d136_3fd2b9c2",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 183,
        "endChar": 1
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e2a7452_a2fcc8e4",
        "filename": "test/e2e/helpers/memory-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:48:40Z",
      "side": 1,
      "message": "This is working and is nicer üëç",
      "parentUuid": "ac938474_3f548f6d",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 183,
        "endChar": 1
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9cbf1ed_4fbc884a",
        "filename": "test/e2e/helpers/memory-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "Let\u0027s add an aria label to the drop-down and use that to select.",
      "range": {
        "startLine": 185,
        "startChar": 2,
        "endLine": 185,
        "endChar": 75
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d58193b_c0b2ce29",
        "filename": "test/e2e/helpers/memory-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-09-11T13:34:31Z",
      "side": 1,
      "message": "If it makes sense to use aria, for sure do that, but if not then we should add a data- attribute and select via that. However, definitely agree that if we can collapse the selector into something that is resilient to markup changes all the better.",
      "parentUuid": "d9cbf1ed_4fbc884a",
      "range": {
        "startLine": 185,
        "startChar": 2,
        "endLine": 185,
        "endChar": 75
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e3e699f_dac79544",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "Can we guarantee that this is always visible?",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 55,
        "endChar": 70
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de18f5e8_1fb0f0dc",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:36:40Z",
      "side": 1,
      "message": "I don\u0027t follow what you mean - if it\u0027s not, something has gone wrong with the test, and it\u0027ll fail. Is there another way you\u0027d rather query for this element?",
      "parentUuid": "5e3e699f_dac79544",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 55,
        "endChar": 70
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b5ebce_8370a3d9",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "I\u0027m puzzled, this shouldn\u0027t be necessary from the type of waitForElementWithTextContent. Can you explain why it is?",
      "range": {
        "startLine": 57,
        "startChar": 3,
        "endLine": 57,
        "endChar": 34
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714c39b2_4706f9eb",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:36:40Z",
      "side": 1,
      "message": "No, it\u0027s not. This was left over from when I was hacking on it and forgot to remove.",
      "parentUuid": "54b5ebce_8370a3d9",
      "range": {
        "startLine": 57,
        "startChar": 3,
        "endLine": 57,
        "endChar": 34
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bab30a33_266b5078",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "714c39b2_4706f9eb",
      "range": {
        "startLine": 57,
        "startChar": 3,
        "endLine": 57,
        "endChar": 34
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92ce27b8_1268a23a",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "Does it make sense to restrict this to children of the pendingActiviesElement?",
      "range": {
        "startLine": 67,
        "startChar": 44,
        "endLine": 67,
        "endChar": 74
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea3a859_5af22813",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:36:40Z",
      "side": 1,
      "message": "You\u0027d think so, but unfortunately the actual HTML structure doesn\u0027t have them as child elements - they are all on the same level.",
      "parentUuid": "92ce27b8_1268a23a",
      "range": {
        "startLine": 67,
        "startChar": 44,
        "endLine": 67,
        "endChar": 74
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6989ff71_813ac825",
        "filename": "test/e2e/memory/memory_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ea3a859_5af22813",
      "range": {
        "startLine": 67,
        "startChar": 44,
        "endLine": 67,
        "endChar": 74
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1d0ce4_c7b5a414",
        "filename": "test/shared/helper.ts",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-09-11T13:15:09Z",
      "side": 1,
      "message": "This is always truthy, so the waitForFunction doesn\u0027t work properly.\n\nI would do\n\n  if (elems \u0026\u0026 elems.length) {\n    return elems;\n  }\n  return undefined;\n\nMaybe you can even defined the return type as NonEmptyArray\u003c...\u003e|undefined using\n\ntype NonEmptyArray\u003cT\u003e \u003d [T, ...T[]];",
      "range": {
        "startLine": 224,
        "startChar": 38,
        "endLine": 224,
        "endChar": 49
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ead699_58060802",
        "filename": "test/shared/helper.ts",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:36:40Z",
      "side": 1,
      "message": "Ah ack, good spot.",
      "parentUuid": "cd1d0ce4_c7b5a414",
      "range": {
        "startLine": 224,
        "startChar": 38,
        "endLine": 224,
        "endChar": 49
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "603a828e_efe5771d",
        "filename": "test/shared/helper.ts",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-09-11T13:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82ead699_58060802",
      "range": {
        "startLine": 224,
        "startChar": 38,
        "endLine": 224,
        "endChar": 49
      },
      "revId": "0a5835832b492f00861d471165958a8b8cbc8474",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}