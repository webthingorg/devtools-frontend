{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "70a6d1d4_aeac9cf3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-01-19T16:07:40Z",
      "side": 1,
      "message": "LGTM with one comment :)",
      "revId": "7f18e9ef01e04d6e20bbe0880ed6f895f4faa187",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa2d7400_3c81713a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-01-19T16:08:39Z",
      "side": 1,
      "message": "and actually, I loved the idea of getting authored text explicitly if needed!",
      "parentUuid": "70a6d1d4_aeac9cf3",
      "revId": "7f18e9ef01e04d6e20bbe0880ed6f895f4faa187",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c78b6fb_cff142b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-01-19T16:13:29Z",
      "side": 1,
      "message": "now that I realized, powerless components changed the behavior of the ColorPicker too: for example, when I author `hwb(341deg 100% 0%)`, in color picker it is shown as `0 100% 0` and changing the hue does not have any effect. I think we need to think about this",
      "revId": "7f18e9ef01e04d6e20bbe0880ed6f895f4faa187",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87bba2b7_a34a9ba6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-19T16:19:07Z",
      "side": 1,
      "message": "I still think the color picker should work in either an unbounded or the largest color space and convert to the selected format from there. We can show a warning again if that conversion was lossy. would that make sense?",
      "parentUuid": "9c78b6fb_cff142b7",
      "revId": "7f18e9ef01e04d6e20bbe0880ed6f895f4faa187",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a8eaba1_c49f996b",
        "filename": "front_end/ui/legacy/components/color_picker/Spectrum.ts",
        "patchSetId": 6
      },
      "lineNbr": 986,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-01-19T16:07:40Z",
      "side": 1,
      "message": "I think this slightly changes the behavior:\n* Previously, AFAIU, we were returning originalText if `this.colorFormat \u003d\u003d\u003d color.format`[1]\n* Now, we return the generated string if the `colorFormat` exists in the Spectrum.\n\nSo, if we want to preserve the old behavior, we need to check\n`if (this.colorFormat \u003d\u003d\u003d color.format)` and return the original text.\n\nThough changing the old behavior might also be a reason, so was it intended? :)\n\n[1]: in `Color.ts`, it is `color.as(format)` and `colorConversions[format] \u003d () \u003d\u003e this` which comes back to the same color. If the original text exists there and the authored color was in gamut, we return the origianl text",
      "revId": "7f18e9ef01e04d6e20bbe0880ed6f895f4faa187",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "678c76ae_ea5815dd",
        "filename": "front_end/ui/legacy/components/color_picker/Spectrum.ts",
        "patchSetId": 6
      },
      "lineNbr": 986,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-19T16:15:39Z",
      "side": 1,
      "message": "nice catch!",
      "parentUuid": "9a8eaba1_c49f996b",
      "revId": "7f18e9ef01e04d6e20bbe0880ed6f895f4faa187",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}