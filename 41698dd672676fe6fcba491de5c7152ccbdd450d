{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f84bcbdf_f6ec4067",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-06-01T10:22:15Z",
      "side": 1,
      "message": "PTAL!\n\nCurious about your thoughts on:\n- Namespacing of the new APIs\n- Error reporting. Are the Record objects sensible userspace errors?\n- asnyc vs callbacks. Existing APIs predate async/await and use callbacks instead. Should we really keep that pattern or write modern APIs?\n- New APIs are implemented on evaluateOnCallFrame. Should we introduce dedicated CDP commands instead?",
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9ac4f4e_0a8e4b28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-06-02T08:32:54Z",
      "side": 1,
      "message": "Looking great, but some tests seem to be failing.",
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "859c3c07_04b21c64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-06-02T10:36:39Z",
      "side": 1,
      "message": "Yes, there\u0027s a web_test that checks the shape of the extension api. That needs to be disabled for this change to land. The windows bot I presume is flaking, looks unrelated.",
      "parentUuid": "f9ac4f4e_0a8e4b28",
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65539838_08411f97",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-06-02T08:32:54Z",
      "side": 1,
      "message": "It looks like all the existing methods in this interface have descriptions. Please add descriptions for all the newly introduced methods, too.\n\nAlso, the stopId sounds more like a frameId, perhaps we remove this? We should also say that the frame ids are fresh for every stop, but I am guessing you are not really relying on that?",
      "range": {
        "startLine": 251,
        "startChar": 6,
        "endLine": 251,
        "endChar": 102
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8429082_40023f9c",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-06-02T10:36:39Z",
      "side": 1,
      "message": "\u003e Also, the stopId sounds more like a frameId, perhaps we remove this? We should also say that the frame ids are fresh for every stop, but I am guessing you are not really relying on that?\n\nCan you say why stopId should be removed?",
      "parentUuid": "65539838_08411f97",
      "range": {
        "startLine": 251,
        "startChar": 6,
        "endLine": 251,
        "endChar": 102
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4451977d_04a66c27",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-06-02T10:38:51Z",
      "side": 1,
      "message": "Eh, I am sorry, I meant rename stopId to frameId.",
      "parentUuid": "b8429082_40023f9c",
      "range": {
        "startLine": 251,
        "startChar": 6,
        "endLine": 251,
        "endChar": 102
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cabace4_b7ab4153",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-06-02T10:41:02Z",
      "side": 1,
      "message": "Got it! I named it stopId to distinguish from CDP\u0027s callFrameId, which would _not_ be fresh across stops.",
      "parentUuid": "4451977d_04a66c27",
      "range": {
        "startLine": 251,
        "startChar": 6,
        "endLine": 251,
        "endChar": 102
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85eeae0a_702c006f",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-06-22T10:09:38Z",
      "side": 1,
      "message": "Comments added. caseq@, any thoughts on the stopId vs frameId name?",
      "parentUuid": "1cabace4_b7ab4153",
      "range": {
        "startLine": 251,
        "startChar": 6,
        "endLine": 251,
        "endChar": 102
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "000406b2_a3d57cfa",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1115876
      },
      "writtenOn": "2022-06-24T23:28:32Z",
      "side": 1,
      "message": "frameId is wa-ay too overloaded I think, we use it for iframes and then callFrameIds would also contribute to confusion. Considering stopId is only valid until execution is resumed, I think the name conveys the semantics much better than (stack|call)frameId.",
      "parentUuid": "85eeae0a_702c006f",
      "range": {
        "startLine": 251,
        "startChar": 6,
        "endLine": 251,
        "endChar": 102
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0590d98_f806a29f",
        "filename": "front_end/panels/sources/ScopeChainSidebarPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-06-02T08:32:54Z",
      "side": 1,
      "message": "This seems to be handling exactly the same situation as the \u0027if\u0027 below.\n\nShould not it be `instanceof Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject` and then check `obj.linearMemoryAddress !\u003d\u003d undefined`?",
      "range": {
        "startLine": 320,
        "startChar": 8,
        "endLine": 320,
        "endChar": 65
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "baeb0bcc_83d05d71",
        "filename": "front_end/panels/sources/ScopeChainSidebarPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-06-22T10:09:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0590d98_f806a29f",
      "range": {
        "startLine": 320,
        "startChar": 8,
        "endLine": 320,
        "endChar": 65
      },
      "revId": "41698dd672676fe6fcba491de5c7152ccbdd450d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}