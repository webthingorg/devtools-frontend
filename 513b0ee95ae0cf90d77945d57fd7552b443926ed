{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e7c6ddeb_6f7419f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 48
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-09-17T12:18:34Z",
      "side": 1,
      "message": "Style-wise it looks good. Have you considered using CSS Nesting to simplify the css logic here? It seems like a lot of CSS are about manipulating styles based on different states of a selector/element. Maybe with nesting the logic can be more explicit.",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5abf2ca_aec72d7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 48
      },
      "lineNbr": 0,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-19T15:16:47Z",
      "side": 1,
      "message": "Changed to use css nesting",
      "parentUuid": "e7c6ddeb_6f7419f0",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b12dd11f_84fb69f6",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 48
      },
      "lineNbr": 579,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-09-13T11:06:21Z",
      "side": 1,
      "message": "When would be the case where runtimeModel is null?",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca50fca5_573f2f69",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 48
      },
      "lineNbr": 579,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-13T12:55:36Z",
      "side": 1,
      "message": "It is null when we don\u0027t actually want a stack trace; we\u0027re just sharing code to get the Show ignore-listed/Show less links. See change below.",
      "parentUuid": "b12dd11f_84fb69f6",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52764b20_4e95b291",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 48
      },
      "lineNbr": 579,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-09-20T12:08:04Z",
      "side": 1,
      "message": "How about breaking the shared part out into a separate helper? I think that would ease readability.",
      "parentUuid": "ca50fca5_573f2f69",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0d57f78_b5b29db9",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 48
      },
      "lineNbr": 579,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-26T09:43:32Z",
      "side": 1,
      "message": "That would involve a complete rewrite of this function and I\u0027m reluctant to make this CL bigger still.",
      "parentUuid": "52764b20_4e95b291",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed4909c1_477f3546",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 48
      },
      "lineNbr": 579,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-09-26T10:37:41Z",
      "side": 1,
      "message": "I don\u0027t think it would be that bad. You should be able to pretty much split the function in the middle, call the first half from the second and return `{stackTraceElement, contentElement, messageElement, clickableElement, toggleElement}`",
      "parentUuid": "c0d57f78_b5b29db9",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58bbf5d0_ac5e909f",
        "filename": "front_end/panels/console/ConsoleViewMessage.ts",
        "patchSetId": 48
      },
      "lineNbr": 1248,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-13T12:55:36Z",
      "side": 1,
      "message": "This is where we call with null.",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa2aca57_197c9b8f",
        "filename": "front_end/ui/legacy/components/utils/JSPresentationUtils.ts",
        "patchSetId": 48
      },
      "lineNbr": 187,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-09-13T11:06:21Z",
      "side": 1,
      "message": "qq: why does this `tableSection` have to be at this scope? Is it possible to move it more locally, i.e. within the for loop as `tableBody`, and then in this case you also probably don\u0027t need to nullify it every time after you set up the row.",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9db0493_c97022a6",
        "filename": "front_end/ui/legacy/components/utils/JSPresentationUtils.ts",
        "patchSetId": 48
      },
      "lineNbr": 187,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-13T12:55:36Z",
      "side": 1,
      "message": "It carries over between iterations. A segment of the callstack with all synchronous calls will go in one section.",
      "parentUuid": "fa2aca57_197c9b8f",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4c8debc_d17a1b2a",
        "filename": "front_end/ui/legacy/components/utils/JSPresentationUtils.ts",
        "patchSetId": 48
      },
      "lineNbr": 187,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-19T15:16:47Z",
      "side": 1,
      "message": "Added comment",
      "parentUuid": "e9db0493_c97022a6",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b1d3104_b7434c69",
        "filename": "front_end/ui/legacy/components/utils/JSPresentationUtils.ts",
        "patchSetId": 48
      },
      "lineNbr": 207,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-09-13T11:06:21Z",
      "side": 1,
      "message": "Just curious, why do we nullify `tableSection` in the previous if-block but not in this else-block?",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "336bcd7f_f6d97171",
        "filename": "front_end/ui/legacy/components/utils/JSPresentationUtils.ts",
        "patchSetId": 48
      },
      "lineNbr": 207,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-13T12:55:36Z",
      "side": 1,
      "message": "Because in this case we want to use the same tableSection on the next iteration, as this is a synchronous frame.",
      "parentUuid": "2b1d3104_b7434c69",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12eeda4c_0ec4b922",
        "filename": "front_end/ui/legacy/components/utils/JSPresentationUtils.ts",
        "patchSetId": 48
      },
      "lineNbr": 207,
      "author": {
        "id": 1458307
      },
      "writtenOn": "2024-09-19T15:16:47Z",
      "side": 1,
      "message": "Added comment",
      "parentUuid": "336bcd7f_f6d97171",
      "revId": "513b0ee95ae0cf90d77945d57fd7552b443926ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}