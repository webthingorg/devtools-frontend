{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77ef3548_55850e12",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-02-19T14:35:11Z",
      "side": 1,
      "message": "As far as I understand, `addPopover` is used to add arbitrary popovers to the Styles pane. Though, from the implementation in `StylesSidebarPane` it seems like this functionality is added only for CSS var swatch.\n\nCan we update the implementation (like naming and stuff) to reflect the arbitrary nature of this `addPopover` mechanism?\n\nIn addition to that, we need to be able to get `jslogContext` there dynamically since it says `elements.css-var` for all popovers now but it needs to be `elements.color-mix` now.",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c130022_238a5d40",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-19T15:52:30Z",
      "side": 1,
      "message": "Nice catch! What\u0027s the contract for jslog contexts? e.g., why shouldn\u0027t it be just elements.popover for example?",
      "parentUuid": "77ef3548_55850e12",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85d63588_e9aece51",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-02-19T16:01:07Z",
      "side": 1,
      "message": "I think the idea is, we want to understand which popover is shown when a popover is shown. So, it would be good to have a way to differentiate the shown popovers.\n\nI\u0027m not exactly sure if we can or cannot deduct which popover is shown from the context, so; just to be safe, it\u0027d be nice if we can differentiate them at that stage.",
      "parentUuid": "8c130022_238a5d40",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92aa4348_2b0eb603",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-20T09:29:40Z",
      "side": 1,
      "message": "PopoverHelper doesn\u0027t allow us to do that right now. I\u0027m going to refactor it a little.",
      "parentUuid": "85d63588_e9aece51",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a5dc568_d2881305",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-02-19T14:35:11Z",
      "side": 1,
      "message": "We can say `span.style.margin \u003d \u0027auto\u0027` for centering the span inside the popover :)",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2a35ced_2380fa9d",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-19T15:52:30Z",
      "side": 1,
      "message": "this isn\u0027t just about centering, also about nicely sizing the popover.",
      "parentUuid": "8a5dc568_d2881305",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b0e5f79_0fbad007",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-02-19T16:01:07Z",
      "side": 1,
      "message": "Ah I see, cool!",
      "parentUuid": "d2a35ced_2380fa9d",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc4753f_2e1e3ce9",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-02-19T14:35:11Z",
      "side": 1,
      "message": "(nit, suggestion): I wonder if it might make sense to parse this color and render it in a different format like `rgb` if it is possible since it is the format most of the people use right now. WDYT?\n\nIf it is not possible, we can render it as `color` function too with some rounded values.",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3977ac65_c069fb6e",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-19T15:52:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fc4753f_2e1e3ce9",
      "revId": "f8e3a4f17fa1d079c8f9e92eb755b3a29ba52e4d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}