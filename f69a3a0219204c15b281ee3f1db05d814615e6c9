{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f366e659_d0a04057",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-09T15:51:28Z",
      "side": 1,
      "message": "PTAL",
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "475c97cb_901a5193",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-10T07:55:28Z",
      "side": 1,
      "message": "LGTM with some comments/suggestions",
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0482a29_b3996491",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-10T07:55:28Z",
      "side": 1,
      "message": "wdyt if we assign to this file\u0027s `entryToNode` map the value returned by this call and declare a new map on treify? This way the treify function becomes portable too and not tied to the engine\u0027s data. (this is unrelated to this CL really but I just realized it could be useful)",
      "range": {
        "startLine": 354,
        "startChar": 21,
        "endLine": 354,
        "endChar": 27
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd416693_55641543",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-10T08:28:55Z",
      "side": 1,
      "message": "Yeah like it!",
      "parentUuid": "f0482a29_b3996491",
      "range": {
        "startLine": 354,
        "startChar": 21,
        "endLine": 354,
        "endChar": 27
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9848a99c_55188be0",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-10T08:42:55Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fd416693_55641543",
      "range": {
        "startLine": 354,
        "startChar": 21,
        "endLine": 354,
        "endChar": 27
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed132c51_1185b8c3",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-10T07:55:28Z",
      "side": 1,
      "message": "is it possible that we need to walk from multiple roots (i.e. all events in a thread)? If so, we\u0027d only need the tree from `treify` here (since it actually contains multiple trees)",
      "range": {
        "startLine": 583,
        "startChar": 16,
        "endLine": 583,
        "endChar": 24
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cce2424_920d9338",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-10T08:28:55Z",
      "side": 1,
      "message": "Yeah - I think we would. My thinking was that if we wanted to do that we could run `walkTree` for every `const root of tree.roots()` and so I didn\u0027t implement that as part of this function. wdyt?\n\nBut perhaps this should be called `walkTreeFromParentEntry` or something. wdyt?",
      "parentUuid": "ed132c51_1185b8c3",
      "range": {
        "startLine": 583,
        "startChar": 16,
        "endLine": 583,
        "endChar": 24
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8712d5a4_4ea59b32",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-10T08:42:55Z",
      "side": 1,
      "message": "makes sense. If walking all trees is something we\u0027ll do repeteadly it makes sense to have the function do it without every caller having to wrap the call in a `const root of tree.roots()`. And if we also expect to walk a single tree in repeated cases, then we can have another helper for that scenario",
      "parentUuid": "1cce2424_920d9338",
      "range": {
        "startLine": 583,
        "startChar": 16,
        "endLine": 583,
        "endChar": 24
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daab0f46_08fa5ce1",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-10T07:55:28Z",
      "side": 1,
      "message": "do we also need a dedicated callback for instant events or is it unnecessary?",
      "range": {
        "startLine": 600,
        "startChar": 64,
        "endLine": 600,
        "endChar": 65
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83e52232_f61b74b9",
        "filename": "front_end/models/trace/handlers/RendererHandler.ts",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-10T08:28:55Z",
      "side": 1,
      "message": "I wasn\u0027t sure if that distinction is useful - my thought was in the callback the caller could check on the phase of the event and just do different things for different event phases/types if they want. I would rather keep the amount of callbacks down and then add in the future.\n\nGenerally I like the idea of trying not to differentiate events and just having generic handlers for all events and leave anything else up to the caller.",
      "parentUuid": "daab0f46_08fa5ce1",
      "range": {
        "startLine": 600,
        "startChar": 64,
        "endLine": 600,
        "endChar": 65
      },
      "revId": "f69a3a0219204c15b281ee3f1db05d814615e6c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}