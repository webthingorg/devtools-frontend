{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "91abc5e7_8d4fda52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1467227
      },
      "writtenOn": "2021-02-10T16:55:31Z",
      "side": 1,
      "message": "This cl assumes approval of https://docs.google.com/document/d/1iiydn8JMtVlR38NZFKWr_Jt-_Ns4njRfJCrUX23h08Q/edit.",
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e7ffe36_7ce64ae8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-11T06:01:58Z",
      "side": 1,
      "message": "lgtm from my side, but please wait for Sigurd",
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65e57dc5_af91ded4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-02-11T08:16:54Z",
      "side": 1,
      "message": "Simon, could you advise Chris on how to write an e2e test for this? We don\u0027t have any yet and this seems a good opportunity.",
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60abbcfb_7a42ecdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-11T08:26:52Z",
      "side": 1,
      "message": "I am not sure how to test this with e2e tbh:\n\n1) We\u0027d need multiple origins on localhost\n2) We\u0027d need first party sets enabled and some of the origins marked as the same first party.\n\n2) could be probably solved by specifying the command line arguments needed for the test. Not sure we already have support for that\n\n1) could be solved similar to how we test cross-origin iframes, if we can do that in e2e tests.",
      "parentUuid": "65e57dc5_af91ded4",
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85202f08_abb732bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-02-11T08:32:44Z",
      "side": 1,
      "message": "You might able to use a trick similar to test/e2e/resources/application/cross-origin-cookies.html to get a cross-origin cookie.\n\nWould there be any harm in enabling the same party flag for our whole test suite? If not, let\u0027s do it. Is it part of the experimental web platform features flag? Maybe we should enable that as well? \n\nIn any case, this requires some discussion with testing folks on our end, and I don\u0027t want to block this CL on the test, but it would be great if you could look into adding one as a follow-up.\n\nI\u0027ll lgtm once my other concerns are addressed.",
      "parentUuid": "60abbcfb_7a42ecdd",
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fedd9612_388077b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-11T08:40:43Z",
      "side": 1,
      "message": "Seems that we can enable features by setting CHROME_FEATURES environment variable, that our test runner supports. Not sure when/how to do that so the test runs in a binary with the feature enabled.\n\nFor the origins, I am not sure that the cross-origin trick of using localhost vs 127.0.0.1 would work with same party. As members of a 1P set must be origins and not IP addresses (also localhost is special so unsure whether this actually tests what we want it to test).",
      "parentUuid": "85202f08_abb732bb",
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac89a22a_de81d67c",
        "filename": "front_end/sdk/NetworkRequest.js",
        "patchSetId": 2
      },
      "lineNbr": 1826,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-02-11T08:16:54Z",
      "side": 1,
      "message": "Please add a case here as well and return the proper attribute (SameParty should already exist).",
      "range": {
        "startLine": 1826,
        "startChar": 13,
        "endLine": 1826,
        "endChar": 44
      },
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1051f5b2_bc881404",
        "filename": "front_end/sdk/NetworkRequest.js",
        "patchSetId": 2
      },
      "lineNbr": 1853,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-02-11T08:16:54Z",
      "side": 1,
      "message": "Please add a case here as well and return the proper attribute (SameParty should already exist).",
      "range": {
        "startLine": 1853,
        "startChar": 13,
        "endLine": 1853,
        "endChar": 47
      },
      "revId": "a5334a50556bf821440d3b64291c56ec7e52f17b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}