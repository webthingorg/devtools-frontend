{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "37560b00_8fe0d2de",
        "filename": "front_end/panels/timeline/components/Sidebar.ts",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-09-23T10:37:50Z",
      "side": 1,
      "message": "what do you think we just pass the the annotations count to ` this.#updateAnnotationsCountBadge()` and then we don\u0027t need `this.#annotationCount` variable\n\n```\nthis.#updateAnnotationsCountBadge(updatedAnnotations.length);\n```",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 113,
        "endChar": 40
      },
      "revId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d9b9c59_c8df4c81",
        "filename": "front_end/panels/timeline/components/Sidebar.ts",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2024-09-23T10:45:31Z",
      "side": 1,
      "message": "We do need this, when we first time load a trace file, the `setAnnotations` is called before the `Annotations` tab is appended. so we do either need to store the annotations or the number of them to handle this case, so when the `Annotations` tab is appended (in `wasShown()` wen can render the count.",
      "parentUuid": "37560b00_8fe0d2de",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 113,
        "endChar": 40
      },
      "revId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64d2b455_ee1dd2b9",
        "filename": "front_end/panels/timeline/components/Sidebar.ts",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-09-23T10:37:50Z",
      "side": 1,
      "message": "does it need a null state?\n\n`#countAdorner: Adorners.Adorner.Adorner \u003d new Adorners.Adorner.Adorner();`",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 59
      },
      "revId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bc9c29e_6b8db3e3",
        "filename": "front_end/panels/timeline/components/Sidebar.ts",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2024-09-23T10:45:31Z",
      "side": 1,
      "message": "Yeah I think when the number of annotations is 0, we don\u0027t show the counter, so the adorner will be null in that case",
      "parentUuid": "64d2b455_ee1dd2b9",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 59
      },
      "revId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a DevTools committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-devtools-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-devtools-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-devtools-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aefad805b6b45f0db9d17b2197ef2717dcaddf50",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}