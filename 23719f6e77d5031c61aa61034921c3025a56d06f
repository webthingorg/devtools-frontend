{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "311d3159_c2263127",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-13T11:40:14Z",
      "side": 1,
      "message": "Could you take a look, please?",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d222bf8_392a5a0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-16T06:28:19Z",
      "side": 1,
      "message": "LGTM, just two questions",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6de2c7a9_6bb96877",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-05-16T07:19:54Z",
      "side": 1,
      "message": "LGTM modulo question about more unit tests.",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "059f9f39_32b0b3be",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-05-16T07:19:54Z",
      "side": 1,
      "message": "How do you feel about adding unit tests for this function? Right now we basically only test a whole lot of logic via E2E tests.",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eecf01e9_24b92f34",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-16T09:44:02Z",
      "side": 1,
      "message": "Good idea, will do...",
      "parentUuid": "059f9f39_32b0b3be",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9f1f8c3_f84a4466",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-18T13:20:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eecf01e9_24b92f34",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c53bf3d_5e0a8fe9",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-16T06:28:19Z",
      "side": 1,
      "message": "Isn\u0027t it possible to have \u0027sibling\u0027 scopes?",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb9ac292_a29965e2",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-16T09:44:02Z",
      "side": 1,
      "message": "Great catch, this should say !disjoint(..., ...)\n\nLet me fix this and think of a way to test this (as Benedikt proposed).",
      "parentUuid": "6c53bf3d_5e0a8fe9",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbcac104_2319992f",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-18T13:20:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb9ac292_a29965e2",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28bc00f5_8b67cbfb",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-16T06:28:19Z",
      "side": 1,
      "message": "Would it make sense here to check whether we\u0027ve actually found a scope using a boolean `foundScope` or something similar? If `scopeIndex \u003d 0` it doesn\u0027t necessarily mean that scopeChain[0] \u003d\u003d\u003d scope, since we might not find one.",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8616391d_33ce2997",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-16T09:44:02Z",
      "side": 1,
      "message": "If we do not find the scope, then `scopeIndex \u003d\u003d\u003d scopeChain.length`, so the next loop will also fall through, and we will correctly return null. No?",
      "parentUuid": "28bc00f5_8b67cbfb",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "221d46be_01944b70",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-16T09:49:45Z",
      "side": 1,
      "message": "That\u0027s correct, misread it, thanks for the clarification!",
      "parentUuid": "8616391d_33ce2997",
      "revId": "23719f6e77d5031c61aa61034921c3025a56d06f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}