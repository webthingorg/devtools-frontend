{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b8ab6ee9_7f4c977b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-31T08:55:14Z",
      "side": 1,
      "message": "LGTM with comments \u0026 nits",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6406db3c_9ff65903",
        "filename": "front_end/panels/elements/StylePropertiesSection.ts",
        "patchSetId": 3
      },
      "lineNbr": 1016,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-31T08:55:14Z",
      "side": 1,
      "message": "Are we sure that this won\u0027t cause any behavior changes? The logic below felt like this triggers `updateTitleIfComputedValueChanged` for all the style property tree elements under this properties tree outline.\n\nSo, even if the edited tree element is not a var definition, this might be needed. WDYT?",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93cc4ff1_1929500d",
        "filename": "front_end/panels/elements/StylePropertiesSection.ts",
        "patchSetId": 3
      },
      "lineNbr": 1016,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-08-02T10:13:22Z",
      "side": 1,
      "message": "This is checking the edited element. So only if the user modified a custom property decl we\u0027d try to recompute the value. Still would be a potential behavior change in some edge cases (what if the edit causes a different container or style query to pop in? a non-variable edit can still affect variable values that way).",
      "parentUuid": "6406db3c_9ff65903",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eb6408f_05ed265d",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 1260,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-31T08:55:14Z",
      "side": 1,
      "message": "(nit): Why are we moving through all the parent nodes in here, is it for subgrid too? I think a comment here might be useful for the future.",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7527107e_e544906f",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 1260,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-08-02T10:13:22Z",
      "side": 1,
      "message": "The template is on the grid container. So if we\u0027re in a grid element we need to find the container first to read the template.",
      "parentUuid": "4eb6408f_05ed265d",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2c351da_f008d0fb",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 1459,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-31T08:58:39Z",
      "side": 1,
      "message": "I\u0027m not sure the effect of this async call from perf / ux perspective but wdyt of not waiting here for assigning the grid names since they are not needed directly when rendering the title?\n\nWe can do something like:\n`this.gridNames().then(gridNames \u003d\u003e this.#gridNames \u003d gridNames)` so that rendering of the title doesn\u0027t wait for them to be resolved.",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df78d7a0_112a04c8",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 1459,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-08-02T10:13:22Z",
      "side": 1,
      "message": "That would be nice, but sadly the consumer side is synchronous, so I can\u0027t await the names there. It could happen that the gridnames are empty when we show the autocomplete.\n\n(and we\u0027d have to prevent races with the upateTitle path)",
      "parentUuid": "e2c351da_f008d0fb",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0d72a63_31b4c634",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 1585,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-31T08:55:14Z",
      "side": 1,
      "message": "I think this is a good idea, though maybe we can rename the function now since it not only updates title if the computed value changed but also discards `gridNames` whenever this function is called. WDYT?",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67f44812_9578930b",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 1585,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-08-09T13:09:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0d72a63_31b4c634",
      "revId": "3e3bbb2c81d464eb283299369eda766b6a66e672",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}