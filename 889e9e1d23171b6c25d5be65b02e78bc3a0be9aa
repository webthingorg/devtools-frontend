{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d4562452_f2c9ef48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-07-14T08:24:13Z",
      "side": 1,
      "message": "PTAL",
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6808169b_1071f39c",
        "filename": "front_end/ui/legacy/components/inline_editor/ColorSwatch.ts",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-14T13:15:20Z",
      "side": 1,
      "message": "I think what we can do here is extend HTMLElementEventMap straight up and then not have to re-implement the addEventListener (else we\u0027ll have to do that all the time).\n\nSo more like it\u0027s done here:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/panels/elements/components/StylePropertyEditor.ts;l\u003d33?q\u003dStylePropertyEditor.ts\u0026ss\u003dchromium\n\nI think you lose a small amount of type-safety as theoretically anyone could add a `formatchanged` event listener to not a color swatch component, but I think that\u0027s OK to avoid the admin of re-typing addEventListener for every single component. WDYT?\n\nBTW, this CL did also inspire me to log a bug and update the docs/etc with how we want to type custom events, so thanks. Tracking that work here: https://crbug.com/1229172",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 0
      },
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "906c5317_f7db4264",
        "filename": "front_end/ui/legacy/components/inline_editor/ColorSwatch.ts",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-07-14T13:22:20Z",
      "side": 1,
      "message": "Thanks for logging a bug!\n\nI think the overhead for making the events specific to the component is not too much, and we wouldn\u0027t be interfering with the existing definition of HTMLElementEventMap, which I\u0027d prefer.\n\nAny chance you are going to re-consider?",
      "parentUuid": "6808169b_1071f39c",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 0
      },
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cd5df51_b1f05f66",
        "filename": "front_end/ui/legacy/components/inline_editor/ColorSwatch.ts",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-14T13:36:37Z",
      "side": 1,
      "message": "Because we already interfere with the HTMLElementTagNameMap, I don\u0027t think that\u0027s a concern, and actually I think there\u0027s benefit to us being consistent and extending the event map globally as we do with the tag name map.",
      "parentUuid": "906c5317_f7db4264",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 0
      },
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "217c423e_afb4779b",
        "filename": "front_end/ui/legacy/components/inline_editor/ColorSwatch.ts",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-07-14T13:53:33Z",
      "side": 1,
      "message": "There is only one HTMLElementTagNameMap (and another one for SVG elements), but there are dozens of EventMap for different elements.\n\nI think we should not extend the HTMLElementEventMap and thereby make it look like the new custom events could be emitted by any HTMLElement.",
      "parentUuid": "1cd5df51_b1f05f66",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 0
      },
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb20ed3b_896617ca",
        "filename": "front_end/ui/legacy/components/inline_editor/ColorSwatch.ts",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-07-14T14:08:39Z",
      "side": 1,
      "message": "I understand the slight loss of type-safety but I think that the consistency and less boilerplate required is a fair trade; however I think we\u0027re at an impasse here and can\u0027t see us agreeing! :)\n\nHow do you feel about landing the simpler approach and then as part of the bug I attached above I\u0027m very happy to commit to exploring if we can take an approach closer to yours, but potentially in such a way that the boilerplate required of re-defining addEventListener goes away? And, if we conclude that that\u0027s not possible, we can revisit and add this back, or not, but by then we\u0027ll have a bit more info on what TS does and doesn\u0027t let us do.",
      "parentUuid": "217c423e_afb4779b",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 0
      },
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "335832d9_33e59b7d",
        "filename": "front_end/ui/legacy/components/inline_editor/ColorSwatch.ts",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-07-14T14:28:23Z",
      "side": 1,
      "message": "Just to make sure the implications are clear, if we extend HTMLElementEventMap then importing ColorSwatch has the side effect of modifying that variable. In the approach with 5 lines more of boilerplate, we only modify the interface the ColorSwatch class provides. Since it\u0027s only possible to add event listeners of the custom events to ColorSwatch, this will automatically encourage the call-sites to maintain more precise types, which is always a good thing. Additionally, importing ColorSwatch doesn\u0027t trigger the side effect.\n\nI\u0027ll leave this CL here until we make a decision.",
      "parentUuid": "fb20ed3b_896617ca",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 0
      },
      "revId": "889e9e1d23171b6c25d5be65b02e78bc3a0be9aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}