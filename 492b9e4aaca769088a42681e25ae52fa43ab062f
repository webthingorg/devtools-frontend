{
  "comments": [
    {
      "key": {
        "uuid": "44e7b857_be1684c2",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1370170
      },
      "writtenOn": "2020-05-26T13:54:27Z",
      "side": 1,
      "message": "I\u0027m nitpicking, but I think I\u0027d add a separate\n\n```\nclass UnimplementedError extends Error {\n  constructor() {\n    super(\u0027Not implemented\u0027);\n  }\n}\n```\n\nabove or elsewhere given how common this is.",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3c83c06_f8e82579",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-05-26T14:07:14Z",
      "side": 1,
      "message": "We use this pattern during the typescriptification. It will be removed after. For consistency with the whole codebase, I will keep it like this.",
      "parentUuid": "44e7b857_be1684c2",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e50abe5c_01f7cfe4",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1370170
      },
      "writtenOn": "2020-05-26T13:54:27Z",
      "side": 1,
      "message": "To clarify - if we don\u0027t do something like `|| 0` here, then comparators below produce `NaN` when comparing e.g. `undefined` and `10`. Is this the desired behaviour?",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbf6c25a_220768ac",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-05-26T14:07:14Z",
      "side": 1,
      "message": "Yes and sadly that is desired behavior at this moment in time. I tried to fix it and then lots of tests started failing.",
      "parentUuid": "e50abe5c_01f7cfe4",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d800889_3f690e78",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1370170
      },
      "writtenOn": "2020-05-26T14:14:00Z",
      "side": 1,
      "message": "I see. How about explicit conversion via `sourceLineNumber ?? NaN` (or older-ES equivalent) then? Then values would at least be indeed numbers, comparison results would be preserved and we wouldn\u0027t need to lie about types.",
      "parentUuid": "bbf6c25a_220768ac",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7312feaa_310d8c4c",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-05-26T14:17:36Z",
      "side": 1,
      "message": "I attempted that and it still fails the tests. I think we should do this as a follow-up investigation, as it is not strictly related to the TS work.",
      "parentUuid": "7d800889_3f690e78",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c306a0cf_0eb51402",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1370170
      },
      "writtenOn": "2020-05-26T13:54:27Z",
      "side": 1,
      "message": "`Runtime.Runtime` - is this intentional?",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bd498ab_2d416018",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-05-26T14:07:14Z",
      "side": 1,
      "message": "Yes. The first `Runtime` is the filename. The second `Runtime` is the class reference.",
      "parentUuid": "c306a0cf_0eb51402",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d991e2a5_0c6f77c6",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1370170
      },
      "writtenOn": "2020-05-26T14:14:00Z",
      "side": 1,
      "message": "That\u0027s somewhat confusing TBH. Do we plan to make `Runtime` importable as a separate module in future?",
      "parentUuid": "1bd498ab_2d416018",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "417918ef_21932f96",
        "filename": "front_end/sdk/SourceMap.js",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-05-26T14:17:36Z",
      "side": 1,
      "message": "No we don\u0027t plan to do so, given that this is the import style for ES modules in DevTools. Yes it is duplicate, but it is what the tools understand and it is consistent throughout the codebase.",
      "parentUuid": "d991e2a5_0c6f77c6",
      "revId": "492b9e4aaca769088a42681e25ae52fa43ab062f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}