{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9544b677_1d31f34d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-12-14T07:59:05Z",
      "side": 1,
      "message": "Thanks! Initial comments :)",
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a3dc25d_b90e5fff",
        "filename": "front_end/issues/MarkdownImage.ts",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-12-14T07:59:05Z",
      "side": 1,
      "message": "Please do not use legacy widgets in modern web component code. AFAICT its only for UIIcon, for which we already have a replacement component with \"ui/components/Icon.ts\".",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 34
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79d03bce_5ad2970e",
        "filename": "front_end/issues/MarkdownImage.ts",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-12-14T07:59:05Z",
      "side": 1,
      "message": "Please replace the usage of this with \u003cdevtools-icon\u003e",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 45,
        "endChar": 39
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fea234c8_f5570428",
        "filename": "front_end/issues/MarkdownImage.ts",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-12-14T09:52:36Z",
      "side": 1,
      "message": "we shouldn\u0027t be interpolating styles in like this; instead could we use StyleMap (https://lit-html.polymer-project.org/guide/styling-templates#stylemap) which will do it more efficiently?",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 53,
        "endChar": 13
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34ac224d_ac039e27",
        "filename": "front_end/issues/MarkdownImagesMap.ts",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-12-14T07:59:05Z",
      "side": 1,
      "message": "Having styles directly tied to the images in this global manner feels wrong. For links, this was fine, since its just a string-to-string mapping. For images/icons I feel we should pass the  \"markdownImages\" map locally to any new \"MarkdownView\", which then forwards the data to \"MarkdownImage\". This would require a refactoring of \"MarkdownView\" though and will make call-sites more complicated, as the \"markdownImages\" Map is dependent on what Markdown file is loaded.\n\nJack, wdyt?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c446a8f_32700b37",
        "filename": "front_end/issues/MarkdownImagesMap.ts",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-12-14T09:52:36Z",
      "side": 1,
      "message": "I agree, this doesn\u0027t sit right with me. I feel like we should define in code a few variants for how we might want these images to appear as classes, and then let the caller define the class they want to apply to the image.\n\nOr we allow a very small subset of styles through that we\u0027ve decided are legitimate styles users could pass in. \n\nDo you think we\u0027ll want to display images in Markdown so differently that we have to have this blanket allow-all inline styles? Or could we at least start stricter and open it up if we hit issues?",
      "parentUuid": "34ac224d_ac039e27",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042e489b_68de7108",
        "filename": "front_end/issues/MarkdownImagesMap.ts",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-12-14T09:52:36Z",
      "side": 1,
      "message": "I don\u0027t fully follow this; how is someone supposed to populate this ?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d92be88c_82e52158",
        "filename": "front_end/issues/MarkdownImagesMap.ts",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-12-14T10:02:55Z",
      "side": 1,
      "message": "For links, we have a global Map that maps Id -\u003e actual URL. For images we wanted to do something similar, to prevent loading arbitrary images from the web. This means we need a mapping of \"Image Id\" to \"ImageData\" struct.\n\nThis CL proposes a global structure, that serves as the backing for all MarkdownImage instances. There are a few ways we could do this:\n\n1) The global structure as proposed here. This would allow easier re-usability of the same image in multiple Markdown files. It also makes the code simpler (globals tend to do that xD)\n\n2) The Map is created locally when a new \"MarkdownView\" is created and populated with the entries for a specific Markdown file locally. We still need to hardcode the struct somewhere, probably where the View is instantiated. This approach would require some refactoring of MarkdownView, as the required Map needs to be passed down into the sub-component.\n\n3, addendum to 2) Alternatively the info could live along side a same-named JSON file. This feels very bloated though, for such a simple problem.\n\nIf the styles are removed from the Map data and it stays a simple \"Id to Image URL\", I\u0027m fine with a global mapping, otherwise I would prefer solution 2).",
      "parentUuid": "042e489b_68de7108",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "de788e06bc59129bce77999a0bc42860fbb36e1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}