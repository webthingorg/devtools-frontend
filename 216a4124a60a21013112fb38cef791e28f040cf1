{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bf92ff8e_6aebd0d5",
        "filename": "front_end/core/sdk/SourceMapScopes.ts",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-05-22T10:48:06Z",
      "side": 1,
      "message": "Leaving this up to you, but I\u0027d say we should retain the original scope array on decoding instead of flattening it (which shouldn\u0027t be more than a single Array.from). Less for performance, rather to save us some complexity and maintenance cost.",
      "revId": "216a4124a60a21013112fb38cef791e28f040cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db2fe78_2eabd765",
        "filename": "front_end/core/sdk/SourceMapScopes.ts",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-05-23T05:30:15Z",
      "side": 1,
      "message": "Just to clarify, we need some way to resolve final original scopes. Not the raw items (which are an array). Since we construct the original scope tree in place, we would also have to construct the flattened original scopes as we decode.\n\nWe could change `decodeOriginalScope` to return an array. The first element is the root, if you are interested in the tree form. And the rest of the array is the falttened tree structure in pre-order. Or we hand out the root and the flattened structure separately. Wdyt?",
      "parentUuid": "bf92ff8e_6aebd0d5",
      "revId": "216a4124a60a21013112fb38cef791e28f040cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b68eca3_2ae240fb",
        "filename": "front_end/core/sdk/SourceMapScopes.ts",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-05-23T08:03:19Z",
      "side": 1,
      "message": "I prototyped this here: https://crrev.com/c/5562563.",
      "parentUuid": "1db2fe78_2eabd765",
      "revId": "216a4124a60a21013112fb38cef791e28f040cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bfa4637_8b396a40",
        "filename": "front_end/core/sdk/SourceMapScopes.ts",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-05-23T09:04:14Z",
      "side": 1,
      "message": "I think I missed the part where the raw items aren\u0027t good enough, but still, I think the prototype looks a bit simpler than re-flattening the tree. Using a map might be even simpler, also from an API perspective (returning the nulls as end markers just for indexing purposes is a little awkward). Realistically, lets not block on this though :)",
      "parentUuid": "7b68eca3_2ae240fb",
      "revId": "216a4124a60a21013112fb38cef791e28f040cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed0318e6_e4edd4d6",
        "filename": "front_end/core/sdk/SourceMapScopes.ts",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-05-23T09:08:49Z",
      "side": 1,
      "message": "I was inbetween a map and an array. In the end you use a number as a key and get a scope or `undefined` back ðŸ˜„ But a map might be clearer semantics wise.\n\nI\u0027ll change the prototype and extend the unit tests to also check the map, and then rebase this test on top.",
      "parentUuid": "8bfa4637_8b396a40",
      "revId": "216a4124a60a21013112fb38cef791e28f040cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "992d8678_46d59e8a",
        "filename": "front_end/core/sdk/SourceMapScopes.ts",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-05-22T10:48:06Z",
      "side": 1,
      "message": "How about an enum for the 0x1?",
      "revId": "216a4124a60a21013112fb38cef791e28f040cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}