{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b12bf465_ecdfa0d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2021-04-22T19:27:17Z",
      "side": 1,
      "message": "This CL is to apply the user agent client hint data populated in the previous CL: https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2830581. Please take a look. Thanks.",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa16898f_216b37c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1359024
      },
      "writtenOn": "2021-04-23T04:27:35Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec5d0412_581e8d68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-04-23T06:37:10Z",
      "side": 1,
      "message": "LGTM % some suggestions",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a54287f_b12f050f",
        "filename": "front_end/core/sdk/NetworkManager.ts",
        "patchSetId": 12
      },
      "lineNbr": 988,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-04-23T06:37:10Z",
      "side": 1,
      "message": "While we’re here, let’s avoid the indirection through new RegExp:\n\n    const chromeRegex \u003d /(?:^|\\W)(Chrome|HeadlessChrome)\\/(\\S+)/",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57cf7015_2ec650fa",
        "filename": "front_end/core/sdk/NetworkManager.ts",
        "patchSetId": 12
      },
      "lineNbr": 988,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2021-04-23T17:07:44Z",
      "side": 1,
      "message": "Updated in patchset 13. Thanks.",
      "parentUuid": "5a54287f_b12f050f",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c246cf24_3086c5f6",
        "filename": "front_end/core/sdk/NetworkManager.ts",
        "patchSetId": 12
      },
      "lineNbr": 991,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-04-23T06:37:10Z",
      "side": 1,
      "message": "Sounds like you want the (Chrome|HeadlessChrome) part to be a non-capturing group? In that case, let’s fix it in the pattern instead:\n\n    const chromeRegex \u003d /(?:^|\\W)(?:Chrome|HeadlessChrome)\\/(\\S+)/\n\nThen this line can remain unchanged.",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "162710aa_e29a74b1",
        "filename": "front_end/core/sdk/NetworkManager.ts",
        "patchSetId": 12
      },
      "lineNbr": 991,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2021-04-23T17:07:44Z",
      "side": 1,
      "message": "Updated in patchset 13. Thanks.",
      "parentUuid": "c246cf24_3086c5f6",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eba01e0a_96c63578",
        "filename": "test/e2e/network/network-conditions_test.ts",
        "patchSetId": 12
      },
      "lineNbr": 115,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-04-23T06:37:10Z",
      "side": 1,
      "message": "To make this more readable + lintable + formattable, let’s define it as an actual async function, and then do:\n\n    const getUserAgentMetaData \u003d fn.toString();",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a276ed04_32765577",
        "filename": "test/e2e/network/network-conditions_test.ts",
        "patchSetId": 12
      },
      "lineNbr": 115,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2021-04-23T17:07:44Z",
      "side": 1,
      "message": "Thanks for the suggestions. We will get some build errors if we convert the string to a function, because navigator.userAgentData is unavailable in the test function. I also tried to use \u0027\\\u0027 as line continuation to make the string more readable, it built and passed in local test but failed in presubmit.",
      "parentUuid": "eba01e0a_96c63578",
      "revId": "53edfc9ea304e4cdaf41964cca51ca21bac2782b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}