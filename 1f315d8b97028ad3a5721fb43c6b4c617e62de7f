{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f54cbb3d_6b990090",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-05-31T16:14:04Z",
      "side": 1,
      "message": "PTAL",
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b760781c_905b56e3",
        "filename": "front_end/panels/timeline/Overlays.ts",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-06-03T09:24:09Z",
      "side": 1,
      "message": "I wonder if at the point we expect to call this function we would have the index of the event, like we do when calling the data provider for event colors, titles, etc. If so, that could spare us from using `indexForEvent` each time we call it.",
      "range": {
        "startLine": 179,
        "startChar": 53,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75089e29_fd81c7a8",
        "filename": "front_end/panels/timeline/Overlays.ts",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-03T10:03:37Z",
      "side": 1,
      "message": "To check my understanding: are you suggesting that in the overlays, we could eagerly look up an event\u0027s index and then cache it to avoid repeated `indexForEvent` calls?\n\nI like that idea, and will let this CL land, but do that in a follow-up, if that\u0027s what you mean. Thanks!",
      "parentUuid": "b760781c_905b56e3",
      "range": {
        "startLine": 179,
        "startChar": 53,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf87e9bb_552e0556",
        "filename": "front_end/panels/timeline/Overlays.ts",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-06-03T11:13:15Z",
      "side": 1,
      "message": "I was suggesting we pass the entry index if it\u0027s already available by the time we call this (w/o having to resolve it at all). For example, when calling TimelineFlameChartDataProvider::entryColor we pass the entry index, since that\u0027s what we get from the FlameChart. If this index is available beforehand I think we are better off having it as param instead of the event, but I don\u0027t know if it will be available.",
      "parentUuid": "75089e29_fd81c7a8",
      "range": {
        "startLine": 179,
        "startChar": 53,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7aba1a7_917d2eae",
        "filename": "front_end/panels/timeline/Overlays.ts",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-03T12:47:33Z",
      "side": 1,
      "message": "Ah OK understood. I will explore in a follow-up. Thanks!",
      "parentUuid": "bf87e9bb_552e0556",
      "range": {
        "startLine": 179,
        "startChar": 53,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff78805_17362176",
        "filename": "front_end/panels/timeline/TimelineFlameChartView.ts",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-05-31T16:14:04Z",
      "side": 1,
      "message": "this is currently a no-op as we don\u0027t render or do anything with this element. That will come in the follow-up CL.",
      "range": {
        "startLine": 135,
        "startChar": 1,
        "endLine": 144,
        "endChar": 0
      },
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "061f7c87_70055aad",
        "filename": "front_end/panels/timeline/TimelineFlameChartView.ts",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-03T10:03:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4ff78805_17362176",
      "range": {
        "startLine": 135,
        "startChar": 1,
        "endLine": 144,
        "endChar": 0
      },
      "revId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1f315d8b97028ad3a5721fb43c6b4c617e62de7f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}