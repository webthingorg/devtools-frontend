{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "676dd3b7_941eef64",
        "filename": "front_end/models/trace/handlers/ExtensionTraceDataHandler.ts",
        "patchSetId": 23
      },
      "lineNbr": 62,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "i feel like this new helper method isn\u0027t really creating much value since we just spread it back out and continue building the event as an object literal. :)\n\ni don\u0027t care much though.",
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0937e917_62a6912c",
        "filename": "front_end/models/trace/handlers/ExtensionTraceDataHandler.ts",
        "patchSetId": 23
      },
      "lineNbr": 83,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "I guess an alternative is go with whatever is truthy\n\n    const timingDetail \u003d timing.args.data?.beginEvent?.args?.detail ?? timing.args.data?.detail;",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 83,
        "endChar": 118
      },
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d82e7f0_900f60ff",
        "filename": "front_end/models/trace/types/Extensions.ts",
        "patchSetId": 23
      },
      "lineNbr": 92,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "how about `devtools.extension` ? (it doesn\u0027t practically matter, i\u0027m just trying to avoid perpetuating the `timeline` term :)",
      "range": {
        "startLine": 92,
        "startChar": 8,
        "endLine": 92,
        "endChar": 26
      },
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb936091_7d3e971c",
        "filename": "front_end/models/trace/types/TraceEvents.ts",
        "patchSetId": 23
      },
      "lineNbr": 1183,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "good catch!",
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12d528e8_3e279486",
        "filename": "front_end/models/trace/types/TraceEvents.ts",
        "patchSetId": 23
      },
      "lineNbr": 1760,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "hm! did you find that in practice?  based on how the TRACE_EVENT is implemented i wouldn\u0027t expect this for legit ones..",
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30dadf77_92ca371a",
        "filename": "front_end/panels/timeline/ExtensionDataGatherer.ts",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "instance",
      "range": {
        "startLine": 20,
        "startChar": 9,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c46889de_bdf3c16a",
        "filename": "front_end/panels/timeline/TimelineFlameChartView.ts",
        "patchSetId": 23
      },
      "lineNbr": 263,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-03T14:47:43Z",
      "side": 1,
      "message": "if it doesn\u0027t matter to you, i\u0027d move this down a few lines.. maybe right before the reset()",
      "revId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5fd930699eec1816b0b3ce8e588a41187e3ab08c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}