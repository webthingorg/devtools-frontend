{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "84ff562f_40015bd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-01-18T09:01:35Z",
      "side": 1,
      "message": "PTAL",
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e5c9862_01f8bf89",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-18T09:20:48Z",
      "side": 1,
      "message": "how would we use it? if there are multiple fixed containing blocks in the chain? do you plan to apply bounding boxes from each of them?",
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab8c2f10_54bdc0b8",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-01-18T09:51:56Z",
      "side": 1,
      "message": "You can obtain a containing block\u0027s absolute position (relative to the viewport) using `getBoundingClientRect()`. This way, when in need to position an element relative to the viewport you may substract its containing block total offset from the desired absolute position. This means that there\u0027s no need to account for the offset of other fixed positioning containing blocks in the ancestor chain, for this purpose.",
      "parentUuid": "3e5c9862_01f8bf89",
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f56af2a_cf6140e8",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-18T09:55:25Z",
      "side": 1,
      "message": "What if the parent has another parent with a different containing block?",
      "parentUuid": "ab8c2f10_54bdc0b8",
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82f9b1ab_3e1f2d6a",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-01-18T11:16:45Z",
      "side": 1,
      "message": "`getBoundingClientRect()` still returns an element\u0027s offset relative to the viewport, (not to the next containing block in the ancestor chain). This means only the first containing block in the ancestor chain is needed to position a `fixed` element relative to the viewport (since its container\u0027s total offset is can be obtained with gbcr)",
      "parentUuid": "9f56af2a_cf6140e8",
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c17fe8b8_3c6681cb",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-18T11:25:08Z",
      "side": 1,
      "message": "Got it!",
      "parentUuid": "82f9b1ab_3e1f2d6a",
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e94a3a65_ca0cf087",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-18T09:19:38Z",
      "side": 1,
      "message": "I think it depends on the values of these properties if the establish a containing block or not. `e.g., contain: size` does not as far as I can tell but `contain: size layout` does.",
      "range": {
        "startLine": 140,
        "startChar": 54,
        "endLine": 140,
        "endChar": 61
      },
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87da47a7_4ce4be9d",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-01-18T09:51:56Z",
      "side": 1,
      "message": "according to https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block if `contain` is set to `paint` a new containing block is created. I\u0027ve updated the code to this.",
      "parentUuid": "e94a3a65_ca0cf087",
      "range": {
        "startLine": 140,
        "startChar": 54,
        "endLine": 140,
        "endChar": 61
      },
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c03b5216_d2dbc572",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-18T09:55:25Z",
      "side": 1,
      "message": "I am not sure we can rely on MDN here. I chatted with Anders and `contain:size layout style;` would also contain the context. `container: name / inline-size` would not and `container: name /size` would, I think.",
      "parentUuid": "87da47a7_4ce4be9d",
      "range": {
        "startLine": 140,
        "startChar": 54,
        "endLine": 140,
        "endChar": 61
      },
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58dec51d_7683eb00",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-01-18T11:16:45Z",
      "side": 1,
      "message": "ah good point. I haven\u0027t been able to find a exhaustive list for the contain and container porperties. But apparently per [1], setting `contain` as \u0027layout\u0027, \u0027paint\u0027, \u0027strict\u0027 or \u0027content\u0027 establishes a containing block. For `container-type` we know at least `size` would also introduce a containing block. I updated the code to update to reflect this and added a comment warning about the helper not using a exhaustive list of CSS properties.\n\n[1] https://developer.mozilla.org/en-US/docs/Web/CSS/contain",
      "parentUuid": "c03b5216_d2dbc572",
      "range": {
        "startLine": 140,
        "startChar": 54,
        "endLine": 140,
        "endChar": 61
      },
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e35ffad_0bc47830",
        "filename": "front_end/core/platform/dom-utilities.ts",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-18T11:25:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "58dec51d_7683eb00",
      "range": {
        "startLine": 140,
        "startChar": 54,
        "endLine": 140,
        "endChar": 61
      },
      "revId": "4fff1073b2c18bb8816de76a52d082c17d78a494",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}