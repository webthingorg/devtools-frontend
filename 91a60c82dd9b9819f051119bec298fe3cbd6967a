{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9eb792d1_330fbf3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "Overall I\u0027d say this is on the way, but some changes noted below. Thanks!",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c96800e2_2b5a66f0",
        "filename": "front_end/models/trace/types/TraceEvents.ts",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "I don\u0027t believe this is the correct way to add these properties. You should create a new specific type and a type guard function. See, e.g., `TraceEventLayout` and `isTraceEventLayout` starting at line 1602 pre-modification in this file. This will allow you to test something like:\n\n```\nif (isTraceEventScriptRundown(event)) {\n  // do something with the script rundown data\n}\n```",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7de885a_c0693c59",
        "filename": "front_end/panels/timeline/EnhancedTraces.ts",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "It would be preferable to strengthen the properties that are not optional here. If you want a type that can represent all of the properties but you\u0027re not sure if they are present, use `Partial\u003cScript\u003e`.\n\nSame for the rest of the types.",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c81ae17_81211f73",
        "filename": "front_end/panels/timeline/EnhancedTraces.ts",
        "patchSetId": 7
      },
      "lineNbr": 225,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "Nit: `metadata` is a single word, you should not camelCase `data` here.",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "018feadf_e1584734",
        "filename": "front_end/panels/timeline/TimelineLoader.ts",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "Consider replacing `#traceIsCPUProfile` and `#isEnhancedTraces` with a single mode type:\n\n```\ntype LoadedTimelineKind \u003d \u0027basic\u0027|\u0027cpuProfile\u0027|\u0027enhanced\u0027;\n\n// \n  #kind: LoadedTimelineKind \u003d \u0027basic\u0027;\n```\n\nAs written presently, it would be valid to have these two fields both be true, but semantically it is not.",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92aabae2_3ed4f906",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 7
      },
      "lineNbr": 250,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "(thoughtful face)\n\nMaybe \"compatible\" performance trace or something? Perhaps explicitly calling it backwardly-compatible with other tools is unnecessary, though, as the file format HAS been changing lately anyway.\n\nI don\u0027t want to be too prescriptive here. It\u0027s very straightforward to get the old data out of the new format, too.",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51ca017e_c76f03e7",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 7
      },
      "lineNbr": 774,
      "author": {
        "id": 1329477
      },
      "writtenOn": "2024-06-03T19:54:07Z",
      "side": 1,
      "message": "It feels like it would be preferable to be able to do something like....\n\n```\nconst jsonGenerator \u003d enhancedTraces ? (new EnhancedTracesEngine(traceEvents)).generator() : traceJsonGenerator;\nconst formattedTraceIter \u003d traceJsonGenerator(traceEvents, metadata);\ntraceAsString \u003d Array.from(formattedTraceIter).join(\u0027\u0027);\n```\n\nThen we don\u0027t need to have a block specific to this configuration.",
      "revId": "91a60c82dd9b9819f051119bec298fe3cbd6967a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}