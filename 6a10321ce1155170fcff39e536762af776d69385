{
  "comments": [
    {
      "key": {
        "uuid": "eb2561de_bc092ce8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-30T15:25:41Z",
      "side": 1,
      "message": "PTAL a proposal to refactor the overlay codebase in a way similar to this CL. WDYT? it would help us with using TypeScript here later, should reduce the number of lines and prevent bugs related to the use of global variables.",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c468c5d1_c178edf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-30T15:41:13Z",
      "side": 1,
      "message": "Not ready to be merged.",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4425f70a_38a5be5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-08-03T08:38:28Z",
      "side": 1,
      "message": "Nice cleanup!\n\nLGTM",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c43643d_88e5d443",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-03T08:48:12Z",
      "side": 1,
      "message": "I like where this is going. I personally struggled with understanding how things worked when I started working on overlays, and part of it was because of the use of globals.\nI like that debug files would now use what the backend uses too.\nCan you explain the reasoning behind wanting to use innerHTML to produce the markup as opposed to using DOM methods?",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43839e0d_f06699da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-03T08:50:24Z",
      "side": 1,
      "message": "Mainly innerHTML helps to reduce the number of lines needed to create the static markup. And I think it\u0027s more readable than using DOM APIs.",
      "parentUuid": "4c43643d_88e5d443",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30f26855_97edf270",
        "filename": "front_end/inspector_overlay/tool_distances_impl.js",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-08-03T08:38:28Z",
      "side": 1,
      "message": "`\u003ccanvas /\u003e` isn\u0027t actually correct in HTML. This needs a separate `\u003c/canvas\u003e` closing tag.",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d815103_486eecf4",
        "filename": "front_end/inspector_overlay/tool_distances_impl.js",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-08-03T09:14:02Z",
      "side": 1,
      "message": "In this case, I don\u0027t understand the benefit of using innerHTML. It feels wasteful to insert the canvas element and then query the DOM for it immediately after.\n\nHow about something like:\n\n    const canvas \u003d document.createElement(\u0027canvas\u0027);\n    canvas.id \u003d \u0027canvas\u0027;\n    canvas.classList.add(\u0027canvas\u0027);\n    this.document.body.append(canvas);\n    this.setCanvas(canvas);",
      "revId": "6a10321ce1155170fcff39e536762af776d69385",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}