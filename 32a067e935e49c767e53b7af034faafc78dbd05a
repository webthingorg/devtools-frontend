{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aff7f68b_1e6efa89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-03-16T13:11:02Z",
      "side": 1,
      "message": "Hi Jack, hi Benedikt,\n\nthis CL adds pointers to the LMI that can be selected in the interpreter settings and\nviewed in the value display. For 32-bit pointers, it also contains a go-to-link. \n\nPTAL!",
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57a94a81_0e863cd4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-03-16T13:40:54Z",
      "side": 1,
      "message": "LGTM modulo comment (with no suggestion) ðŸ˜Š",
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ce7dbed_d7a0cdc9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-03-16T13:49:01Z",
      "side": 1,
      "message": "Thanks for the review Benedikt!",
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4ccf5df_6af1e637",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-03-16T13:52:15Z",
      "side": 1,
      "message": "LGTM with a couple of (non blocking) questions!",
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a601ab8_1fefd7ad",
        "filename": "front_end/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 8
      },
      "lineNbr": 210,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-03-16T13:52:15Z",
      "side": 1,
      "message": "why the need to do this here? Only ask as most of the time we don\u0027t, so it might be worth a quick comment in the code explaining why? Or feel free to disagree if I\u0027m missing something obvious :D",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 21
      },
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38841662_2654aa83",
        "filename": "front_end/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 8
      },
      "lineNbr": 210,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-03-16T14:06:14Z",
      "side": 1,
      "message": "The event is sent from the ValueInterpreterDisplay, which is a child of ValueInterpreter, which again is a child of the LinearMemoryInspector. I set the event to bubble up (\u003d\u003e `composed: true`), so that the LinearMemoryInspector could listen to it. I used stopPropagation here so that the bubbling would stop here.\n\nWhat do you think? Should I rather not do that here? If we keep it, I\u0027ll add a comment for sure! Otherwise I\u0027ll remove it. Thanks for pointing it out :)!",
      "parentUuid": "1a601ab8_1fefd7ad",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 21
      },
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54e95607_2a50be53",
        "filename": "front_end/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 8
      },
      "lineNbr": 210,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-03-17T08:18:19Z",
      "side": 1,
      "message": "Makes sense - maybe a comment just explaining that nothing further \"up\" needs the event - but to be honest that\u0027s probably something I could have inferred from the code - so feel free to leave as is. Thanks!",
      "parentUuid": "38841662_2654aa83",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 21
      },
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "713a6874_bf9bbf09",
        "filename": "front_end/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 8
      },
      "lineNbr": 210,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-03-17T10:44:45Z",
      "side": 1,
      "message": "Ok! I\u0027ve added comments now, just in case :-)!",
      "parentUuid": "54e95607_2a50be53",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 21
      },
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78119cc8_248f6f02",
        "filename": "front_end/linear_memory_inspector/ValueInterpreterSettings.ts",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-03-16T13:40:54Z",
      "side": 1,
      "message": "Not sure about the \u0027Other\u0027 here. Technically the pointers are just integers.",
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe18536f_edd88c8f",
        "filename": "front_end/linear_memory_inspector/ValueInterpreterSettings.ts",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-03-16T13:49:01Z",
      "side": 1,
      "message": "YouÅ•e right; I don\u0027t have a strong opinion on this. I would be fine either way, the original UX proposal suggested \"Other\" here, but I could very well see it under Integer too.",
      "parentUuid": "78119cc8_248f6f02",
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d19a722_b5c9f0f3",
        "filename": "test/unittests/front_end/linear_memory_inspector/ValueInterpreterDisplay_test.ts",
        "patchSetId": 8
      },
      "lineNbr": 291,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-03-16T13:52:15Z",
      "side": 1,
      "message": "nit: we normally use the dispatchClickEvent helper here, although the behaviour is the same really. Maybe worth using for consistency?",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 19
      },
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e927aea2_67c71677",
        "filename": "test/unittests/front_end/linear_memory_inspector/ValueInterpreterDisplay_test.ts",
        "patchSetId": 8
      },
      "lineNbr": 291,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-03-16T14:06:14Z",
      "side": 1,
      "message": "Done, thanks for letting me know, didn\u0027t know about that! :D",
      "parentUuid": "7d19a722_b5c9f0f3",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 19
      },
      "revId": "32a067e935e49c767e53b7af034faafc78dbd05a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}