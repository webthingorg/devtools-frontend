{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "668c8984_c731020d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-20T11:52:32Z",
      "side": 1,
      "message": "PTAL. Do you agree with the overall aproach?\n\nI have a backend CL which fixes the failing tests.\nI don\u0027t want to merge this right away, but wait until after the branch cut.",
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a247467_c907c581",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-02-20T13:12:02Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7659a66_d9023ac3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-02-21T17:02:11Z",
      "side": 1,
      "message": "How does \"preserve log\" work with this approach?",
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76ed37da_176b48b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-22T13:31:24Z",
      "side": 1,
      "message": "Currently, DevTools displays all console messages - no matter which target they originate from. In this case sorting console messages into different buckets by target should not make a difference since DevTools logs all messages anyway. Blink tests \u0027console-preserve-log.js\u0027 and \u0027console-preserver-log-x-process-navigation.js\u0027 not breaking is another indication of the change not breaking things.\n\nIn the next steps, we want to filter console messages, so that only the ones belonging to the current main frame tree are rendered, while those originating from e.g. prerendering frames in the background are not. `ConsoleView` has a member `consoleMessages[]` which is populated in `addConsoleMessage`[1]. If \"preserve log\" is turned on, `consoleMessages[]` is not cleared and just keeps growing.\n\nThis means that in this scenario:\n\n- for regular navigations with preserve log turned on: As long as the timing of switching the main frame tree is correct, DevTools should still render all console messages correctly.\n\n- for bfcached navigations with preserve log: after [2], no console messages should be generated during bfcached navigations. Console messages should only be generated by targets in the current main frame tree and should therefore show up in the console and not be caught by the filtering.\n\n- for prerender activations with preserve log: console messages generated by prerender targets in the background will not be rendered immediately. But upon activation, DevTools should ensure that all stored messages belonging to a target being activated are rendered to the console.\nCurrently the console 1) shows messages sorted by timestamp and 2) only/mostly appends messages at the end. With prerender activations we cannot keep both 1) and 2). I propose to keep 1) and let console messages generated during prerendering violate 2).\n\nWDYT?\n\n[1] https://crsrc.org/c/third_party/devtools-frontend/src/front_end/panels/console/ConsoleView.ts;l\u003d803\n[2] https://crrev.com/c/4264252",
      "parentUuid": "b7659a66_d9023ac3",
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f62d7b8_7caebf5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-22T13:56:44Z",
      "side": 1,
      "message": "addition to the bfcache case: the duplicate removal introduced in [1], would need to be moved from the model to the view\n\n[1] https://crrev.com/c/4264252",
      "parentUuid": "76ed37da_176b48b5",
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af5cdce2_547ed37e",
        "filename": "front_end/core/sdk/ConsoleModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-02-20T12:40:53Z",
      "side": 1,
      "message": "Does the order matter here?",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 62
      },
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58be16d4_83c0bbd6",
        "filename": "front_end/core/sdk/ConsoleModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-20T13:09:15Z",
      "side": 1,
      "message": "I don\u0027t think the order is relevant here: there are only 2 callsites:\n- ConsoleView: sorts messages by timestamp\n- PresentationConsoleMessageHelper: order not relevant either",
      "parentUuid": "af5cdce2_547ed37e",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 62
      },
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f7c8770_403c9a53",
        "filename": "front_end/core/sdk/ConsoleModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-02-20T13:12:02Z",
      "side": 1,
      "message": "Ok, in that case let\u0027s either add a comment, or even call this `unorderedMessages` (potentially returning Set instead of an array, however given that Set has a defined iteration order in JS I\u0027m not sure that would be helpful).",
      "parentUuid": "58be16d4_83c0bbd6",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 62
      },
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04860e5e_c4435377",
        "filename": "front_end/core/sdk/ConsoleModel.ts",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-22T13:31:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f7c8770_403c9a53",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 62
      },
      "revId": "6b3d019152d7839ac13afa0752377337520988f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}