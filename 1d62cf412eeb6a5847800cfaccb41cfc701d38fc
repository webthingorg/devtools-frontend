{
  "comments": [
    {
      "key": {
        "uuid": "03c3c615_a5306f6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-20T21:19:05Z",
      "side": 1,
      "message": "PTAL :) ",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc1ae4c5_a0f3039e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-20T21:20:05Z",
      "side": 1,
      "message": "PTAL :) ",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20395f5c_4f503725",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1368273
      },
      "writtenOn": "2020-07-21T05:46:48Z",
      "side": 1,
      "message": "LGTM % nits",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b380b689_1dd824eb",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1120815
      },
      "writtenOn": "2020-07-20T21:55:54Z",
      "side": 1,
      "message": "Do you need to add and remove this class? Can you instead move the `width` attribute from `authenticator-name-field-edit` to `authenticator-name-field` and then only toggle `authenticator-name-field-edit`?",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 222,
        "endChar": 59
      },
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35311418_b102dc7a",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-22T20:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b380b689_1dd824eb",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 222,
        "endChar": 59
      },
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18f5e317_6738a80f",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1120815
      },
      "writtenOn": "2020-07-20T21:55:54Z",
      "side": 1,
      "message": "Optional: consider moving all the logic of visibility \u0026 style changes to a common parent element (the toolbar), and then toggling a single class on it (say `editing-name`).\n\nBasically something like this for the css:\n\n  .edit-name-toolbar .name-field {\n    border: none;\n  }\n  .edit-name-toolbar .save-name-button {\n    visibility: hidden;\n  }\n\n  .edit-name-toolbar.editing-name .name-field {\n    border: something-else;\n    /* style specific to editing the name */\n  }\n  .edit-name-toolbar.editing-name .save-name-button {\n    visibility: visible;\n  }\n\nThen you should be able to\n  toolbar.classList.{add|remove}(\u0027editing-name\u0027);",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2958fede_80b8cd9c",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1368273
      },
      "writtenOn": "2020-07-21T05:46:48Z",
      "side": 1,
      "message": "+1 on this",
      "parentUuid": "18f5e317_6738a80f",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eea3001a_aae0f384",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-22T20:02:22Z",
      "side": 1,
      "message": "Love this - thank you. I added the style changes on the name field as outlined, but the visibility changes on the buttons seem to be overrode by the toolbar CSS. Creating a toolbar button creates a handful of nested elements which seems easiest to manage using the provided setVisible method.",
      "parentUuid": "2958fede_80b8cd9c",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de5076f7_469f1550",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1120815
      },
      "writtenOn": "2020-07-23T15:04:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eea3001a_aae0f384",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a74e0e9d_60f41780",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1120815
      },
      "writtenOn": "2020-07-20T21:55:54Z",
      "side": 1,
      "message": "I think you can just\n\n  nameField.setAttribute(\u0027readonly\u0027);",
      "range": {
        "startLine": 245,
        "startChar": 3,
        "endLine": 245,
        "endChar": 47
      },
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96680b1a_d1835025",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-22T20:02:22Z",
      "side": 1,
      "message": "Changed to nameField.setAttribute(\u0027readonly\u0027, \u0027\u0027) as setAttribute method requires 2 arguments.",
      "parentUuid": "a74e0e9d_60f41780",
      "range": {
        "startLine": 245,
        "startChar": 3,
        "endLine": 245,
        "endChar": 47
      },
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea70889a_8f2ec04c",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1120815
      },
      "writtenOn": "2020-07-20T21:55:54Z",
      "side": 1,
      "message": "This is used above as well, extract into a function (or a constant string \u0026 the l10n function instead of the template)",
      "range": {
        "startLine": 251,
        "startChar": 37,
        "endLine": 251,
        "endChar": 91
      },
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f339c9b_d3029805",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-22T20:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea70889a_8f2ec04c",
      "range": {
        "startLine": 251,
        "startChar": 37,
        "endLine": 251,
        "endChar": 91
      },
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1957fe9_dd824913",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1120815
      },
      "writtenOn": "2020-07-20T21:55:54Z",
      "side": 1,
      "message": "I don\u0027t think this works, the lambdas here and on L230 will evaluate to two different functions. You need to grab a reference to the function first, like\n\n  let handleFocusout \u003d () \u003d\u003e ...;\n  element.addEventListener(\"focusout\", handleFocusout);\n  ...\n  element.removeEventListener(\"focusout\", handleFocusout);\n\nThat said, do you have to do this? If the input is readonly can it get a focusout or a keydown? Perhaps it\u0027s enough to add the event listeners when you create the buttons and never remove them.",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0fa75c3_5e557dde",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1368273
      },
      "writtenOn": "2020-07-21T05:46:48Z",
      "side": 1,
      "message": "I think it would be best to have private class methods to handle the events and then to use .bind on them:\n\n```\nnameField.addEventListener(\u0027focusout\u0027, this._handleNameFieldFocusOut.bind(this, nameField, editName, saveName, activeLabel));\n```\n\nAnd then just check in _handleNameFieldFocusOut if you are still in edit mode or not.",
      "parentUuid": "c1957fe9_dd824913",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5fcab82_0a8cca1b",
        "filename": "front_end/webauthn/WebauthnPane.js",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1426797
      },
      "writtenOn": "2020-07-22T20:02:22Z",
      "side": 1,
      "message": "I\u0027ve changed the code after realizing that since I\u0027m passing all the elements needed to the functions directly, I don\u0027t need to bind.\n\nAlso it looks like Nina\u0027s right about not needing to remove the event listeners as keydown and focusout won\u0027t ever fire since the input field won\u0027t be focusable. \n\nJan \u0026 Nina - do you think the way I\u0027ve done it is a good way to handle the buttons \u0026 event listeners? In line 258, the \u0027this\u0027 seems to be working as desired. Please LMK if this can be improved or if it\u0027s good to go.",
      "parentUuid": "a0fa75c3_5e557dde",
      "revId": "1d62cf412eeb6a5847800cfaccb41cfc701d38fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}