{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fb49b27e_925007a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-08T05:40:19Z",
      "side": 1,
      "message": "I only realized this now, but is there a tracking bug for all the i18n work on crbug? It would help us find relevant CLs in the future and track the overall progress :)",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51d530d3_67c5cc17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-10-09T02:00:14Z",
      "side": 1,
      "message": "agree, I created this:\nhttps://bugs.chromium.org/p/chromium/issues/detail?id\u003d1136655\n\nI also compiled a list of the previous CLs associated with the localization V2 work and added it to the issue. Thanks for the nice feedback.",
      "parentUuid": "fb49b27e_925007a7",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4d4a756_4c939c73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-10-08T02:47:16Z",
      "side": 1,
      "message": "PTAL",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "193f2be1_ff10f60e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-08T05:40:19Z",
      "side": 1,
      "message": "lgtm % one suggestion",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc007cf4_7ca9e8f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2020-10-08T19:34:05Z",
      "side": 1,
      "message": "Minor comments :)",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adbd55ea_35508585",
        "filename": "front_end/i18n/i18nImpl.js",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-08T05:40:19Z",
      "side": 1,
      "message": "This feels rather brittle. Could we solve this via the type system by throwing a custom exception sub-class and checking for that with `instanceof`?\n\nKeeping the diff between upstream and DevTools i18n minimal could bite us here, as we would have to manually check that the error is thrown in the same way. Also modifying the throwing side would somewhat guard us against that while being more work (maybe).",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 69
      },
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a95edd96_5cf67183",
        "filename": "front_end/i18n/i18nImpl.js",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-10-09T02:00:14Z",
      "side": 1,
      "message": "good point, as you mention I was trying to keep the diff minimal but I\u0027m ok with either solution.",
      "parentUuid": "adbd55ea_35508585",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 69
      },
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e58d0523_233317ff",
        "filename": "front_end/i18n/i18nImpl.js",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2020-10-08T19:34:05Z",
      "side": 1,
      "message": "If this is just checking the id is in moduleJSONStrings object, could it be \nif (moduleJSONStrings.hasOwnProperty(id)){\n return id;\n}",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eb20642_9d71c321",
        "filename": "front_end/i18n/i18nImpl.js",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-10-09T02:00:14Z",
      "side": 1,
      "message": "yes, but we also need to access the item and moduleJSONString is only a simple array (not an associative array) so it cannot be access by the property name only by the property index.",
      "parentUuid": "e58d0523_233317ff",
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47ed59d0_d1271dab",
        "filename": "front_end/third_party/i18n/README.chromium",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1341658
      },
      "writtenOn": "2020-10-08T19:34:05Z",
      "side": 1,
      "message": "nit: I think this is i18n.js now?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 14
      },
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70fc381d_6df6b929",
        "filename": "front_end/third_party/i18n/README.chromium",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2020-10-09T02:00:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47ed59d0_d1271dab",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 14
      },
      "revId": "c814ca199b9e196ad2f9e4edeff4175378df7581",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}