{
  "comments": [
    {
      "key": {
        "uuid": "7f421018_04c4b918",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-04T09:07:02Z",
      "side": 1,
      "message": "Thanks for addressing this Olivia. I have a few comments below.",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "362a6cd8_9ddc11c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-04T16:04:47Z",
      "side": 1,
      "message": "+1 to what Patrick has pointed out, but I like the new behavior alot!",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d00880d_af699089",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1422938
      },
      "writtenOn": "2020-08-04T17:38:44Z",
      "side": 1,
      "message": "A few questions/clarifications about the async part",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6851163e_30a7ec94",
        "filename": "front_end/accessibility/AccessibilitySidebarView.js",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-04T09:07:02Z",
      "side": 1,
      "message": "Do you need to wait for this method call to be done before executing the rest of the function? If so, you\u0027ll need to turn this doUpdate function into an async one too, and use await on this line.\nIf you do this, you can probably just keep the name setNode, since it\u0027ll be obvious that it\u0027s async, from the way we\u0027re calling it.",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "885215f3_389833e8",
        "filename": "front_end/accessibility/AccessibilitySidebarView.js",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-04T16:04:47Z",
      "side": 1,
      "message": "Also curious what changing this to an async function allows, as the rest of the subpane setNode() calls are synchronous",
      "parentUuid": "6851163e_30a7ec94",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecc3dec9_f1581570",
        "filename": "front_end/accessibility/AccessibilitySidebarView.js",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1422938
      },
      "writtenOn": "2020-08-04T17:38:44Z",
      "side": 1,
      "message": "Async allows the source order to be drawn for elements that aren\u0027t expanded in the element tree (so their child nodes aren\u0027t known yet). So in the setNodeAsync function, thats the call to getSubtree.\n\nI will change doUpdate to async, I think I might need to keep the name as setNodeAsync though. Otherwise I got some closure errors about not overriding the setNode function on the parent class, but also not having the return type match to the parent setNode function.",
      "parentUuid": "885215f3_389833e8",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61d3d097_cd472dd7",
        "filename": "front_end/accessibility/AccessibilitySidebarView.js",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-04T17:59:35Z",
      "side": 1,
      "message": "I\u0027m not sure you need to update doUpdate to async if you aren\u0027t awaiting the result.",
      "parentUuid": "ecc3dec9_f1581570",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa4c7051_416d0e60",
        "filename": "front_end/accessibility/AccessibilitySidebarView.js",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1422938
      },
      "writtenOn": "2020-08-04T18:47:37Z",
      "side": 1,
      "message": "Yeah, it seems ok if doUpdate isn\u0027t async. We just need to wait for getSubtree in the setNodeAsync function before we go onto the rest of that function.",
      "parentUuid": "61d3d097_cd472dd7",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3164c9d7_7899a155",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-04T09:07:02Z",
      "side": 1,
      "message": "This probably does not need to be a property of this object. It would make more sense as a const at the top of the file (just below the imports):\n\n  const MAX_CHILD_ELEMENTS_THRESHOLD \u003d 300;",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 45
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a54127bf_1623ab54",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1422938
      },
      "writtenOn": "2020-08-04T18:47:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3164c9d7_7899a155",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 45
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b00c85d5_b765f25b",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-04T09:07:02Z",
      "side": 1,
      "message": "The method is async now, so you don\u0027t actually need to create a promise by hand. You can just return an empty array whenever you need. See below.",
      "range": {
        "startLine": 37,
        "startChar": 4,
        "endLine": 37,
        "endChar": 57
      },
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ac01d57_64eece63",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-04T09:07:02Z",
      "side": 1,
      "message": "Here you could just do this:\n\n  return [];",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fad55260_5b8dcd12",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-04T09:07:02Z",
      "side": 1,
      "message": "The jsdoc comment at the top says that this method returns an array of DOMNodes. But it only returns a promise the resolves to an empty array here. Should the jsdoc be fixed? Or this code?\nBy the way, like before, here you can just return the array itself, not a promise.",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a37be4d2_f7ac48f1",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-04T16:04:47Z",
      "side": 1,
      "message": "+1 here. It looks to me that the only place that calls this doesn\u0027t need to use the results, so I\u0027m for must marking this as async and not explicitly returning anything here?",
      "parentUuid": "fad55260_5b8dcd12",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "effc178e_4f246434",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1422938
      },
      "writtenOn": "2020-08-04T17:38:44Z",
      "side": 1,
      "message": "Originally the function didn\u0027t return anything, but the typescript closure check said all async functions need to return a promise. So I will see what happens when I just return an array, but if the closure check doesn\u0027t like it, maybe I can have it return something similar to doUpdate (@return {!Promise.\u003c?\u003e})",
      "parentUuid": "a37be4d2_f7ac48f1",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b51500d6_8192f7f5",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-04T17:59:35Z",
      "side": 1,
      "message": "How about instead, we update the jsdoc to read @return {!Promise.\u003cvoid\u003e} and not return anything. This is a common pattern and it will make closure happy",
      "parentUuid": "effc178e_4f246434",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acadea79_cc7baf23",
        "filename": "front_end/accessibility/SourceOrderView.js",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1422938
      },
      "writtenOn": "2020-08-04T18:47:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b51500d6_8192f7f5",
      "revId": "9b1dfe78b7cb8e7565c66548ebdb8e484b81b606",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}