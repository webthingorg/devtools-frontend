{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "217e13dd_dab48ed9",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 14
      },
      "lineNbr": 351,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "`MaxValue` needs to be increased (follow the instructions in the comment right before this enum).",
      "range": {
        "startLine": 349,
        "startChar": 0,
        "endLine": 351,
        "endChar": 26
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecc3fe81_99e89626",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 14
      },
      "lineNbr": 351,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Thanks for pointing this out. It has been fixed.",
      "parentUuid": "217e13dd_dab48ed9",
      "range": {
        "startLine": 349,
        "startChar": 0,
        "endLine": 351,
        "endChar": 26
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "565841bc_7f8e188e",
        "filename": "front_end/panels/application/AppManifestView.ts",
        "patchSetId": 14
      },
      "lineNbr": 715,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "nit: this could be moved up a few lines before the icons part so that it matches the order of how the items appear on screen.",
      "range": {
        "startLine": 714,
        "startChar": 0,
        "endLine": 715,
        "endChar": 75
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f674e168_d8d63145",
        "filename": "front_end/panels/application/AppManifestView.ts",
        "patchSetId": 14
      },
      "lineNbr": 715,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "565841bc_7f8e188e",
      "range": {
        "startLine": 714,
        "startChar": 0,
        "endLine": 715,
        "endChar": 75
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb18d18a_8a940056",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Do you think this abbreviation should be spelled out somewhere? I think so far \u0027PWA\u0027 is not occurring elsewhere on this panel.",
      "range": {
        "startLine": 25,
        "startChar": 82,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef884447_babe15e0",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Good point. I reached out to our PM, Zoher, on this and we decided to change the wording to \"With the app installed, test the registered protocols.\" This is so we\u0027re using \"app\" instead of PWA which does at least appear in other strings in the tool.",
      "parentUuid": "bb18d18a_8a940056",
      "range": {
        "startLine": 25,
        "startChar": 82,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403451e5_75227642",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "This is not the only string containing \u0027PWA\u0027.",
      "parentUuid": "ef884447_babe15e0",
      "range": {
        "startLine": 25,
        "startChar": 82,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ae4297f_ca56c453",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-26T00:42:09Z",
      "side": 1,
      "message": "Thanks for pointing those out! I have changed the other string from \"PWA\" to \"app\" as well. As for the hyperlink to the article, \"URL protocol handler registrations for PWAs\" is the title of the article so we think it\u0027s fine to leave it as PWA.",
      "parentUuid": "403451e5_75227642",
      "range": {
        "startLine": 25,
        "startChar": 82,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19e70bd3_afc6f64f",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-26T18:08:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ae4297f_ca56c453",
      "range": {
        "startLine": 25,
        "startChar": 82,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d4e98f6_7977ddb1",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "`#queryInputState` and the input\u0027s content can get out of sync. If you enter a query and then push the test button, it\u0027ll take you to the correct destination. Upon pressing the button a 2nd time, it won\u0027t. That\u0027s because `update()` has been called in the meantime, which reset the state variable, but the input still contains the previous content.",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67d7b49c_f0f1aada",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Thanks for pointing this out. This is still being investigated. We\u0027ve tried adding .value to the input, but that didn\u0027t change the behavior: \n\n\u003cinput id\u003d\"user-input\" class\u003d\"harmony-input\" type\u003d\"text\" .value\u003d${this.#queryInputState} @change\u003d${this.#handleQueryInputChange}/\u003e\n\nA 2nd button click seems to work when this line is completely removed from update(), but it needs to be investigated more before we decide to just remove it. If you have any suggestions, please let me know.",
      "parentUuid": "4d4e98f6_7977ddb1",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b0c0d66_c326af57",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "Hm, why do we even need separate `set data` and `#update` methods? I think you can indeed remove the `this.#queryInputState \u003d \u0027\u0027;` line, it should be enough that it is being set on object construction.\nI worry about `#selectedProtocolState` though? Can you check its behaviour on a page with multiple protocols to select from? Does it reset on re-render? Maybe you can set it to `null` initially and then only change it here if it\u0027s current value is still `null`?",
      "parentUuid": "67d7b49c_f0f1aada",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83f3e816_43cfd8a9",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-26T00:42:09Z",
      "side": 1,
      "message": "Thanks for pointing that out as well! #selectProtocolState was resetting after re-rendering, but the text in the dropdown wasn\u0027t. We used your suggestion to only have it change here if its current value is still null which worked so that is now fixed.\n\nWe also fixed the other issue so clicking on the button a 2nd time or more now works fine. Additionally, when you change from one PWA to another PWA in the browser, the input now resets. Previously, it was not resetting. Please refer to patchset 18 to see the changes in #update().  \n\nAs for why we have #update(), it was adopted from other LitHTML files in the codebase and thought it might help we readability, but I don\u0027t think any of us have strong opinions on it. if you think it\u0027s harder to read this way, let me know and I can look into changing it.",
      "parentUuid": "3b0c0d66_c326af57",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b390877_1dd845f3",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-26T18:08:53Z",
      "side": 1,
      "message": "This is turning out to be tricky! I suspect that using a `querySelector` and then directly changing the HTMLElement isn\u0027t how it should be done either. I also found an instance in which the text does not reset on navigation (https://i.imgur.com/sOfLNxj.mp4).\n\nWould it be worth trying to get rid of the state variables and just read the form state when the button is pressed?\n\nJack, as our LitHtml guru, are there best practices regarding forms in LitHtml?",
      "parentUuid": "83f3e816_43cfd8a9",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a43872e6_7143cea6",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-26T18:12:22Z",
      "side": 1,
      "message": "We just cleaned up #update() more so please refer to patchset 20 instead.",
      "parentUuid": "83f3e816_43cfd8a9",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de46d1bf_0e58d888",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-26T18:36:51Z",
      "side": 1,
      "message": "\u003e We just cleaned up #update() more so please refer to patchset 20 instead.\n\nNote: This is referring to my previous comment above\n\nAs for your response, I just tried reproducing the video you sent and it looks like the text does not reset on navigation for the first time only. It works after navigating to another PWA the 2nd time and after that. \n\nWe\u0027ll look into this and your question about if we can get rid of the state variables.",
      "parentUuid": "a43872e6_7143cea6",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "522d28ad_c89d1c34",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-27T07:21:12Z",
      "side": 1,
      "message": "+1 to getting rid of state vars",
      "parentUuid": "de46d1bf_0e58d888",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc38e875_7f73980c",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-05-27T10:35:25Z",
      "side": 1,
      "message": "I don\u0027t quite have the full context in my head yet (happy to VC) but the current solution feels off.\n\nTypically you have two options:\n\n1. Control the input. Store its value in state, and have an @change (or @input, can\u0027t remember off the top of my head) handler that updates the value every time the user types in it.\n2. Don\u0027t control the input, and on form submit use FormData [https://developer.mozilla.org/en-US/docs/Web/API/FormData] to get all the data from the form. Then you can clear the input manually using .value \u003d \u0027\u0027. If you do this, you should also use our on-render directive to get the value rather than querying the DOM (https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/ui/components/helpers/directives.ts;l\u003d12?q\u003ddirectives.ts\u0026ss\u003dchromium).",
      "parentUuid": "522d28ad_c89d1c34",
      "range": {
        "startLine": 88,
        "startChar": 4,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "673708be_a1b4e074",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 105,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Is non-matching width/height on purpose? Do we even need both values?",
      "range": {
        "startLine": 104,
        "startChar": 85,
        "endLine": 105,
        "endChar": 99
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c784b88_f5a0482e",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 105,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "It was originally done on purpose so the icons would stay aligned with the text. After checking this again and applying your suggestion of adding vertical-align to the \"inline-icon\" class, I\u0027ve changed the value to 16px to match other icons on the page. I\u0027ve also removed the height value since it seems to still work with just the width value.",
      "parentUuid": "673708be_a1b4e074",
      "range": {
        "startLine": 104,
        "startChar": 85,
        "endLine": 105,
        "endChar": 99
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3493d3dc_60fffbe9",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "nit: Is this the autoformatter\u0027s work? Maybe it can be tricked it into something less ugly by playing around with the line breaks.",
      "range": {
        "startLine": 101,
        "startChar": 83,
        "endLine": 106,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "792c3d11_0ab87549",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Yes, this is because of the autoformatter during presubmit checks. Unfortunately, I\u0027ve tried several times and I\u0027m not quite sure how to fix this. In the interest of time, I will leave it as is. If you know of a solution or if you could elaborate more on what you mean by line breaks, please do share.",
      "parentUuid": "3493d3dc_60fffbe9",
      "range": {
        "startLine": 101,
        "startChar": 83,
        "endLine": 106,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7723fc85_54a4b6d0",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "It seems the autoformatter prefers to align the object\u0027s `{` with the ternary operator `?`. You could do this:\n```\nconst iconData: IconButton.Icon.IconData \u003d {\n  iconName: this.#protocolHandlers.length \u003e 0 ? \u0027ic_checkmark_16x16\u0027 : \u0027ic_info_black_18dp\u0027,\n  color: this.#protocolHandlers.length \u003e 0 ? \u0027var( --color-ic-file-image)\u0027 : \u0027var(--color-link)\u0027,\n  width: \u002716px\u0027,\n};\n```\nbut I\u0027m not sure this is better. I don\u0027t have a strong opinion either way.",
      "parentUuid": "792c3d11_0ab87549",
      "range": {
        "startLine": 101,
        "startChar": 83,
        "endLine": 106,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abf71914_358d9941",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-26T00:42:09Z",
      "side": 1,
      "message": "This seems to work fine so I decided to use your suggestion. Thanks!",
      "parentUuid": "7723fc85_54a4b6d0",
      "range": {
        "startLine": 101,
        "startChar": 83,
        "endLine": 106,
        "endChar": 85
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57b3feb0_d42451e2",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 110,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Why is this class needed? Although, you could add it to the css and play around with `verital-align` for the icon.",
      "range": {
        "startLine": 110,
        "startChar": 55,
        "endLine": 110,
        "endChar": 66
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d20e3f8_bfe41156",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 110,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Thanks for the idea! This has been added to the css and has helped it look much cleaner.",
      "parentUuid": "57b3feb0_d42451e2",
      "range": {
        "startLine": 110,
        "startChar": 55,
        "endLine": 110,
        "endChar": 66
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf7ff16a_01c702a3",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 112,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Nice, TIL about this function :-)",
      "range": {
        "startLine": 112,
        "startChar": 24,
        "endLine": 112,
        "endChar": 48
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb053652_fd1e91f4",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "nit: Since the whole file basically already is a section of the app manifest page, maybe rename it to something like `#renderProtocolTest`?",
      "range": {
        "startLine": 120,
        "startChar": 2,
        "endLine": 120,
        "endChar": 30
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9a381cb_99f1d531",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "cb053652_fd1e91f4",
      "range": {
        "startLine": 120,
        "startChar": 2,
        "endLine": 120,
        "endChar": 30
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "440ce5cd_320a1635",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 123,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "`LitHtml.nothing`",
      "range": {
        "startLine": 123,
        "startChar": 13,
        "endLine": 123,
        "endChar": 27
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50c38c6a_a7f9b29e",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 123,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "440ce5cd_320a1635",
      "range": {
        "startLine": 123,
        "startChar": 13,
        "endLine": 123,
        "endChar": 27
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32c8129b_0f6acf71",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 133,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Is the id needed?",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 36
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23478e07_4d9f1cc7",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 133,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "The id is used for the dropdown selector for E2E testing in manifest-protocol-handlers_test.ts, but since it\u0027s purely used for testing, I have changed it to a class as shown below:\n\n\u003cselect class\u003d\"chrome-select protocol-select\" @change\u003d${this.#handleProtocolSelect}\u003e\n\n\"chrome-select\" is a legacy class so I\u0027m not sure if it would be wise to use it as selector for testing, but let me know if you think it would be fine to use this instead.",
      "parentUuid": "32c8129b_0f6acf71",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 36
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "308210b1_31b41eb6",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 133,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23478e07_4d9f1cc7",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 36
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "748cf583_f2e152ba",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 136,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Is the id needed? The styles could be added to the class name.",
      "range": {
        "startLine": 136,
        "startChar": 15,
        "endLine": 136,
        "endChar": 30
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be8a15da_35b963c9",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 136,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "The \"harmony-class\" is a legacy class from inspectorCommon.css, and it was overruling any changes trying to be made to fit the styling of the protocol handler section. To manage this, an id selector is being used to override parts of the legacy class, which was deemed better than using \"!important.\"",
      "parentUuid": "748cf583_f2e152ba",
      "range": {
        "startLine": 136,
        "startChar": 15,
        "endLine": 136,
        "endChar": 30
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "942cdaea_5e504300",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 136,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "Ah, as Michael already suggested earlier, a more specific css selector would work:\n```\ninput.harmony-input[type\u003d\"text\"] {\n  margin-left: 4px;\n  margin-right: 4px;\n  width: 250px;\n  height: 22px;\n}\n```",
      "parentUuid": "be8a15da_35b963c9",
      "range": {
        "startLine": 136,
        "startChar": 15,
        "endLine": 136,
        "endChar": 30
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66f4bafa_9e338271",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 136,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-26T00:42:09Z",
      "side": 1,
      "message": "Ah, I see. That makes sense. Thanks for typing it out! I have changed it to this and removed the .user-input from the css and changed it to a class instead of an id in the input tag because it\u0027s being used as a querySelector to get the value of the input in #update(). \"harmony-input\" could be used for the querySelector, but since it\u0027s a legacy class, I thought perhaps using \"user-input\" would still be best.",
      "parentUuid": "942cdaea_5e504300",
      "range": {
        "startLine": 136,
        "startChar": 15,
        "endLine": 136,
        "endChar": 30
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84aab12c_0be66e9c",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 137,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 137,
        "startChar": 45,
        "endLine": 137,
        "endChar": 62
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "416b823b_c3c00aa1",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 137,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "This has been removed. Thanks for pointing it out. It was a remnant from a previous edit.",
      "parentUuid": "84aab12c_0be66e9c",
      "range": {
        "startLine": 137,
        "startChar": 45,
        "endLine": 137,
        "endChar": 62
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2e0ed85_a2f75374",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 156,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "The metrics calls are causing DevTools to crash for me locally with a \"Terminating renderer for bad IPC message, reason 18\" error. Maybe you need to update the metrics enums in the backend first?",
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceaafc27_3d8d3259",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 156,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "The backend CL for the telemetry events is now available here: https://chromium-review.googlesource.com/c/chromium/src/+/3664012\nI\u0027ve also added this link to the description. Apologies for the delay on that. It should hopefully work now.",
      "parentUuid": "c2e0ed85_a2f75374",
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3009a98f_e118aa20",
        "filename": "front_end/panels/application/components/ProtocolHandlersView.ts",
        "patchSetId": 14
      },
      "lineNbr": 156,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "Now it works for me, thanks!",
      "parentUuid": "ceaafc27_3d8d3259",
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebe04d52_147f8822",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "What\u0027s the effect of this?",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 14
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eab2067c_264a2e1a",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "This was originally added to ensure the dropdown adjusts to the length of the protocols, but after checking this again, it seems it adjusts fine without this, so this has been removed.",
      "parentUuid": "ebe04d52_147f8822",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 14
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68fc3117_60b86006",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 28,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Do we need this in addition to the `.protocol-handlers-row`\u0027s margin?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 28,
        "endChar": 1
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afb776c4_95785fe5",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 28,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "Good point. After revisiting and some adjustments, it\u0027s no longer needed so it has been removed.",
      "parentUuid": "68fc3117_60b86006",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 28,
        "endChar": 1
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbed76ea_88da7c42",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-24T15:23:30Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "def4c897_52442db7",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-05-25T07:58:41Z",
      "side": 1,
      "message": "After some revisions thanks to a suggestion from another comment, this is no longer needed and has been removed from the CSS file, but it has been kept in the .ts file as a class selector for E2E testing.",
      "parentUuid": "dbed76ea_88da7c42",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d956d3fb_5dc6d084",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-05-25T20:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "def4c897_52442db7",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "7a2f45ff873ad2086b70cd1df76eed563d39037a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}