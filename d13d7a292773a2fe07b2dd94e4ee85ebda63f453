{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "94f7d09e_b175bf9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "lgtm, some comments/questions but mostly nits :)",
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "977e5d9e_85e3b089",
        "filename": "front_end/models/bindings/PresentationConsoleMessageHelper.ts",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "I\u0027d suggest either else if with an instance check for CSSModel and throw in the else case. Or add a `console.assert` here",
      "range": {
        "startLine": 65,
        "startChar": 6,
        "endLine": 67,
        "endChar": 5
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312aaa0e_cec95a85",
        "filename": "front_end/models/bindings/PresentationConsoleMessageHelper.ts",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-04-26T09:47:36Z",
      "side": 1,
      "message": "Is this for readabilities sake? The type checker wouldn\u0027t allow anything but a CSSModel in the second branch.",
      "parentUuid": "977e5d9e_85e3b089",
      "range": {
        "startLine": 65,
        "startChar": 6,
        "endLine": 67,
        "endChar": 5
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb934036_dcfc534a",
        "filename": "front_end/models/bindings/PresentationConsoleMessageHelper.ts",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "`if` not strictly necessary and you do the lookup anyway with `has`. Alternatively the pattern DevTools uses the most is:\n\n```\nlet messages \u003d this.#presentationMessages.get(message.url);\nif (!messages) {\n  messages \u003d [];\n  this.#presentationMessages.set(message.url, messages);\n}\nmessages.push({message, presentation});\n```",
      "range": {
        "startLine": 148,
        "startChar": 6,
        "endLine": 148,
        "endChar": 57
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfda1949_fe28d505",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "I think this one could be replaced with the \"pendingLiveLocationChangesPromise\" on both bindings. Then consoleMessageAdded doesn\u0027t need to be async.",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2f65296_56096c7d",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-04-26T09:47:36Z",
      "side": 1,
      "message": "pendingLiveLocationChangesPromise doesn\u0027t cover the uiLocation path, it\u0027s only available for CSSLocation and DebuggerModel.Location",
      "parentUuid": "dfda1949_fe28d505",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bacad283_b89a156a",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "Clever, I like it a lot! :)",
      "range": {
        "startLine": 68,
        "startChar": 3,
        "endLine": 68,
        "endChar": 93
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c155d9ce_84b1399d",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-04-26T09:47:36Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "bacad283_b89a156a",
      "range": {
        "startLine": 68,
        "startChar": 3,
        "endLine": 68,
        "endChar": 93
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3661614f_1e210690",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "I\u0027m curious: Why is the `pendingLiveLocationChangesPromise` not sufficient? If I read the code correctly then the spy fulfuills once all the `updateSourceLocation` are done, which in turn \"only\" await the LiveLocation creation via Bindings.",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 35
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37ca52d2_9f6f8e24",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "Thanks for the thorough unit test and doing all the permutations!",
      "range": {
        "startLine": 95,
        "startChar": 28,
        "endLine": 95,
        "endChar": 60
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a21b5ebe_46720753",
        "filename": "test/unittests/front_end/models/bindings/PresentationConsoleMessageHelper_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-04-26T09:42:29Z",
      "side": 1,
      "message": "strictEqual for number comparisons here and below",
      "range": {
        "startLine": 131,
        "startChar": 11,
        "endLine": 131,
        "endChar": 20
      },
      "revId": "d13d7a292773a2fe07b2dd94e4ee85ebda63f453",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}