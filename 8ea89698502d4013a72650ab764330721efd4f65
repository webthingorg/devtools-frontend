{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb9fd637_ceae3d45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1434270
      },
      "writtenOn": "2023-11-17T20:26:48Z",
      "side": 1,
      "message": "This CL follows the suggestion from https://docs.google.com/document/d/1QNHpkOniAXGDA20yAJLxlwyzg0mOeIKk4g-jhm-QTBk/edit?disco\u003dAAAA8U7UT2g. PTAL.\n\nI was trying to add a test case in user-metrics_test.ts but not sure how to setup the cross-site context. Do you know if anything similar has been done before?",
      "revId": "8ea89698502d4013a72650ab764330721efd4f65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1050b06e_4c5f5027",
        "filename": "front_end/panels/issues/IssueView.ts",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-11-21T10:58:07Z",
      "side": 1,
      "message": "This slightly changes an existing metric. 3PCD issues would be counted twice, which would make the overall count of expanded issues incorrect. I see 3 options:\n\n1) Your current implementation: no effect on number of cookie issues expanded, but total number of issues expanded would contain double-counted 3PCD issues.\n2) Only count 3PCD issue expansions once, don\u0027t count them as cookie issue expansions: no effect on overall count of expanded issues, but going forward the number of expanded cookie issues would be lower by the amount of expanded 3PCD issues.\n3) If you are only interested in measuring 3PCD issues being expanded, you could add a value to the `Action` enum (which already contains a lot of unrelated actions) and count via `actionTaken()` instead. This would keep the existing `IssueExpanded` count completely unchanged.\n\nWDYT? I\u0027m leaning towards 3 if that works for your use case.",
      "range": {
        "startLine": 368,
        "startChar": 0,
        "endLine": 373,
        "endChar": 5
      },
      "revId": "8ea89698502d4013a72650ab764330721efd4f65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a780063_fb029a05",
        "filename": "front_end/panels/issues/IssueView.ts",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1434270
      },
      "writtenOn": "2023-11-21T21:00:56Z",
      "side": 1,
      "message": "Using `DevTools.ActionTaken` metric could work technically but I wonder if it can provide useful information, considering user engagement with Issue panel is already pretty low compared to other features.\n\nI might prefer option 2) if that works for you. Cause right now the cookie issues are represented as `SameSiteCookie` in the metric anyways(according to tools/metrics/histograms/enums.xml).\n\nImplementation-wise, instead of using a string literal (\"ThirdPartyPhaseout\") for filtering/checking, I wonder if it\u0027s better/possible to create a sub-classification in the CookieIssue.ts for SameSite and ThirdPartyPhaseout cookie issues sub-type and map them with all the existing cookie issues. Then in `onexpand`, we cast `issue` to `CookieIssue` type if we see `IssueCategory.Cookie` to get the sub-type information.  Does that make sense to you?",
      "parentUuid": "1050b06e_4c5f5027",
      "range": {
        "startLine": 368,
        "startChar": 0,
        "endLine": 373,
        "endChar": 5
      },
      "revId": "8ea89698502d4013a72650ab764330721efd4f65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9392db6_27c1438c",
        "filename": "front_end/panels/issues/IssueView.ts",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-11-22T09:16:51Z",
      "side": 1,
      "message": "Absolutely, SGTM!",
      "parentUuid": "7a780063_fb029a05",
      "range": {
        "startLine": 368,
        "startChar": 0,
        "endLine": 373,
        "endChar": 5
      },
      "revId": "8ea89698502d4013a72650ab764330721efd4f65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}