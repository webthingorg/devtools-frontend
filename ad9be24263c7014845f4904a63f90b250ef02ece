{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5c9ba6dc_6ed0f2d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557932
      },
      "writtenOn": "2024-06-21T11:30:09Z",
      "side": 1,
      "message": "LGTM + 1 question",
      "revId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d410da00_6dae58f5",
        "filename": "front_end/testing/EnvironmentHelpers.ts",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1557932
      },
      "writtenOn": "2024-06-21T11:30:09Z",
      "side": 1,
      "message": "Do we need this? I think this will be handled on creating the Panel?",
      "fixSuggestions": [
        {
          "fixId": "31504db1_cca9de46",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/testing/EnvironmentHelpers.ts",
              "range": {
                "startLine": 290,
                "startChar": 0,
                "endLine": 293,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bc17710_cce7bce2",
        "filename": "front_end/testing/EnvironmentHelpers.ts",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-06-21T11:32:19Z",
      "side": 1,
      "message": "It is needed for the tests where we create the setting \u0026 set it to something we want for the test before creating the panel.\n\nOtherwise, when we try to execute `      Common.Settings.settingForTest(\u0027freestyler-dogfood-consent-onboarding-finished\u0027).set(false);` before creating the panel; we get an error saying that the setting is not registered üòÖ",
      "parentUuid": "d410da00_6dae58f5",
      "revId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e98e20f_c326302d",
        "filename": "front_end/testing/EnvironmentHelpers.ts",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1557932
      },
      "writtenOn": "2024-06-21T11:33:47Z",
      "side": 1,
      "message": "ACK, so we need to register it first üëç.",
      "parentUuid": "4bc17710_cce7bce2",
      "revId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad9be24263c7014845f4904a63f90b250ef02ece",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}