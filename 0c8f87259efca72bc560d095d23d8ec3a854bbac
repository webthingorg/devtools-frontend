{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9eca445_fe6e6f1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-03-04T10:09:18Z",
      "side": 1,
      "message": "Hi Benedikt, hi Jaro,\n\nhere\u0027s the frontend change for the instrumentation breakpoint change only. This is basically just broken out of crrev.com/c/3374982 with some adaptations since it\u0027s only instrumentation breakpoints, and for addressing some layout + e2e tests.\n\nAnother CL for disabling (crrev.com/c/3487867) and enabling (crrev.com/c/3497691\n) is in the pipeline, I\u0027ll send out the disabling one out in a bit.\n\nNote that the disabled tests include: tests with v8 bugs, tests with testing infra timing bugs, and test with problem with frames + instrumentation breaks, and finally those tests that I\u0027ve already adapted (expectation files and test themselves). The latter category will be enabled again in the enabling CL.\n\nPTAL!",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6ad7e4c_77c55abe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-03-04T14:38:23Z",
      "side": 1,
      "message": "First round of comments.",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a163fc55_36cf1cc3",
        "filename": "front_end/core/sdk/DebuggerModel.ts",
        "patchSetId": 17
      },
      "lineNbr": 248,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-03-04T14:38:23Z",
      "side": 1,
      "message": "Nit: You can just await both promises here with\n\n```\nconst [enableResult] \u003d await Promise.all([enablePromise, instrumentationPromise]);\n```",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9663799d_0ed0c0de",
        "filename": "front_end/core/sdk/DebuggerModel.ts",
        "patchSetId": 17
      },
      "lineNbr": 662,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-03-04T14:38:23Z",
      "side": 1,
      "message": "Why do you DCHECK that the callback is non-null and then check whether the callback is trueish below? The DCHECK doesn\u0027t look right to me.",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f3dfadf_0fcfe51f",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 17
      },
      "lineNbr": 147,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-03-04T14:38:23Z",
      "side": 1,
      "message": "Let\u0027s not unnecessarily serialize things that can run in parallel here.\n\n```\nawait Promise.all(affectedBreakpoints.map(bp \u003d\u003e bp.updateBreakpoint()));\n```",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b396ee38_1a280c77",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 17
      },
      "lineNbr": 536,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-03-04T14:38:23Z",
      "side": 1,
      "message": "Same as above, we unnecessarily serialize execution here (before it was parallel, because we didn\u0027t block on the resulting promises):\n\n```\nawait Promise.all(Array.from(this.#modelBreakpoints.values()).map(modelBreakpoint \u003d\u003e modelBreakpoint.scheduleUpdateInDebugger()));\n```",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69802155_71591d1b",
        "filename": "front_end/ui/legacy/components/utils/ImagePreview.ts",
        "patchSetId": 17
      },
      "lineNbr": 181,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-03-04T14:38:23Z",
      "side": 1,
      "message": "This looks like a random, unrelated change?",
      "revId": "0c8f87259efca72bc560d095d23d8ec3a854bbac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}