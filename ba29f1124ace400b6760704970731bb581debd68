{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8860bef4_e9c45ffe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-04-16T17:05:22Z",
      "side": 1,
      "message": "Simon, PTAL. I am not the most familiar with the targets system in DevTools, so it may be that there is a better way to deal with this. It made sense to me to dispose of crashed targets, but I am open to other solutions if you have alternatives that fit better. Thanks!",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4ac6f29_3f245286",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-16T18:13:44Z",
      "side": 1,
      "message": "nice",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84911ceb_0d98d8e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-17T06:58:41Z",
      "side": 1,
      "message": "I\u0027m curious, is this a frontend or backend issue? Do we receive a `detachedFromTarget` event for the crashing target and there is an ordering problem in the frontend? Or don\u0027t we receive  a `detachedFromTarget` event in the first place?\n\nThe CL is mostly fine with me, but we\u0027ll leave some traces of the crashing target in `#childTargetsBySessionId` and `#childTargetsById` that are cleaned up by `detachedFromTarget` normally.",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fcc4e55_ca9611ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-04-17T08:13:58Z",
      "side": 1,
      "message": "In this instance, from my debugging, I did not see a `detachedFromTarget` event first. I can update this code to remove the ID from those maps to make sure it\u0027s fully cleaned up. wdyt?",
      "parentUuid": "84911ceb_0d98d8e2",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1721312b_b0fcc371",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-17T08:50:29Z",
      "side": 1,
      "message": "I think I\u0027m fine with the CL as-is. We don\u0027t leak too much and targets crashing should happen rarely. The only thing I was really worried about it that the target with the same targetId is revived but that doesn\u0027t seem to be the case.",
      "parentUuid": "9fcc4e55_ca9611ea",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ec71219_235aeee4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-04-17T08:53:33Z",
      "side": 1,
      "message": "Great, thanks Simon!",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41c1becf_232e6ef8",
        "filename": "front_end/core/sdk/ChildTargetManager.ts",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-04-16T18:13:44Z",
      "side": 1,
      "message": "from a DRY POV, most of this is the same as the `targetDestroyed` method\n\ncould you call the target.dispose() and then `this.targetDestroyed(targetId)` ?\n\nno worries if not, just wanted to doublecheck..",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea8647f6_6e571064",
        "filename": "front_end/core/sdk/ChildTargetManager.ts",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-04-17T08:53:33Z",
      "side": 1,
      "message": "`targetDestroyed` takes the TargetDestroyedEvent which is similar but not the same - so in this case I think it\u0027s easier to keep them apart.",
      "parentUuid": "41c1becf_232e6ef8",
      "revId": "ba29f1124ace400b6760704970731bb581debd68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}