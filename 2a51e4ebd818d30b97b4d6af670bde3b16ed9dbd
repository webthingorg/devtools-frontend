{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "371aaede_84a1a4d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-11-04T11:51:29Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ccf9a2c_91c61a0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-11-04T12:13:41Z",
      "side": 1,
      "message": "@Brendan would you also mind taking a look as you\u0027re familiar with this approach from LH?",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d8448c3_ddc3168b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1243185
      },
      "writtenOn": "2022-11-04T17:53:53Z",
      "side": 1,
      "message": "Nice! Super clear and slotted in well.",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b35846ee_a8fe15d4",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1243185
      },
      "writtenOn": "2022-11-04T17:53:53Z",
      "side": 1,
      "message": "Seems like there could be issues with the whole flow if rogue navigations could happen here, e.g. a page-triggered navigation racing with the `resourceModel.navigate()` call, maybe? Should it just reject in that case or is it still recoverable enough?",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01bcf87c_efa0b640",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1243185
      },
      "writtenOn": "2022-11-04T18:09:22Z",
      "side": 1,
      "message": "(for extra context, Lighthouse [doesn\u0027t check that case](https://github.com/GoogleChrome/lighthouse/blob/d363784a38d45a6eb2b4d5e9d82d931623bbb90e/core/gather/driver/wait-for-condition.js#L51-L57) and now I\u0027m really wondering if it should)",
      "parentUuid": "b35846ee_a8fe15d4",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b11bdd_c5b795d3",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2022-11-04T18:21:13Z",
      "side": 1,
      "message": "for that to happen.. someone needs to do \"reload and record\" button and then navigate to a new url (or ... hit reload manually) --- doing this before \u0027about:blank\u0027 loads up?\n\nseems possible but... feels like they\u0027d gotta do that in about 2ms. :)  \n\nbut.. yeah we could reject this promise if the event.data.url !\u003d\u003d\u003d about:blank.\nthat seems ... reasonable.",
      "parentUuid": "01bcf87c_efa0b640",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6e830b2_7941480b",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-11-07T15:27:20Z",
      "side": 1,
      "message": "Nice thought - updated to `reject()` if the URL is not about:blank. I agree if that happens we should probably bail.",
      "parentUuid": "85b11bdd_c5b795d3",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3c3a04_36c6f4d3",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2022-11-04T18:21:13Z",
      "side": 1,
      "message": "Got some slightly bad news for ya: https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/panels/lighthouse/LighthouseController.ts;l\u003d328-346;drc\u003dc2246db2baba90c420116590d669c3ebec548d5e\n\nIIRC, @alexrudenko@chromium.org suggested this navHistory approach to get the hash. Alex, do you have a smarter approach you use in recorder panel these days?",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e563ff73_c5745fe4",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1111657
      },
      "writtenOn": "2022-11-04T18:23:41Z",
      "side": 1,
      "message": "(after a quick peek it looks like the same navHistory approach is used there.)",
      "parentUuid": "fe3c3a04_36c6f4d3",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf09c44e_c8fc113b",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-11-07T08:36:58Z",
      "side": 1,
      "message": "Ah thanks! TIL. I will use that approach also.",
      "parentUuid": "e563ff73_c5745fe4",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aebb4c10_7782f1f8",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2022-11-07T09:11:42Z",
      "side": 1,
      "message": "Yeah, I don\u0027t think there is anything more reliable currently. Unless you want to look into fixing Target.targetInfoChanged event to be emitted on url/title change (we should do that at one point). I also wonder if Target.getTargets would return the updated URL?",
      "parentUuid": "bf09c44e_c8fc113b",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd2b4d33_6b8509e0",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-11-07T15:27:20Z",
      "side": 1,
      "message": "Thanks! For now I\u0027ve taken the method from the LH controller and adapted it. At the very least we should de-duplicate that (crbug.com/1382044).\n\nWith Target.getTargets, would we ever have to worry about it returning multiple targets, or within the context of DevTools would it only ever be one?\n\nHappy to work on follow up CL(s) to make this situation better.",
      "parentUuid": "aebb4c10_7782f1f8",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "171dcdd0_0f0cd331",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2022-11-08T06:33:11Z",
      "side": 1,
      "message": "Target.getTargets would return multiple targets so one needs to find the right one by ID. I am not quite sure that it response would always contain the updated URL though.",
      "parentUuid": "cd2b4d33_6b8509e0",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31435742_c3112dd1",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 1
      },
      "lineNbr": 889,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-11-14T15:46:10Z",
      "side": 1,
      "message": "Thanks - I\u0027m going to stick with what we have right now.",
      "parentUuid": "171dcdd0_0f0cd331",
      "revId": "2a51e4ebd818d30b97b4d6af670bde3b16ed9dbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}