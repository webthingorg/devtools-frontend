{
  "comments": [
    {
      "key": {
        "uuid": "3060642a_1ded7f26",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 682,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-02T07:50:11Z",
      "side": 1,
      "message": "can remove this part of the type?",
      "range": {
        "startLine": 682,
        "startChar": 14,
        "endLine": 682,
        "endChar": 22
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e472ab20_6200fa11",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 682,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-02T09:08:44Z",
      "side": 1,
      "message": "No problem. I also removed all the other extra `Network` ones from other comparators. I don\u0027t know why it\u0027s written like that in the first place. Removing them does not seem to cause any unhappiness from Closure. Thanks for catching this.",
      "parentUuid": "3060642a_1ded7f26",
      "range": {
        "startLine": 682,
        "startChar": 14,
        "endLine": 682,
        "endChar": 22
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27957bcf_f73d39b0",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 685,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-02T07:50:11Z",
      "side": 1,
      "message": "Is it straightforward to add unit tests for this, including for complex cases like Alex mentions?",
      "range": {
        "startLine": 685,
        "startChar": 9,
        "endLine": 685,
        "endChar": 29
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "368ac6b4_4cd67612",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 685,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-02T09:08:44Z",
      "side": 1,
      "message": "I\u0027m not sure if it\u0027s possible, considering that:\n1. it imports something from `bindings`, and I remember files with `bindings` import cannot be unit-tested (I will check with A\u0026T on this);\n2. it inherits from DataGridNode, and that\u0027s not TS-ified.\n\nI think it\u0027s worth some unit tests, and since these comparators are static anyway, I think we can abstract them out to be properly tested. I\u0027ll file a ticket and do them separately because it requires some shuffling of existing chunks of code that\u0027s not part of this problem. WDYT?",
      "parentUuid": "27957bcf_f73d39b0",
      "range": {
        "startLine": 685,
        "startChar": 9,
        "endLine": 685,
        "endChar": 29
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c0219e7_30c0fb05",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 685,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-02T09:47:02Z",
      "side": 1,
      "message": "Yeah sounds good to me. Seems like a \u0027easy\u0027 target in that its static, but definitely some build considerations there. Thanks!",
      "parentUuid": "368ac6b4_4cd67612",
      "range": {
        "startLine": 685,
        "startChar": 9,
        "endLine": 685,
        "endChar": 29
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b8e0620_9f29d39d",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 694,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-02T09:13:45Z",
      "side": 1,
      "message": "(I know this wasn\u0027t introduced by your patch, but) `indentityCompare` seems like a typo for `identityCompare`. Let\u0027s drive-by-fix that if it\u0027s not too invasive?",
      "range": {
        "startLine": 694,
        "startChar": 22,
        "endLine": 694,
        "endChar": 38
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "874f5fce_5bd9275c",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 694,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-02T09:49:08Z",
      "side": 1,
      "message": "Let me do that. Good catch!",
      "parentUuid": "3b8e0620_9f29d39d",
      "range": {
        "startLine": 694,
        "startChar": 22,
        "endLine": 694,
        "endChar": 38
      },
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "852aaee3_c73c4830",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-02T05:53:33Z",
      "side": 1,
      "message": "Is it possible that we get non ASCII characters in the URL? `\u0027Ã–sterreich\u0027 \u003e \u0027Zealand\u0027` would be incorrectly sorted in this case.",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6612666_d3c4f60f",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-02T09:08:44Z",
      "side": 1,
      "message": "I changed the comparison to `localeCompare`. Should solve this now. Thanks for catching this!",
      "parentUuid": "852aaee3_c73c4830",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e4f4f1e_8e3036e2",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-02T09:13:45Z",
      "side": 1,
      "message": "Let\u0027s confirm if `.url()` can return non-ASCII characters (if it\u0027s like the native URL constructor, it might normalize, and then this is not a problem). If it can indeed return such characters, we could use `new Intl.Collator(\u0027en\u0027).compare(aURL, bURL)`.",
      "parentUuid": "852aaee3_c73c4830",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f52963_967ac420",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-02T09:49:08Z",
      "side": 1,
      "message": "`Intl.Collator` does have the benefit of performance. I think I will change localeCompare to that. But do we want to set locale to \"en\", i.e. `new Intl.Collator(\u0027en\u0027)`?",
      "parentUuid": "0e4f4f1e_8e3036e2",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f1f0362_bcb0873f",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-02T10:05:05Z",
      "side": 1,
      "message": "It seems like providing a \"locale\" to the constructor of `Intl.Collator` only acts as a recommendation, and not forcing it. We can also add the option of `{ localeMatcher: \"best fit\"}` to let the Collator choose the best one, with our given locale as a prioritized option. This is all pretty new to me, so WDYT about this?",
      "parentUuid": "50f52963_967ac420",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8da920b2_871c7ec6",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-02T11:04:02Z",
      "side": 1,
      "message": "Since the DevTools UI is still in English for now, I\u0027m inclined to leave it as \u0027en\u0027 so it\u0027s at least internally consistent. We can tackle it as part of the l10n work. But Peter is the expert here: Peter, WDYT?\n\nBtw, have we confirmed that we actually need non-ASCII-safe comparison? If url() behaves like the native URL constructor, it normalizes, and then this is not a problem.",
      "parentUuid": "0f1f0362_bcb0873f",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1096e851_bb317d81",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-02T11:43:03Z",
      "side": 1,
      "message": "The user\u0027s locale might not match the language the urls themselves are written in so it\u0027s kind of tricky. I think just going with \u0027en\u0027 makes sense in that case.",
      "parentUuid": "8da920b2_871c7ec6",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0df9c78_1a1cea76",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-02T12:10:25Z",
      "side": 1,
      "message": "What\u0027s the difference between `new Intl.Collator(\u0027en\u0027).compare(aURL, bURL)` and `.localeCompare`?",
      "parentUuid": "1096e851_bb317d81",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3f8fdca_61675bbe",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-02T12:13:11Z",
      "side": 1,
      "message": "You can cache the collator instance and re-use it. .localeCompare implicitly creates a new collator every time it\u0027s used. The same goes for other Intl.* APIs compared to their SomeJSBuiltin.prototype.* alternatives (e.g. toLocaleString).",
      "parentUuid": "b0df9c78_1a1cea76",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1563f81b_71e8be9b",
        "filename": "front_end/network/NetworkDataGridNode.js",
        "patchSetId": 1
      },
      "lineNbr": 696,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-02T12:16:22Z",
      "side": 1,
      "message": "I have verified that `.url()` returns encoded URL. E.g., `http://ko.wikipedia.org/wiki/ìœ„í‚¤ë°±ê³¼:ëŒ€ë¬¸` becomes `http://ko.wikipedia.org/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EB%8C%80%EB%AC%B8` in DevTools.",
      "parentUuid": "b3f8fdca_61675bbe",
      "revId": "d1ffb266e3f2cae4874016b57913fa333db8a4c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}