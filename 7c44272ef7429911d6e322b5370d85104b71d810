{
  "comments": [
    {
      "key": {
        "uuid": "570c7a1d_e0c434af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T14:09:49Z",
      "side": 1,
      "message": "LGTM, thanks for addressing this issue!",
      "revId": "7c44272ef7429911d6e322b5370d85104b71d810",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2f04b33_34acf2f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-19T16:47:01Z",
      "side": 1,
      "message": "LGTM with nit.\n\nI do have a comment about follow up work to account for margins/flipping labels when we are in vertical mode, but since this is already fairly large, I\u0027m leaning towards a follow up change",
      "revId": "7c44272ef7429911d6e322b5370d85104b71d810",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2e04456_95d0562e",
        "filename": "front_end/inspector_overlay/css_grid_label_helpers.js",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-19T16:47:01Z",
      "side": 1,
      "message": "nit, I think optional primitives are marked with \u003d signs at the end: `{string\u003d}`",
      "range": {
        "startLine": 335,
        "startChar": 11,
        "endLine": 335,
        "endChar": 17
      },
      "revId": "7c44272ef7429911d6e322b5370d85104b71d810",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f9e4eea_786e63bb",
        "filename": "front_end/inspector_overlay/css_grid_label_helpers.js",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-19T16:47:01Z",
      "side": 1,
      "message": "I realize this logic (and in other label placement functions) will need to be updated to account for columns becoming \"rows\" and vice versa when checking margins. From your vertical example:\n\nhttps://imgur.com/k5uXjus\n\nNot sure if how complicated it would be to tackle this in this CL. I\u0027d be ok with a follow up as long as a TODO/crbug is listed somewhere",
      "range": {
        "startLine": 348,
        "startChar": 4,
        "endLine": 348,
        "endChar": 109
      },
      "revId": "7c44272ef7429911d6e322b5370d85104b71d810",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b42f30d_33cabd7d",
        "filename": "front_end/inspector_overlay/css_grid_label_helpers.js",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-20T12:00:36Z",
      "side": 1,
      "message": "I\u0027m doing a few changes to the code to make this work better in this CL.\nHowever, while most cases should be handled, there will still be one remaining issue where line name labels may not flip to the inside of the grid when they should.\nI\u0027m going to do this in another CL because this is an issue that already exists today. We only compare if the label x/y is not within the page margin area (20px). We did this because for line numbers it was enough as those labels are never wider than some maximum value.\nFor line names, we should update this to also take into account the label width and height, but we should do this whether or not a vertical writing mode is in effect.",
      "parentUuid": "0f9e4eea_786e63bb",
      "range": {
        "startLine": 348,
        "startChar": 4,
        "endLine": 348,
        "endChar": 109
      },
      "revId": "7c44272ef7429911d6e322b5370d85104b71d810",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cb984c3_9022b9a4",
        "filename": "front_end/inspector_overlay/css_grid_label_helpers.js",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-08-20T13:13:23Z",
      "side": 1,
      "message": "I ended up fixing all remaining cases in the last patchset. I started abstracting away most of the distance comparisons we are doing in the codebase, and that allowed to fix the remaining issues easily.\n\nIn this patchset, I\u0027m reusing the CSS grid/flex vocabulary for naming the direction in which content flows \"logically\": I\u0027m using the words cross and main. This avoids having to refer to the x and y axis or the canvas width and height. Instead we now refer to the logical main and cross direction and axes,.\n\nFor example: in standard mode, the main axis is x, and goes from left to right. And the cross axis is vertical, from top to bottom.\nIn vertical-rl, the cross axis is horizontal, and goes from right to left, whereis it goes from left to right in vertical-lr mode.",
      "parentUuid": "2b42f30d_33cabd7d",
      "range": {
        "startLine": 348,
        "startChar": 4,
        "endLine": 348,
        "endChar": 109
      },
      "revId": "7c44272ef7429911d6e322b5370d85104b71d810",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}