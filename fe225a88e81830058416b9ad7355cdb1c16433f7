{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "38e46625_67d37adc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-12-04T14:11:02Z",
      "side": 1,
      "message": "INFRA LGTM",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08635aca_c161f87b",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 676,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-12-07T09:46:42Z",
      "side": 1,
      "message": "Below, this is filled with `BreakpointId`s. Would breakpointIds be a better name? (Could also use the BreakpointId type)",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34a0d7ec_641f932c",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 676,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08635aca_c161f87b",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07afeac9_9735cbef",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 744,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-12-04T15:58:36Z",
      "side": 1,
      "message": "You should be able to ask the plugin manager here, i.e.\n\n```\nconst {pluginManager} \u003d DebuggerWorkspaceBinding.instance();\nif (pluginManager) {\n  debuggerLocations \u003d await pluginManager.uiLocationToRawLocationRanges(...);\n  // ....\n}\n```",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4330b285_515aef0e",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 744,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-04T16:41:32Z",
      "side": 1,
      "message": "Merging is still required. This gets me a breakpoint at every column, so I get 8 breakpoints from my twice inlined function with four inline locations, and I only want two.",
      "parentUuid": "07afeac9_9735cbef",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6f4cbae_44a5cae3",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 744,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-12-04T18:49:17Z",
      "side": 1,
      "message": "Pass undefined here if columnNumber is absent.",
      "parentUuid": "4330b285_515aef0e",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "089aadfb_640f941c",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 744,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c6f4cbae_44a5cae3",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a0de736_87e4514d",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 804,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-12-07T09:46:42Z",
      "side": 1,
      "message": "`const {url, scriptId, scriptHash} \u003d newState` would be simpler.",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e5d986_525c6e4c",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 804,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Good call, done.",
      "parentUuid": "9a0de736_87e4514d",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7665f09a_4da441a1",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 807,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-12-07T09:46:42Z",
      "side": 1,
      "message": "If you declare this as `!Promise\u003c...\u003e`, does typescript understand that it\u0027s not undefined?",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04ed3789_09a7d8f8",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 807,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Actually it appears the code would fail if neither branch of the if/else if were hit. Fixed.",
      "parentUuid": "7665f09a_4da441a1",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "868bc546_4fe5d150",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 990,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-12-07T09:46:42Z",
      "side": 1,
      "message": "Are `positions` ordered?",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30cd0013_a00f5305",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 990,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Ooh, good question. I\u0027m assuming that uiLocationToRawLocationRanges will return them in the same order every time, so it shouldn\u0027t cause problems to make this order dependent. Worst case we think the breakpoint has been changed when it hasn\u0027t and we remove and re-add it.",
      "parentUuid": "868bc546_4fe5d150",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4374d9e8_b426fe64",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-04T12:42:50Z",
      "side": 1,
      "message": "I\u0027m not sure how to add the Workspace.UISourceCode.UISourceCode type here without creating an import cycle.",
      "range": {
        "startLine": 397,
        "startChar": 5,
        "endLine": 397,
        "endChar": 30
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbdb5f59_a98e49d5",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-12-04T14:11:02Z",
      "side": 1,
      "message": "FYI `any` is technically not part of JSDoc, but is supported by TypeScript specifically. The universally supported JSDoc notation for any type would be `*`.",
      "range": {
        "startLine": 397,
        "startChar": 13,
        "endLine": 397,
        "endChar": 16
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f442206_d8285fc0",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 402,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-12-04T13:18:22Z",
      "side": 1,
      "message": "I don\u0027t think you need to put this into DebuggerModel. The ranges returned from sourceLocationToRawLocations are already merged according to the DWARF, and you don\u0027t need to merge them further int the front-end (actually if you do, you cross statement boundaries).",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb0b0a33_1aaa66d6",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 402,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-04T15:54:28Z",
      "side": 1,
      "message": "If I don\u0027t do it here, I can\u0027t make the change only happen for when we use the plugin. If we\u0027re getting multiple raw locations in non-plugin scenarios we will set multiple breakpoints.",
      "parentUuid": "9f442206_d8285fc0",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c6b084b_673aa6c9",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 402,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-12-04T18:49:17Z",
      "side": 1,
      "message": "This also doesn\u0027t preserve undefined for columnNumber.",
      "parentUuid": "eb0b0a33_1aaa66d6",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c082e3a3_0de25f72",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 402,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3c6b084b_673aa6c9",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e0b187c_47037754",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 407,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-12-04T14:11:02Z",
      "side": 1,
      "message": "Please add the reasoning for ignoring any type errors on this and what would need to happen to make it pass the type-checker. Ideally we don\u0027t introduce any new `@ts-ignore` statements.",
      "range": {
        "startLine": 407,
        "startChar": 12,
        "endLine": 407,
        "endChar": 25
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00d68ea9_8c2e8fbf",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 407,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-07T11:10:00Z",
      "side": 1,
      "message": "Ack. All changes to this file are reverted now which takes care of the TS issues!",
      "parentUuid": "5e0b187c_47037754",
      "range": {
        "startLine": 407,
        "startChar": 12,
        "endLine": 407,
        "endChar": 25
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}