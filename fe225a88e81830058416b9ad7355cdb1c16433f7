{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "38e46625_67d37adc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-12-04T14:11:02Z",
      "side": 1,
      "message": "INFRA LGTM",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07afeac9_9735cbef",
        "filename": "front_end/bindings/BreakpointManager.js",
        "patchSetId": 5
      },
      "lineNbr": 744,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-12-04T15:58:36Z",
      "side": 1,
      "message": "You should be able to ask the plugin manager here, i.e.\n\n```\nconst {pluginManager} \u003d DebuggerWorkspaceBinding.instance();\nif (pluginManager) {\n  debuggerLocations \u003d await pluginManager.uiLocationToRawLocationRanges(...);\n  // ....\n}\n```",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4374d9e8_b426fe64",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-04T12:42:50Z",
      "side": 1,
      "message": "I\u0027m not sure how to add the Workspace.UISourceCode.UISourceCode type here without creating an import cycle.",
      "range": {
        "startLine": 397,
        "startChar": 5,
        "endLine": 397,
        "endChar": 30
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbdb5f59_a98e49d5",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-12-04T14:11:02Z",
      "side": 1,
      "message": "FYI `any` is technically not part of JSDoc, but is supported by TypeScript specifically. The universally supported JSDoc notation for any type would be `*`.",
      "range": {
        "startLine": 397,
        "startChar": 13,
        "endLine": 397,
        "endChar": 16
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f442206_d8285fc0",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 402,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-12-04T13:18:22Z",
      "side": 1,
      "message": "I don\u0027t think you need to put this into DebuggerModel. The ranges returned from sourceLocationToRawLocations are already merged according to the DWARF, and you don\u0027t need to merge them further int the front-end (actually if you do, you cross statement boundaries).",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb0b0a33_1aaa66d6",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 402,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-12-04T15:54:28Z",
      "side": 1,
      "message": "If I don\u0027t do it here, I can\u0027t make the change only happen for when we use the plugin. If we\u0027re getting multiple raw locations in non-plugin scenarios we will set multiple breakpoints.",
      "parentUuid": "9f442206_d8285fc0",
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e0b187c_47037754",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 5
      },
      "lineNbr": 407,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-12-04T14:11:02Z",
      "side": 1,
      "message": "Please add the reasoning for ignoring any type errors on this and what would need to happen to make it pass the type-checker. Ideally we don\u0027t introduce any new `@ts-ignore` statements.",
      "range": {
        "startLine": 407,
        "startChar": 12,
        "endLine": 407,
        "endChar": 25
      },
      "revId": "fe225a88e81830058416b9ad7355cdb1c16433f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}