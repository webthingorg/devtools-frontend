{
  "comments": [
    {
      "key": {
        "uuid": "629adc1c_51d44049",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 21,
      "author": {
        "id": 1385752
      },
      "writtenOn": "2020-08-07T17:40:55Z",
      "side": 1,
      "message": "These two screenshots need to be updated, as the toggle button is gone.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 25
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbbe3422_c44ababb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1385752
      },
      "writtenOn": "2020-08-07T07:34:05Z",
      "side": 1,
      "message": "PTAL while I am working on e2e tests. ",
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cede05b_f765597c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T18:55:40Z",
      "side": 1,
      "message": "Still going through the code, but It looks like there is some sort of issue with the \"scale\" parameter that gets passed through the Emulation Params when returning to single screen mode. If you set the scale to 80% and toggle back to single screen, the window segment that gets created takes up only 80% of the viewport:\n\nhttps://imgur.com/W4q9GTU\n\nThis is the code I was using to test:\n\n  \u003cdiv id\u003d\"app\"\u003e\u003cdiv\u003e\n  \u003cscript\u003e\n    function createLayoutSegments () {\n      app.innerHTML \u003d \u0027\u0027;\n      if (window.getWindowSegments) {\n        window.getWindowSegments().forEach(segment \u003d\u003e {\n        let element \u003d document.createElement(\u0027div\u0027);\n        element.style.background \u003d \"#\" + Math.floor(Math.random()*16777215).toString(16);\n        element.style.position \u003d \u0027absolute\u0027\n        element.style.top \u003d segment.top + \u0027px\u0027;\n        element.style.left \u003d segment.left + \u0027px\u0027;\n        element.style.width \u003d segment.width + 1  + \u0027px\u0027;\n        element.style.height \u003d segment.height + 1  + \u0027px\u0027;\n        app.appendChild(element);\n      });\n      }\n    }\n    setInterval(createLayoutSegments, 2000);\n  \u003c/script\u003e",
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "744bc636_f2165d95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "couple more comments",
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45351e24_2f68cd87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1385752
      },
      "writtenOn": "2020-08-12T21:00:07Z",
      "side": 1,
      "message": "The issue can be reproduced without my change on canary: set scale factor to like 75%, and in the console window, call window.getWindowSegments(). We shall see it report scaled values. Platform team is working on a fix. So I will proceed to address your other comments here.",
      "parentUuid": "9cede05b_f765597c",
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e77db05_96667192",
        "filename": "front_end/emulation/DeviceModeModel.js",
        "patchSetId": 14
      },
      "lineNbr": 716,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "not sure if this is causing the problem I mentioned in my last round of comments",
      "range": {
        "startLine": 711,
        "startChar": 6,
        "endLine": 716,
        "endChar": 7
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84e027be_e81c37ee",
        "filename": "front_end/emulation/DeviceModeModel.js",
        "patchSetId": 14
      },
      "lineNbr": 810,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "I\u0027m a bit confused why we keep falsy checking this? wouldn\u0027t this be the same as writing\ndeviceMetrics.displayFeature \u003d this._getDisplayFeature();\n\nsame for most places",
      "range": {
        "startLine": 807,
        "startChar": 6,
        "endLine": 810,
        "endChar": 7
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf657663_c516d4e1",
        "filename": "front_end/emulation/DeviceModeModel.js",
        "patchSetId": 14
      },
      "lineNbr": 883,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "nit: can do \ncase Horizontal:\ndefault\n  return Protocol.Emulation.DisplayFeatureOrientation.Horizontal;",
      "range": {
        "startLine": 881,
        "startChar": 7,
        "endLine": 883,
        "endChar": 13
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fee7b907_c4ab5eeb",
        "filename": "front_end/emulation/DeviceModeModel.js",
        "patchSetId": 14
      },
      "lineNbr": 891,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "this can just be `function getOffset()`",
      "range": {
        "startLine": 891,
        "startChar": 5,
        "endLine": 891,
        "endChar": 30
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c69a3e32_1427a924",
        "filename": "front_end/emulation/DeviceModeModel.js",
        "patchSetId": 14
      },
      "lineNbr": 909,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "I think you don\u0027t need these functions. Below you ensure that the orientation is either VerticalSpanned or HorizontalSpanned, so you would never return 0 here;\n\nI would remove and write your return object as:\nreturn {\n      orientation: this._getDisplayFeatureOrientation(),\n      offset: this._mode.orientation \u003d\u003d\u003d VerticalSpanned ? orientation.hinge.x : orientation.hinge.y\n      maskLength: \u003csame kind of thing here\u003e\n    };",
      "range": {
        "startLine": 892,
        "startChar": 6,
        "endLine": 909,
        "endChar": 6
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9f0ede1_6fa0ca6c",
        "filename": "front_end/emulation/DeviceModeToolbar.js",
        "patchSetId": 14
      },
      "lineNbr": 242,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "nit: maybe we should wrap Experimental Web Platform in quotes so users know it is the name of the flag instead of a generic description",
      "range": {
        "startLine": 242,
        "startChar": 34,
        "endLine": 242,
        "endChar": 68
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17ffa6cd_c67a1d2c",
        "filename": "front_end/emulation/DeviceModeToolbar.js",
        "patchSetId": 14
      },
      "lineNbr": 670,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T19:11:23Z",
      "side": 1,
      "message": "nit: same here",
      "range": {
        "startLine": 670,
        "startChar": 38,
        "endLine": 670,
        "endChar": 66
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd214a78_b9980f96",
        "filename": "front_end/emulation/module.json",
        "patchSetId": 14
      },
      "lineNbr": 321,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2020-08-07T18:55:40Z",
      "side": 1,
      "message": "nit: was this done by presubmit?",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 321,
        "endChar": 1
      },
      "revId": "d1b229aefd1aa83692c9a00759ac997033ef4fb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}