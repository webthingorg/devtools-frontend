{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3885dba2_d8737435",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-04-11T12:24:23Z",
      "side": 1,
      "message": "Can you take a look please? Thanks! üôè",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2bf641c_ca5aed69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-04-11T13:49:00Z",
      "side": 1,
      "message": "What\u0027s the update story here? When install-deps overwrites index.d.ts the person running in needs to reapply the patch?",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "509f4308_5c1e790d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-04-11T14:22:58Z",
      "side": 1,
      "message": "Yes, one has to manually restore the `index.d.ts`. This file hasn\u0027t changed for a long time, so that shouldn\u0027t really be a problem until we get the chances upstreamed.",
      "parentUuid": "b2bf641c_ca5aed69",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39aba024_e24bfa33",
        "filename": "front_end/models/breakpoints/BreakpointManager.test.ts",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-04-11T12:30:39Z",
      "side": 1,
      "message": "Why make the switch away from the asserting version?",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87336072_c4801741",
        "filename": "front_end/models/breakpoints/BreakpointManager.test.ts",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-04-11T12:36:14Z",
      "side": 1,
      "message": "Because otherwise the narrowed type of `modelBreakpoint.currentState` after the `assert.isNull()` and later `assertNotNullOrUndefined` is `never`.\n\nKnown limitation of TypeScript\u0027s current narrowing. üòä",
      "parentUuid": "39aba024_e24bfa33",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b066b28_173020a1",
        "filename": "front_end/ui/legacy/components/inline_editor/CSSLinearEasingModel.ts",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-04-11T12:30:39Z",
      "side": 1,
      "message": "this seems like an unrelated change?",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b74cc27f_f18b2357",
        "filename": "front_end/ui/legacy/components/inline_editor/CSSLinearEasingModel.ts",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-04-11T12:36:14Z",
      "side": 1,
      "message": "It\u0027s needed, because otherwise it doesn\u0027t fit the `type Constructor\u003cT\u003e`.",
      "parentUuid": "3b066b28_173020a1",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1b9cd37_1d3f035a",
        "filename": "front_end/ui/visual_logging/LoggingDriver.test.ts",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-04-11T12:30:39Z",
      "side": 1,
      "message": "Same as above, why use the non-asserting version?",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a6084a5_5d978fb5",
        "filename": "front_end/ui/visual_logging/LoggingDriver.test.ts",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2024-04-11T12:36:14Z",
      "side": 1,
      "message": "Same as for the other one.",
      "parentUuid": "a1b9cd37_1d3f035a",
      "revId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "59471d524519ce2e804be68985ad8d96abfe86a4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}