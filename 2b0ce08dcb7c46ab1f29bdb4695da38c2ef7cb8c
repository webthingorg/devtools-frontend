{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "41a29d3f_aa771068",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1610537
      },
      "writtenOn": "2024-06-17T17:31:31Z",
      "side": 1,
      "message": "Hey Paul, I updated the CL to reflect our discussions on trace exporting format. Thanks!",
      "revId": "2b0ce08dcb7c46ab1f29bdb4695da38c2ef7cb8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c20026_28ac9e52",
        "filename": "front_end/panels/timeline/EnhancedTraces.ts",
        "patchSetId": 11
      },
      "lineNbr": 5,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-06-17T23:27:37Z",
      "side": 1,
      "message": "Thanks so much for the trace format adjustments. I\u0027m feeling great about the direction.\n\n------\n\nIf you\u0027re up for it, it\u0027d be much more idiomatic for file to move into the TraceEngine as a handler.\nYou could look at WorkersHandler for reference. It has some general similarities.\n\nAdoption the conventions there will also end up resolving my other concerns; namely that in this file, we\u0027re looping over the entire trace array multiple times, but it\u0027d be faster to loop once and pull out the relevant data within that one loop.\n\nSo.. I\u0027m thinking it\u0027d be something along the lines of…\n\nWithin `handleEvent()`...\n\nif (isTraceEventTargetRundown()) { scriptToV8Context.set(…); targets.push(target);  execContexts.push(execContext); }\nif (isTraceEventScriptRundown()) { v8contextToExecContext.set(…); scripts.push(script);  }\nif (isTraceEventScriptRundownSource()) { setScriptSource(); setScriptLength(); }\n\nAnd then within `finalize()`…\n\naddExecutionContextIdsToExecContexts();   \naddScriptSourcesToScripts();\n\n--------\n\nSomething along those lines?  (I\u0027m not at all prescribing those method names, just.. trying to capture the behavior. :)\n\nIn the end the `data()` of the handler will likely the ~same thing as what we have now…\n\n```ts\n{\nexecutionContexts: ExecutionContext[],\nscripts: Script[],\ntargets: Target[],\n}\n```\n\nand will be available from `traceParsedData.EnhancedTrace`.\n\n----\n\nHows that sound?\n\n(Apologies for delaying this side of the feedback!)",
      "revId": "2b0ce08dcb7c46ab1f29bdb4695da38c2ef7cb8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}