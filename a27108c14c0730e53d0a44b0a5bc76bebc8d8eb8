{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9a315d8e_abdb9297",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-06-28T12:37:22Z",
      "side": 1,
      "message": "Can we handle all the `any` type.\nfor example if some field is *really* an `any` type, and we can not support it, how should we deal it?\nBTW how about modify in the `browser_protocol.json` instead?",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 23
      },
      "revId": "a27108c14c0730e53d0a44b0a5bc76bebc8d8eb8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e4b885_734e16f0",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-06-28T12:41:56Z",
      "side": 1,
      "message": "The problem is that it actually really has any type : https://screenshot.googleplex.com/9SzdKsqfFRe4Vrm",
      "parentUuid": "9a315d8e_abdb9297",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 23
      },
      "revId": "a27108c14c0730e53d0a44b0a5bc76bebc8d8eb8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac41db5c_e5cf6e4b",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-06-29T04:38:34Z",
      "side": 1,
      "message": "Looking through https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/public/devtools_protocol/browser_protocol.pdl\n\nseems like there are a couple of fields that use \"any\". One nit though: Please don\u0027t reference \"browser_protocol.json\". It\u0027s generated. The source of truth is always \"browser_protocol.pdl\" even if we consume the JSON here.",
      "parentUuid": "a4e4b885_734e16f0",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 23
      },
      "revId": "a27108c14c0730e53d0a44b0a5bc76bebc8d8eb8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}