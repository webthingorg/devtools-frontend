{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e693a2a2_e1560c08",
        "filename": "front_end/panels/application/IndexedDBModel.ts",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1548739
      },
      "writtenOn": "2023-05-25T20:39:08Z",
      "side": 1,
      "message": "Why do you prefer splitting up the bucket into storage key and bucket name? Doesn\u0027t it seem cleaner to keep them together in a strongly typed object? As far as storage APIs are concerned, storage bucket is the new storage key.",
      "revId": "da2a286c2054945c1c6c5379c7f2e8bf886f28a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1d970d2_95ea2cfa",
        "filename": "front_end/panels/application/IndexedDBModel.ts",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-25T20:44:37Z",
      "side": 1,
      "message": "Mostly to avoid checking if bucket is present and if not, have a separate path for the storage key only. \n\nI didn\u0027t know that storage bucket is a \"new storage key\". Can it be applied everywhere where we have storage key currently? \n\nHow sure are we about the API? How plausible is it that we will have to revisit the fundamental concepts here?",
      "parentUuid": "e693a2a2_e1560c08",
      "revId": "da2a286c2054945c1c6c5379c7f2e8bf886f28a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fff624de_901af61a",
        "filename": "front_end/panels/application/IndexedDBModel.ts",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1548739
      },
      "writtenOn": "2023-05-25T21:26:08Z",
      "side": 1,
      "message": "According to the spec (https://storage.spec.whatwg.org/#buckets), \"a storage bucket is a place for storage endpoints to store data.\" So we\u0027ve already been storing it in the default bucket, but our changes let you store it in non-default buckets. So as far as I understand, the default bucket (which in CDP is a thin wrapper of just the storage key) is equivalent to how the storage key is used now. But not certain about that since I don\u0027t know where all storage key is used.\n\nAlso not all storage endpoints can be in non default buckets. So if you were to update the CDP for local or session storage to use buckets, you\u0027d have to sendFailure anytime someone uses a non default bucket.\n\nI don\u0027t know the answer to us revisiting the fundamental concepts. But maybe buckets having been in the storage spec for some years (and discussed even longer https://github.com/whatwg/storage/issues/2) gives us some confidence? I\u0027m not sure.",
      "parentUuid": "c1d970d2_95ea2cfa",
      "revId": "da2a286c2054945c1c6c5379c7f2e8bf886f28a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "197cf6f7_7b2479dd",
        "filename": "front_end/panels/application/IndexedDBModel.ts",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-26T05:56:38Z",
      "side": 1,
      "message": "I\u0027m not feeling strongly but based on what you said, I\u0027d rather have bucket represented as an optional name next to the storage key, as opposed to the central opaque concept",
      "parentUuid": "fff624de_901af61a",
      "revId": "da2a286c2054945c1c6c5379c7f2e8bf886f28a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f17d7e13_39ecb255",
        "filename": "front_end/panels/application/IndexedDBModel.ts",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1548739
      },
      "writtenOn": "2023-05-26T18:43:59Z",
      "side": 1,
      "message": "I do think that it makes sense to at least \"think in buckets\" for IndexedDB, Cache Storage, and OPFS since at no point do they deal only with the storage key and not the bucket. I won\u0027t push back too much on this because ultimately we just want developers to be thinking of it as a key concept when storing things. It\u0027s not too important that the devtools code reflects that although I think it would be cleaner.\n\nThe only other things I\u0027ll add is I have a follow up CL (https://chromium-review.googlesource.com/c/chromium/src/+/4443312) to remove storage key and origin params from CDP for the storage APIs that support non default buckets. And that I hope that the code is bucket centric enough that if we wanted to show what\u0027s stored in each bucket, we could do so in the future.",
      "parentUuid": "197cf6f7_7b2479dd",
      "revId": "da2a286c2054945c1c6c5379c7f2e8bf886f28a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50864077_55694ba6",
        "filename": "front_end/panels/application/IndexedDBModel.ts",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-26T21:08:29Z",
      "side": 1,
      "message": "Fair enough. I brought back the storageBucket to the DatabaseId, but also removed storageKey as a separate member to avoid confusion.",
      "parentUuid": "f17d7e13_39ecb255",
      "revId": "da2a286c2054945c1c6c5379c7f2e8bf886f28a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}