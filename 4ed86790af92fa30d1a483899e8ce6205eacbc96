{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "df3971b2_e19acd04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T09:49:15Z",
      "side": 1,
      "message": "Some inline comments,  but two highlevel discussion point:\n\nAre we really sure normalizing all colors to rgb is fine? My main worry is numerical stability and that we have to remember to legalize values whenever we go to true sRGB.\n\nI\u0027m also wondering if it would be beneficial to have more structure after parsing. For example, keeping properly tokenized strings around we could show precise out-of-range errors or retain the distinction between `none` and 0 for printing (especially when colors don\u0027t have an original text).",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "796e94d8_02b9fc64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:19:15Z",
      "side": 1,
      "message": "I\u0027ve added a lot of comments but they are mostly for continuation of the discussions in the comments :)",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "435afc59_59316f22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:19:15Z",
      "side": 1,
      "message": "I think it is okay, since, AFAIU, the operations we do are reversible. i.e. going from one space to another space and back does not lose the value of the real color.\n\nI\u0027m not sure how the limits of `sRGB` is known but there is also `extended sRGB` which is essentially the same color space with `sRGB` with values can be greater than 1 or 0. So, essentially, internally we\u0027re holding values in `extended sRGB`.\n\n---\n\nFor the second question, I think I\u0027d prefer to wait for a use case to come for that issue and then do it. For now, I\u0027d prefer to only play well with how the `Color` works and what kind of contract it provides to its users.\n\nWDYT? (about both ðŸ˜‚)",
      "parentUuid": "df3971b2_e19acd04",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb792aaf_b750bba2",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T09:49:15Z",
      "side": 1,
      "message": "Could put it into parse(). \n\nDoes this need to be a helper at all? As is it\u0027s 1 letter shorter than the actual check, and it\u0027s longer if you write it as `\u003e -1` which is what the \"legacy\" cases do (if you keep it, the those cases should also call the helper).",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faa6d858_c5653475",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T09:59:04Z",
      "side": 1,
      "message": "How about core/platform/array-utilities.ts?",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65f70ebe_b852becb",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:19:15Z",
      "side": 1,
      "message": "Moved it inside of the `parse()` function :)\n\nThe reason we need this is, this specicial functions are called typeguards (return is defined as \"arr is number[]\"). In here, we make sure that given `arr` can contain `number` or `null` but we return true iff array does not contain `null`.\n\nThis helps TS compiler to make sure that after this point, `arr` is actually a `number[]` without an explicit type assertion. We\u0027re using this in checking whether `parameters` in `parse` contains null or not. Since we bail out from the case that they contain `null`. TS compiler directly understands that, after that point, `parameters` is typed as `number[]` so we won\u0027t need to do explicit type assertion while reaching out to specific indexes of the parameters array.\n\nOtherwise we\u0027ll need to do smt like `parameters[0] as number` at each step.\n\nHere is more documentation about type guards in TS: https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates\n\nWDYT? :)",
      "parentUuid": "bb792aaf_b750bba2",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "660d38a1_777ed483",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T10:30:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "65f70ebe_b852becb",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfff6d36_dd01b292",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:36:38Z",
      "side": 1,
      "message": "Sounds very good, moved it here and updated the types a bit to accept more generic arrays. Thanks, I didn\u0027t know that place existed ðŸ˜‚",
      "parentUuid": "faa6d858_c5653475",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c66f7959_1fcd5ce9",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T09:49:15Z",
      "side": 1,
      "message": "Should this be on Color? It fulfills the same roll as parseAsNumberOrPercentage for example.",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5458ee2_5ef6a821",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T09:59:04Z",
      "side": 1,
      "message": "Could we:\n1. merge this code with ui/legacy/components/inline_editor/CSSAngleUtils.ts, ui/legacy/Geometry.ts, and core/common/ColorConverter.ts (for its degToRad, radToDeg functions)?\n2. put them in a place where all the call sites can use?\n\npossibly in a separate CL, but now we basically have multiple copies of very similar angle-parsing/converting logic.",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2f6d80_353a5c85",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:19:15Z",
      "side": 1,
      "message": "I\u0027m a bit reluctant to add more static methods to `Color` class since they don\u0027t have a distinction between `private` and `public` usages. I don\u0027t want this `parseAngle` utility to be used outside of this module, that\u0027s why I\u0027ve wanted to add it as a separate function.\n\nI\u0027m also thinking to update other functions/possibly the modules to provide a clear separation between what is internal to the module and what is in the module\u0027s public API.\n\nWDYT?",
      "parentUuid": "c66f7959_1fcd5ce9",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "687317ff_8bad2a3c",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T10:30:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9c2f6d80_353a5c85",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "845103c4_9e4315cb",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:36:38Z",
      "side": 1,
      "message": "This sounds very good, I\u0027ll do this in a separate CL. AFAIU our `CSSAngleUtils` contains the same functionality so I\u0027m thinking to:\n* Move it to `common/`\n* Use it in these 3 places.\n\nWDYT?",
      "parentUuid": "e5458ee2_5ef6a821",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfd06c43_ee8bd1cb",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T10:43:08Z",
      "side": 1,
      "message": "SGTM!",
      "parentUuid": "845103c4_9e4315cb",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1bf1a01_7630a670",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T09:59:04Z",
      "side": 1,
      "message": "It seems like we have two different naming conventions: `sRGB` vs. `srgb`, which is used multiple times below. Should we be consistent?",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34b04186_91e1f53c",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:36:38Z",
      "side": 1,
      "message": "Sounds good! Updated it to be `srgb` :)",
      "parentUuid": "c1bf1a01_7630a670",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1c5e15b_fe65c612",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T09:49:15Z",
      "side": 1,
      "message": "Here and all other parsePercentOrNumber uses:\nI think range validation or fitting is required. Some parameters need to be clamped, some can be unbounded, some can be negative, some cannot be negative. The L in this instance here for example needs to be clamped to [0%, 100%].",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ecb0d57_b8ffde66",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:19:15Z",
      "side": 1,
      "message": "I\u0027m currently trying to think whether we should do this or not. I\u0027ve conflicted ideas for both:\n\n* Chromium parses syntax with out of range values correctly (for example, `lch(900 250 500.1)` is parsed correctly and a color is shown) and handle them internally (don\u0027t know how). So, I\u0027m not sure if we should try to do something in here, then possibly get conflicts with the browser.\n\n* Maybe it would be cool to have some assertion that these numbers are always between 0 - 1 but I\u0027m not able to think of a use case for this or how the otherwise can be a problem.\n\n\nSo, I\u0027m a bit on the side of not clamping and trying to map to `[0 - 100]` range with possible out of range values. For example, `120%` is also handled correctly in the browser.\n\nWDYT?",
      "parentUuid": "a1c5e15b_fe65c612",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b28b3ebd_2070abae",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T10:30:57Z",
      "side": 1,
      "message": "I expect chromium will clamp the values as spec\u0027ed, so if we don\u0027t do this we\u0027ll end up showing incorrect colors, won\u0027t we?",
      "parentUuid": "1ecb0d57_b8ffde66",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50f65f1b_e1109e31",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:36:38Z",
      "side": 1,
      "message": "I think we\u0027re fine with showing incorrect colors since they are incorrect by the spec but correct (or meaningful) by the browser. Do you have a case where this can be an issue?",
      "parentUuid": "b28b3ebd_2070abae",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3bc0c0a_46312f13",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 468,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T09:59:04Z",
      "side": 1,
      "message": "How would these values have \u0027none\u0027? Could you give an example for this please?",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2be7d06_524eb4a1",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 468,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:36:38Z",
      "side": 1,
      "message": "This is a valid syntax: `color(xyz none none none)` or `color(display-p3 1 none 1)`. It can be that user defined the colors this way.\n\nSpec also mentions how this can be in some other ways as well but I\u0027m not able to give examples for them. See the spec: https://www.w3.org/TR/css-color-4/#missing\n\nWDYT?",
      "parentUuid": "b3bc0c0a_46312f13",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73495aa6_001f2d17",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 468,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T10:43:08Z",
      "side": 1,
      "message": "oh I didn\u0027t realize that. Then it\u0027s a valid if condition then.",
      "parentUuid": "c2be7d06_524eb4a1",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d98a9df_9de1a99e",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 1057,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-28T09:49:15Z",
      "side": 1,
      "message": "What not make it a const enum now?",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e30b7e7c_fc436cbf",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 5
      },
      "lineNbr": 1057,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:19:15Z",
      "side": 1,
      "message": "We\u0027re not able to iterate on the values of the `const enums`, they don\u0027t allow `Object.values(ColorSpace)` for example.\n\nThough I\u0027ve want to do it... So, instead of finding a solution to that problem (that also exists for Format enum) I\u0027ve wanted to postpone it to a later TODO.\n\nWDYT?",
      "parentUuid": "5d98a9df_9de1a99e",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d9746b0_ac1cba0b",
        "filename": "front_end/panels/sources/CSSPlugin.ts",
        "patchSetId": 5
      },
      "lineNbr": 322,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-11-28T09:59:04Z",
      "side": 1,
      "message": "Is this comment still true, now that we support wide gamut?",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f8a4119_a1166099",
        "filename": "front_end/panels/sources/CSSPlugin.ts",
        "patchSetId": 5
      },
      "lineNbr": 322,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-28T10:36:38Z",
      "side": 1,
      "message": "Good catch! Removed it :)",
      "parentUuid": "1d9746b0_ac1cba0b",
      "revId": "4ed86790af92fa30d1a483899e8ce6205eacbc96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}