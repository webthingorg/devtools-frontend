{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dfacff5f_b92650ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-09-21T09:52:03Z",
      "side": 1,
      "message": "Simon do you want to take a look as well?",
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38df7079_ca94628d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-09-25T05:42:34Z",
      "side": 1,
      "message": "lgtm with comments",
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cccce9c9_d1f2e683",
        "filename": "front_end/legacy_test_runner/elements_test_runner/ElementsTestRunner.js",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-09-25T05:42:34Z",
      "side": 1,
      "message": "nit: We should mirror the code in `front_end` and call the import `Elements` as well.",
      "range": {
        "startLine": 6,
        "startChar": 12,
        "endLine": 6,
        "endChar": 26
      },
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ce1dc69_cd10357d",
        "filename": "front_end/legacy_test_runner/test_runner/TestRunner.js",
        "patchSetId": 7
      },
      "lineNbr": 304,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-09-25T05:42:34Z",
      "side": 1,
      "message": "Ideally all calls to `loadLegacyModule(\u0027elements\u0027)` should be updated in the respective layout tests, and the entry in the mappings map removed.",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 304,
        "endChar": 3
      },
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d661e8a8_5c4a4652",
        "filename": "front_end/legacy_test_runner/test_runner/TestRunner.js",
        "patchSetId": 7
      },
      "lineNbr": 304,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-09-25T07:39:58Z",
      "side": 1,
      "message": "I don\u0027t disagree! I saw however that that\u0027s a huge change and can only be done after all globals uses for a specific module are gone. (I did remove all globals for elements in on CL and could have included that change, but the CL had already landed before I realized that\u0027s what I had to do).\n\nMy thinking here was by updating the mapping we can make loadLegacyModule a noop from within devtools, together with removal of the legacy module, and then clean up all the remaining loadLegacyModule calls in one giant chromium CL.",
      "parentUuid": "1ce1dc69_cd10357d",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 304,
        "endChar": 3
      },
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "755ef436_d2acaa06",
        "filename": "front_end/legacy_test_runner/test_runner/TestRunner.js",
        "patchSetId": 7
      },
      "lineNbr": 304,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-09-25T07:45:20Z",
      "side": 1,
      "message": "You also can only turn this call into a no-op after all the globals of that module are gone xD (btw some loadLegacyModule calls might be superfluous as the \"integrated_test_runner.html\" loads them by default).\n\nBut I\u0027m fine with this change if it makes dealing with `elements` easier.",
      "parentUuid": "d661e8a8_5c4a4652",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 304,
        "endChar": 3
      },
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cc05bb2_df9c5ee9",
        "filename": "front_end/legacy_test_runner/test_runner/TestRunner.js",
        "patchSetId": 7
      },
      "lineNbr": 304,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-09-25T07:59:11Z",
      "side": 1,
      "message": "\u003e You also can only turn this call into a no-op after all the globals of that module are gone xD (btw some loadLegacyModule calls might be superfluous as the \"integrated_test_runner.html\" loads them by default).\nYes, absolutely, same as removing the -legacy.ts file :) I rather meant, if we follow the per-global workflow in general, the loadLegacyModule calls can only be removed after all globals are done (at least within the file). So we mostly have to touch all the files again after all the CLs are done. Not a big issue, just felt a bit noisy :)\n\n\u003e But I\u0027m fine with this change if it makes dealing with `elements` easier.",
      "parentUuid": "755ef436_d2acaa06",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 304,
        "endChar": 3
      },
      "revId": "6412ea3551e2de7e4f9490219c83e5fccf5e0b2d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}