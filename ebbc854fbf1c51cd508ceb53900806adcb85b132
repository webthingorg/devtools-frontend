{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d260fcd4_fcf9e8eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "Thanks for the changes, Nancy!",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31f49aae_a828eb67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-24T14:33:52Z",
      "side": 1,
      "message": "I would prefer not to make an API change of an abstract method if only 1 of the child classes actually implements it. Can we instead change the 1 instance where we need to add the icon to manually construct it, outside of `renderItem`? We can maybe design an API that would allow us to retrieve the `uiSourceCode` separately and then render that in the `wrapperElement`?",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebfba98f_da6e7b37",
        "filename": "front_end/panels/network/utils/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-24T14:33:52Z",
      "side": 1,
      "message": "This should be a relative path, to make sure it works both in a standalone project and in Chromium. E.g. `../../sources:*`",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0aaf6c90_2b429167",
        "filename": "front_end/panels/network/utils/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebfba98f_da6e7b37",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 24
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad62434d_d0302fc6",
        "filename": "front_end/panels/snippets/SnippetsQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "I don\u0027t see a reason for why the parameters here should be prefixed with an underscore, am I missing something? (I see that you have only adapted to the other naming, but I\u0027m wondering why this is like that to begin with)",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69733885_d3f9d32c",
        "filename": "front_end/panels/snippets/SnippetsQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "I\u0027m not sure, but I saw all the variables that \u0027unused\u0027 have an underscore, so I just learnt it.",
      "parentUuid": "ad62434d_d0302fc6",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02fd44f4_bd9fbf92",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-24T14:33:52Z",
      "side": 1,
      "message": "Many of the other implementations of this method don\u0027t use this `wrapperElement` (given the ignored added arguments in the other usages). Is there maybe an alternative solution that we can use to avoid having to change the method signature?",
      "range": {
        "startLine": 117,
        "startChar": 6,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ab7454a_a9c113ff",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02fd44f4_bd9fbf92",
      "range": {
        "startLine": 117,
        "startChar": 6,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7698cbb2_42682af4",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "This doesn\u0027t need to be conditional right? Since it\u0027s now only in FilteredUISourceCodeLIstProvider?",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3a25a8_9375385a",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-24T14:33:52Z",
      "side": 1,
      "message": "Why is this particular switch implemented as an abstract method rather than an argument to this method? E.g. I would have expected both `wrapperElement` and `shouldRenderIcon` to be methods, or both be arguments, but not one or the other.\n\nThat said, I wonder if we can somehow change the structure here so that we don\u0027t need to change the implementation of `renderItem` and instead put this bit of code in the user of `renderItem`. Since the only requirement here is retrieving the `uiSourceCode`, can we maybe extract that out in a new public method and retrieve that instead?",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 25
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "667859fe_8309fd6b",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:54:03Z",
      "side": 1,
      "message": "I don\u0027t think that we need this switch (this was part of the previous patch). So in the previous patch it was a method used by the user of this, and I requested it to be a parameter instead (but the current state contains both.\n\nA bit of context:\nSo before, Nancy had a function that was called `renderIcon` and one function that would render it. These two functions were added to the FilteredListWidget.\nSince these two methods were basically only used in `FilteredUISourceCodeListProvider` I asked if Nancy could change it to only be taken care of in the `FilteredUISourceCodeListProvider` (and to remove the two other functions).\n\nThe reasoning for me to add the `wrapperElement` to `renderItem` is that each Provider knows how to render its item that is shown in the list, and it feels as if the caller shouldn\u0027t know about that (how to render it). I agree though that now the wrapperElement is only used in the `FilteredUISourceCodeListProvider.ts`. So maybe we can find an alternative. WDYT?",
      "parentUuid": "ad3a25a8_9375385a",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 25
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0186d0ad_63d02470",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-24T15:06:54Z",
      "side": 1,
      "message": "Would it maybe be possible to only override `renderItem` in `OpenFileQuickOpen` and implement it using something along the lines of\n\n```\nrenderItem(itemIndex: number, query: string, titleElement: Element, subtitleElement: Element): void {\n  super.renderItem(itemIndex, query, titleElement, subtitleElement);\n  const iconElement \u003d new IconButton.Icon.Icon();\n  iconElement.data \u003d {\n    iconName: NetworkUtils.imageNameForResourceType(uiSourceCode.contentType()),\n    color: \u0027\u0027,\n    width: \u002718px\u0027,\n    height: \u002718px\u0027,\n  };\n  titleElement.parentElement?.insertBefore(titleElement, iconElement);\n}\n```\n\nE.g. we remove all other changes, but we only modify `OpenFileQuickOpen` and we augment its DOM with the iconElement. For this, we do somehow need to get hold of the `uiSourceCode`, but I think we can introduce a public API on `FilteredUISourceCodeListProvider` for that someway?",
      "parentUuid": "667859fe_8309fd6b",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 25
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cc590a3_62d47598",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-25T07:17:13Z",
      "side": 1,
      "message": "Hmm, I\u0027m not a huge fan of accessing a `parentElement` in order to add the component, as I think that it is very hidden (having side effects that are not visible from the API) and assumes that we have one, while the previous version was explicit in what it needs. But, on the other hand I don\u0027t have a better idea and this seems nicer than before (less unused parameters and no change in FilteredListWidget API) :D. So, LGTM!",
      "parentUuid": "0186d0ad_63d02470",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 25
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db399820_21dcad74",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7698cbb2_42682af4",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2618afa9_26b454d5",
        "filename": "front_end/panels/sources/FilteredUISourceCodeListProvider.ts",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done. Thanks Tim for the advice!",
      "parentUuid": "0186d0ad_63d02470",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 25
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b92086_964e1683",
        "filename": "front_end/panels/sources/OpenFileQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "I don\u0027t think we need this anymore, or? Since it\u0027s always true, and only in this file.",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "461b3587_fb6c0bea",
        "filename": "front_end/panels/sources/OpenFileQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3b92086_964e1683",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60f7860f_e71f0169",
        "filename": "front_end/ui/legacy/components/quick_open/FilteredListWidget.ts",
        "patchSetId": 3
      },
      "lineNbr": 555,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "I guess this is a left over? We do not need to declare it in FilteredListWidget right?",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b38fdc34_526b4177",
        "filename": "front_end/ui/legacy/components/quick_open/FilteredListWidget.ts",
        "patchSetId": 3
      },
      "lineNbr": 555,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60f7860f_e71f0169",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e11198e1_85406c66",
        "filename": "front_end/ui/legacy/components/quick_open/HelpQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "I can see that you have adapted the naming according to the other variables, but I do not see a reason to use underscore here. Should we change that to not using underscore at all in this function?",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8fd7d34_527d1b4d",
        "filename": "front_end/ui/legacy/components/quick_open/HelpQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e11198e1_85406c66",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "005df87f_0891ae6a",
        "filename": "front_end/ui/legacy/components/quick_open/HelpQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "Same here",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2993ce9d_d63d3536",
        "filename": "front_end/ui/legacy/components/quick_open/HelpQuickOpen.ts",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "005df87f_0891ae6a",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76b5db9f_cf5087f2",
        "filename": "front_end/ui/legacy/components/quick_open/QuickPick.ts",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "Same here.",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e414911f_3b27af8c",
        "filename": "front_end/ui/legacy/components/quick_open/QuickPick.ts",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76b5db9f_cf5087f2",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d000e6b_e0c0c10c",
        "filename": "front_end/ui/legacy/components/quick_open/filteredListWidget.css",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2021-08-24T14:33:39Z",
      "side": 1,
      "message": "Why is this commented out?",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "569bccfe_7a515070",
        "filename": "front_end/ui/legacy/components/quick_open/filteredListWidget.css",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d000e6b_e0c0c10c",
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f79fa26_693be8b4",
        "filename": "front_end/ui/legacy/components/quick_open/filteredListWidget.css",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-24T14:33:52Z",
      "side": 1,
      "message": "Ultra-nit: remove commented code",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 118,
        "endChar": 4
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a709a9e2_e5737ae7",
        "filename": "front_end/ui/legacy/components/quick_open/filteredListWidget.css",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2021-08-25T11:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f79fa26_693be8b4",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 118,
        "endChar": 4
      },
      "revId": "ebbc854fbf1c51cd508ceb53900806adcb85b132",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}