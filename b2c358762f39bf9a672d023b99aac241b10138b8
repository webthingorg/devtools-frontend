{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25566dd2_8c3b0f8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-07-08T08:15:03Z",
      "side": 1,
      "message": "I don\u0027t think this sentence makes sense - I don\u0027t know what you mean by \"Except of the overlays\" ?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 71
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09f7cd08_40ba280d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T08:37:32Z",
      "side": 1,
      "message": "Rephrased it ðŸ˜„",
      "parentUuid": "25566dd2_8c3b0f8d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 71
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c611332a_d872cccd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-07-08T08:15:03Z",
      "side": 1,
      "message": "through",
      "range": {
        "startLine": 12,
        "startChar": 86,
        "endLine": 12,
        "endChar": 93
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78933852_20b07b01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T08:37:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c611332a_d872cccd",
      "range": {
        "startLine": 12,
        "startChar": 86,
        "endLine": 12,
        "endChar": 93
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52757ff9_6981d2d7",
        "filename": "front_end/models/trace/types/File.ts",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-07-08T08:15:03Z",
      "side": 1,
      "message": "is this name outdated? Should this just be `Annotation` ?",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 40,
        "endChar": 22
      },
      "fixSuggestions": [
        {
          "fixId": "3a758b01_c0e3d6b4",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/models/trace/types/File.ts",
              "range": {
                "startLine": 40,
                "startChar": 0,
                "endLine": 41,
                "endChar": 0
              },
              "replacement": " * `Annotation` are the user-created annotations that are saved into the metadata.\n"
            }
          ]
        }
      ],
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9cc81e9_9abfb2c4",
        "filename": "front_end/models/trace/types/File.ts",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T08:37:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52757ff9_6981d2d7",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e0b2d20_8b040ca6",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-07-08T08:15:03Z",
      "side": 1,
      "message": "this map is called AnnotationToOverlay, suggesting it\u0027s Annotation \u003d\u003e Overlay,\nbut the type is Overlay \u003d\u003e Annotation.\n\n`annotationForOverlay` would make more sense I think as a name\n\nedit:\n\nI thought some more about this...I think this map needs to be the other way round and be Annotation \u003d\u003e Overlay. This is because:\n\n1. theoretically, we could have annotations that exist without overlays (if the user hides the overlays). Having the data structure of Overlay\u003d\u003eAnnotation does not allow for that.\n\n2. I would rather the data be structured as Data \u003d\u003e UI (e.g. we have data, which we use to create the UI). Whereas this map of UI \u003d\u003e Data feels backwards in my head.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 80
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b7928de_3eaaf95b",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T08:37:32Z",
      "side": 1,
      "message": "I agree `Annotation \u003d\u003e Overlay` would make more sense, however that way we would need to look for the Annotation in the map values when we need to delete of update it.\n\nAt the moment we only have deletion, which would not happen very often, but in the future we also need to add \u0027Update\u0027 event, which will be dispatched each time a new letter is typed/removed from the annotation. We need it to update the Sidebar accordingly.",
      "parentUuid": "9e0b2d20_8b040ca6",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 80
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcf4b36e_10c9cc39",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T08:40:29Z",
      "side": 1,
      "message": "Regarding hiding, do you think we would be deleting the object if the Annotation is hidden?\nWe can also handle hiding them in the UI and still keep it for when it is shown again.",
      "parentUuid": "9b7928de_3eaaf95b",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 80
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3484eb63_8fdee8f6",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-07-08T09:17:41Z",
      "side": 1,
      "message": "The current design for the overlays is that the object will be deleted and then recreated...but of course that could change.\n\nBut still, the point stands that hypothetically in the future we might have annotations which don\u0027t have overlays. We shouldn\u0027t encode a solution that means each annotation must have an overlay - which Overlay\u003d\u003eAnnotation does.\n\nIf we go Annotation\u003d\u003eOverlay, then I think we just need to change the order in which we update stuff when we get events. Rather than change the label of the overlay, then reflect that in the annotation, we do it the other way around. Update the data, which then causes the UI to update.\n\nIf we had Annnotation\u003d\u003eOverlay, and we get a `OverlayDeleted(overlay)` event, we could find the matching annotation by comparing the entry object (which will be equivalent), so it\u0027s a fairly cheap lookup to find the right one (and, as you say, it won\u0027t be happening that often). Plus, we would expect users to have a fairly small number (even say 100 feels like wayyyy too many and unlikely), and that will be cheap to find the right one.\n\nIf we really wanted, we could store the overlays against the entry they are attached to (which we will need to do for serialization), and that way finding the annotation for an overlay is a case of looking up annotations for an entry, which would be constant time, I think.",
      "parentUuid": "dcf4b36e_10c9cc39",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 80
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33b11e9c_9b387dcb",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T09:59:03Z",
      "side": 1,
      "message": "That makes sense. I changed it to `Annotation \u003d\u003e Overlay`.",
      "parentUuid": "3484eb63_8fdee8f6",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 80
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49a33e0b_1d1e5dda",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-07-08T08:15:03Z",
      "side": 1,
      "message": "I think `createOverlayForAnnotation` might be a nicer name",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 119,
        "endChar": 22
      },
      "fixSuggestions": [
        {
          "fixId": "66115591_b54f09cd",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/panels/timeline/ModificationsManager.ts",
              "range": {
                "startLine": 119,
                "startChar": 0,
                "endLine": 120,
                "endChar": 0
              },
              "replacement": "  createOverlayForAnnotation(newOverlayAnnotation: TraceEngine.Types.File.Annotation): void {\n"
            }
          ]
        }
      ],
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9eb714f0_15286868",
        "filename": "front_end/panels/timeline/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2024-07-08T08:37:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49a33e0b_1d1e5dda",
      "range": {
        "startLine": 119,
        "startChar": 2,
        "endLine": 119,
        "endChar": 22
      },
      "revId": "b2c358762f39bf9a672d023b99aac241b10138b8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}