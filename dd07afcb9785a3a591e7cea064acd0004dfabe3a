{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ecbf4f9e_d9c57ecb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-07-21T12:57:07Z",
      "side": 1,
      "message": "Can we add some tests?",
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bbec967_0d703198",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-21T13:05:44Z",
      "side": 1,
      "message": "Let\u0027s add tests",
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5f4ca22_bae359eb",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 572,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-07-21T12:57:07Z",
      "side": 1,
      "message": "We should only get one value, so remove the \"s\".\n\n```suggestion\n    const enumValue \u003d this.enumsByName.get(`${this.command.split(\u0027.\u0027)[0]}.${parameter.typeRef}`) ?? {\u0027\u0027: \u0027\u0027};\n```\n\nAnother is to make the value you put in the `get` function more clear, and check if they are valid.",
      "range": {
        "startLine": 572,
        "startChar": 10,
        "endLine": 572,
        "endChar": 20
      },
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87bde718_e6327dda",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 572,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-21T13:00:19Z",
      "side": 1,
      "message": "Yeah I guess then value is a bit confusing but I did not find a better suitable name",
      "parentUuid": "b5f4ca22_bae359eb",
      "range": {
        "startLine": 572,
        "startChar": 10,
        "endLine": 572,
        "endChar": 20
      },
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68213c7b_b48ad88b",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 572,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-21T13:05:44Z",
      "side": 1,
      "message": "`{}` should work here?",
      "range": {
        "startLine": 572,
        "startChar": 101,
        "endLine": 572,
        "endChar": 109
      },
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "763e43df_442d2750",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 572,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-21T13:05:44Z",
      "side": 1,
      "message": "it looks like this helper could be inlined inside the \u0027computeEnumValues\u0027.",
      "parentUuid": "87bde718_e6327dda",
      "range": {
        "startLine": 572,
        "startChar": 10,
        "endLine": 572,
        "endChar": 20
      },
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f660287b_db66a445",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 638,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-07-21T12:57:07Z",
      "side": 1,
      "message": "This section is for all primitive types, we shouldn\u0027t directly add an enum-only function here",
      "range": {
        "startLine": 638,
        "startChar": 22,
        "endLine": 638,
        "endChar": 68
      },
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5df7748f_8e036632",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 6
      },
      "lineNbr": 638,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-21T13:00:19Z",
      "side": 1,
      "message": "I thought about that but then I would need to make another if check just for string parameter... I don\u0027t know which option is best",
      "parentUuid": "f660287b_db66a445",
      "range": {
        "startLine": 638,
        "startChar": 22,
        "endLine": 638,
        "endChar": 68
      },
      "revId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dd07afcb9785a3a591e7cea064acd0004dfabe3a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}