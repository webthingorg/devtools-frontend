{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fef5be8b_8c4b97f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-12-07T09:40:37Z",
      "side": 1,
      "message": "PTAL",
      "revId": "864c0bd3d83313115ff0a278793a1f4b6c452be5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd57021_2f317e43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-12-07T09:43:55Z",
      "side": 1,
      "message": "Would it make more sense to delete the header (set value to empty) in this case?",
      "revId": "864c0bd3d83313115ff0a278793a1f4b6c452be5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78b5586b_30e3ce2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2022-12-07T11:49:02Z",
      "side": 1,
      "message": "Hm, IMO this would be too aggressive. Say the user edits the header name and (by chance/accident) deletes the header name. This would then automatically delete the header value (which they never touched) without any confirmation.\nIf the user intends to remove the whole header, they can always use the trash can icon button.",
      "parentUuid": "2fd57021_2f317e43",
      "revId": "864c0bd3d83313115ff0a278793a1f4b6c452be5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92098d60_9ecd3f3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-12-07T12:06:17Z",
      "side": 1,
      "message": "I understand, however this is what we do when editing CSS properties in the Elements panel or storage keys in the Application panel. \n\n+petermueller wdyt?",
      "parentUuid": "78b5586b_30e3ce2b",
      "revId": "864c0bd3d83313115ff0a278793a1f4b6c452be5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "464a693d_9be6f58f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1419292
      },
      "writtenOn": "2022-12-07T12:51:42Z",
      "side": 1,
      "message": "We can keep the behavior consistent with the Styles panel (as Danil suggested), but we need to implement the same error recovery for the user as in the style panel:\n\n- When the user deletes the header string and moves the focus away from the element the header is removed.\n\n- When the user deletes the header string and presses ESC, the previous value is restored and the header is not removed.\n\nThis way the user has an escape hatch and it\u0027s consistent with other parts of DevTools.",
      "parentUuid": "92098d60_9ecd3f3c",
      "revId": "864c0bd3d83313115ff0a278793a1f4b6c452be5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}