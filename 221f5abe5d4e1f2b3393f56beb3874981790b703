{
  "comments": [
    {
      "key": {
        "uuid": "212f4623_439edfcd",
        "filename": "front_end/sdk/Script.js",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-09T12:30:03Z",
      "side": 1,
      "message": "Can we put this in a worker before submitting this CL? Not sure how much complexity it would add to this CL.",
      "range": {
        "startLine": 176,
        "startChar": 10,
        "endLine": 176,
        "endChar": 40
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6993e84c_63d3b7f6",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-09T12:30:03Z",
      "side": 1,
      "message": "Can we upstream the patch before landing a fork in this repo? If upstream accepts it within 1 week, that would remove the need for maintaining our fork. If it takes longer than 1 week, we can re-evaluate.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 94
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae3a754c_a4825f7f",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2019-12-11T16:36:41Z",
      "side": 1,
      "message": "Out for review now, looks promising.",
      "parentUuid": "6993e84c_63d3b7f6",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 94
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53d736f0_8e1e5b9d",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-09T12:30:03Z",
      "side": 1,
      "message": "If we use the upstream version, can we `npm i` this instead?",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5096f62d_5a0e8b9b",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2019-12-11T16:36:41Z",
      "side": 1,
      "message": "I don\u0027t think so. The javascript compiled by npm is incompatible with DevTools, doing things like importing files without the .js extension. I\u0027m hopeful that your work on updating our module system will make this possible in the future.",
      "parentUuid": "53d736f0_8e1e5b9d",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "452cf4fa_558abec9",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-11T16:40:56Z",
      "side": 1,
      "message": "Once we are in TypeScript land, yes that would be possible. However, importing without the file extension is non-standard and will not work for now.\n\nCan you upstream the fix to use the proper file extensions? I am okay with manual changes after the `npm i` output, but would remove the `tsc` step here.",
      "parentUuid": "5096f62d_5a0e8b9b",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a00e4d08_99e66663",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2019-12-12T14:34:38Z",
      "side": 1,
      "message": "I can fix the extensions upstream. I\u0027ll see if that\u0027s enough to get rid of the manual steps.\n\n`npm i` wants to install it in src/node_modules rather than src/front_end/third_party, should I copy the dist folder from an external install?",
      "parentUuid": "452cf4fa_558abec9",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c14dfcb8_65f14e50",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-12T14:37:00Z",
      "side": 1,
      "message": "Oh sorry I meant that you do `npm i` in a brand new folder on your computer and then copy the relevant files into here. E.g. you download the artifact from NPM and obtain the build output.\n\nWe don\u0027t have managed_node_deps for the front_end yet. That would be nice to have. Do you mind filing a bug for that?",
      "parentUuid": "a00e4d08_99e66663",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "295145b5_6877f5e6",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2019-12-18T07:56:57Z",
      "side": 1,
      "message": "Unfortunately the extension change was not accepted upstream, so for now we either need a manual build step to fix this extension or perhaps we should copy the output without an extension?\n\nThis is apparently an issue with the TypeScript compiler that there isn\u0027t a clear solution to. https://github.com/microsoft/TypeScript/issues/33882\n\nHaving the TypeScript files refer to the JavaScript files that will be generated from them doesn\u0027t seem entirely right, but I guess the compiler works on one file at a time so it can\u0027t guess the extension for other generated files? Apparently fixing the extensions is a job for a JS bundler?",
      "parentUuid": "c14dfcb8_65f14e50",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a93fee11_d0236d43",
        "filename": "front_end/sdk/wasmparser/README",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-19T11:19:50Z",
      "side": 1,
      "message": "Let\u0027s try that in a separate PR: https://github.com/wasdk/wasmparser/pull/25 This is the standard way in TypeScript to load JavaScript files.\n\nLet\u0027s see what they say. If they reject again, I guess we have to maintain our fork...",
      "parentUuid": "295145b5_6877f5e6",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 18
      },
      "revId": "221f5abe5d4e1f2b3393f56beb3874981790b703",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}