{
  "comments": [
    {
      "key": {
        "uuid": "a7abf02d_14999973",
        "filename": "BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 324,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "Is lit necessary here? Can we break this out into another CL?",
      "range": {
        "startLine": 313,
        "startChar": 2,
        "endLine": 324,
        "endChar": 59
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42deed85_891a6635",
        "filename": "BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 324,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "this was necessary only to work on this CL.\n\nOnce https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2238232 is submitted I can follow it up with a CL that gets all of lit-html into the front_end folder and then I can update this CL accordingly, removing all of this stuff",
      "parentUuid": "a7abf02d_14999973",
      "range": {
        "startLine": 313,
        "startChar": 2,
        "endLine": 324,
        "endChar": 59
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fc0b174_a79bc15d",
        "filename": "front_end/component_docs/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 5,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Ultra-nit: not necessary.",
      "range": {
        "startLine": 5,
        "startChar": 12,
        "endLine": 5,
        "endChar": 14
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "735cc0cf_ba6a9c3d",
        "filename": "front_end/elements/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "This would need to be `../lit-html` right? (I just realized I hadn\u0027t submitted the rollup CL. Doing that now)",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 28
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a09a8be_c2591182",
        "filename": "front_end/elements/ElementsBreadcrumbsUtils.ts",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "if we were to -- say -- not declare public here, would the formatting be nicer?",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 46,
        "endChar": 13
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04a62ad0_efe3b3a9",
        "filename": "front_end/elements/ElementsBreadcrumbsUtils.ts",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "The formatting is off here, because the previous line doesn\u0027t end with a semi-colon.",
      "parentUuid": "5a09a8be_c2591182",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 46,
        "endChar": 13
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a9b178e_305c53ee",
        "filename": "front_end/elements/ElementsBreadcrumbsUtils.ts",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "Yeah, I think so. I\u0027m tempted to relax the eslint rule...in another CL",
      "parentUuid": "5a09a8be_c2591182",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 46,
        "endChar": 13
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20f83599_3ae69230",
        "filename": "front_end/elements/ElementsBreadcrumbsUtils.ts",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "nit: can be inferred, so this is not needed.",
      "range": {
        "startLine": 58,
        "startChar": 24,
        "endLine": 58,
        "endChar": 34
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc8cf8f6_62feb5bf",
        "filename": "front_end/elements/ElementsBreadcrumbsUtils.ts",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20f83599_3ae69230",
      "range": {
        "startLine": 58,
        "startChar": 24,
        "endLine": 58,
        "endChar": 34
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24a48a2f_3f583b05",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 10,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Meta-question: Is there a particular reason/distinction as to why this is function is declared here instead of in the Utils file? What is the general guidance for deciding where the function must live?",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 27
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae173964_6ed57887",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 10,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "No - this should be in utils I think.",
      "parentUuid": "24a48a2f_3f583b05",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 27
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91c96f57_4c8e43e7",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "nit: typically I would expect private methods to go after public ones",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 9
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1ed6134_63f08727",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "I would have preferred the `render` method to be defined first. Would be good to make a decision on it and write in a style guide of some sort. I don\u0027t have a strong opinion on where it should live.",
      "parentUuid": "91c96f57_4c8e43e7",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 9
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7649ee9f_319f49df",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "I don\u0027t personally think it matters - or put another way, I\u0027d find that a frustrating nit on a CL if we try to enforce all the ordering. I\u0027m used to render effectively being last (if you think of functional React components).\n\nHappy to define some standard if you think it\u0027s required but else I\u0027d be tempted to leave this one up to the author.\n\nIn this particular case I do agree having the `onCrumbClick` first is odd though so I will move things around.",
      "parentUuid": "d1ed6134_63f08727",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 9
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "597cd008_b5b423fb",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "Nit: not needed",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b14111_167bdd62",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "It is until I relax the eslint rule.",
      "parentUuid": "597cd008_b5b423fb",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2bd13aa_51d15976",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "My preference is to make it clear that the resizeObserver is expected to be there, i.e.\n\nif (!this.resizeObserver) {\n  return;  // or throw if it\u0027s problematic to early return.\n}\n\nthis.resizeObserver.disconnect();\nthis.resizeObserver \u003d undefined;",
      "range": {
        "startLine": 90,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60a8b99c_ffc9754d",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "I think we can define the resize observer in the constructor and make it non-optional?",
      "parentUuid": "b2bd13aa_51d15976",
      "range": {
        "startLine": 90,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe5dc175_cc1e7b02",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 93,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "agree, I\u0027ll move it into the constructor",
      "parentUuid": "60a8b99c_ffc9754d",
      "range": {
        "startLine": 90,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8569f633_45f1368b",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "Why is this an arrow function?",
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a343a1a7_dc0e078f",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Sounds like an ESLint rule in the making.",
      "parentUuid": "8569f633_45f1368b",
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24aa90da_9af88ef4",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "good catch, it shouldn\u0027t be",
      "parentUuid": "a343a1a7_dc0e078f",
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7921ff3_21baf0a1",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Nit: I don\u0027t think it is strictly necessary to wrap this in a `html` tag. Lit should be able to handle the array as-is.",
      "range": {
        "startLine": 110,
        "startChar": 11,
        "endLine": 110,
        "endChar": 17
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58c0207c_bd3f5582",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Could you add a bit of documentation as to why this function is necessary? It is not immediately clear, but I think it is related to the arrows being shown or not?",
      "range": {
        "startLine": 113,
        "startChar": 10,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90dff086_f68efd7d",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58c0207c_bd3f5582",
      "range": {
        "startLine": 113,
        "startChar": 10,
        "endLine": 113,
        "endChar": 26
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33452f0a_965b7d32",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 114,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "This should be always defined, right?",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6c17df4_3548550c",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 114,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33452f0a_965b7d32",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c0f01db_0578c417",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "Where does this magic number come from?",
      "range": {
        "startLine": 156,
        "startChar": 34,
        "endLine": 156,
        "endChar": 36
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f109e898_12b5e496",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Yeah, let\u0027s define a constant for this with a descriptive name.",
      "parentUuid": "2c0f01db_0578c417",
      "range": {
        "startLine": 156,
        "startChar": 34,
        "endLine": 156,
        "endChar": 36
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0378605d_4dd3e7a2",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 169,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "Should we locate this function with the other on* methods?",
      "range": {
        "startLine": 169,
        "startChar": 10,
        "endLine": 169,
        "endChar": 25
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aeeb753_4c20b56e",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 193,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "You can collapse this down with a ternary operator. Then you can also avoid the repetition of the scrollTo.",
      "range": {
        "startLine": 179,
        "startChar": 6,
        "endLine": 193,
        "endChar": 7
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a42e8b1d_17ad6b28",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 193,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9aeeb753_4c20b56e",
      "range": {
        "startLine": 179,
        "startChar": 6,
        "endLine": 193,
        "endChar": 7
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7c17856_2d2597bc",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Nit: maybe add a link to the crbug so that we can easily find them once clang-format is fixed (or we have a replacement).",
      "range": {
        "startLine": 215,
        "startChar": 7,
        "endLine": 215,
        "endChar": 23
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cdccb35_ab89c50b",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "are there any other places that we disable clang-format?",
      "parentUuid": "e7c17856_2d2597bc",
      "range": {
        "startLine": 215,
        "startChar": 7,
        "endLine": 215,
        "endChar": 23
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "464f2a3f_fc8b2487",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:41:40Z",
      "side": 1,
      "message": "Yes. We disable it in our test resources and node_modules for example. When we want a specific formatting for assertions or where whitespace is important.",
      "parentUuid": "4cdccb35_ab89c50b",
      "range": {
        "startLine": 215,
        "startChar": 7,
        "endLine": 215,
        "endChar": 23
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a48410ae_700c5101",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 292,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "We\u0027re doing the highlight and clear with mousemove and mouseleave. What do we do about touch and keyboard events?",
      "range": {
        "startLine": 291,
        "startChar": 18,
        "endLine": 292,
        "endChar": 67
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5735e07_65aa13ff",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 292,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "I guess we could make this focusable, such that you can tab into it?",
      "parentUuid": "a48410ae_700c5101",
      "range": {
        "startLine": 291,
        "startChar": 18,
        "endLine": 292,
        "endChar": 67
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87b23acd_9a0d5afd",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 292,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "You can tab through the anchors - so maybe these events should move to the anchor?\n\nI\u0027m not sure how best to do the highlighting with keyboard - maybe highlight the relevant node on focus ?",
      "parentUuid": "a5735e07_65aa13ff",
      "range": {
        "startLine": 291,
        "startChar": 18,
        "endLine": 292,
        "endChar": 67
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c547d87_83a9f60a",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 321,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "if (!activeCrumb) {\n  return;\n}\n\nactiveCrumb.scrollIntoView();",
      "range": {
        "startLine": 321,
        "startChar": 4,
        "endLine": 321,
        "endChar": 22
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd9edf82_b049dcac",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 321,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "I agree with the broad principle of early returns in code but when it\u0027s the last thing in the function body I don\u0027t think this results in a net positive so I\u0027m going to leave this unless you feel super strong.",
      "parentUuid": "9c547d87_83a9f60a",
      "range": {
        "startLine": 321,
        "startChar": 4,
        "endLine": 321,
        "endChar": 22
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4429776_13de6f66",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 327,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-06-11T15:08:27Z",
      "side": 1,
      "message": "Wonder if we want to either wrap this in a check (customElements.get) so that there\u0027s no chance of double defining.",
      "range": {
        "startLine": 327,
        "startChar": 0,
        "endLine": 327,
        "endChar": 76
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1cd0188_a07d41b5",
        "filename": "front_end/elements/NewElementsBreadcrumbs.ts",
        "patchSetId": 8
      },
      "lineNbr": 327,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-06-12T13:33:36Z",
      "side": 1,
      "message": "Not sure - I sort of want to know if it errors. We could wrap and console.error or something?",
      "parentUuid": "a4429776_13de6f66",
      "range": {
        "startLine": 327,
        "startChar": 0,
        "endLine": 327,
        "endChar": 76
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d662d8d8_bbde3945",
        "filename": "scripts/component_server/server.js",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-06-12T13:01:53Z",
      "side": 1,
      "message": "Could the fixes in this file be extracted into a separate CL?",
      "range": {
        "startLine": 28,
        "startChar": 65,
        "endLine": 28,
        "endChar": 66
      },
      "revId": "a9daa776054a8f4e184e26ceaaa96ab2bc00e704",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}