{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6cebf506_4a2520c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2021-02-04T03:17:55Z",
      "side": 1,
      "message": "Fixing a couple of loc bugs in some migrated modules.PTAL",
      "revId": "9fce33f75b7fbc02ba9d0584c8fd0120540edc85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49deb998_cfb1bb92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-02-04T06:57:16Z",
      "side": 1,
      "message": "lgtm",
      "revId": "9fce33f75b7fbc02ba9d0584c8fd0120540edc85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "017eb703_c610ef82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-02-04T10:55:49Z",
      "side": 1,
      "message": "Drive-by review: can we introduce some sort of check that prohibits new strings of using multiline strings? I can imagine a barebones check to check for `\\n` to be included in the string passed in and error if any are found.",
      "revId": "9fce33f75b7fbc02ba9d0584c8fd0120540edc85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce733aa7_1cb41cb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1334873
      },
      "writtenOn": "2021-02-04T22:54:55Z",
      "side": 1,
      "message": "sounds good ðŸ˜Š, I\u0027ll address this in a different CL.",
      "parentUuid": "017eb703_c610ef82",
      "revId": "9fce33f75b7fbc02ba9d0584c8fd0120540edc85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}