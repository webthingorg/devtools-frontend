{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2ad4f3f3_5e50c006",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-05-20T12:45:53Z",
      "side": 1,
      "message": "Please take another look",
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7adf66f_eaaa294f",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-20T13:07:17Z",
      "side": 1,
      "message": "You can handle all async operations in parallel for better performance, i.e.:\n\n  for(const storageKey of \n      Promise.all(this.framesInternal.values().map((f)\u003d\u003ef.storageKey))) {\n    if (!storageKey) {\n       continue;\n    }\n    storageKeys.add(storageKey)\n  }",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d1d935e_f9d5716a",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-05-31T12:32:49Z",
      "side": 1,
      "message": "There\u0027s also an await needed, I hope that doesn\u0027t change the execution order here",
      "parentUuid": "e7adf66f_eaaa294f",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49b12bad_8d88ac03",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-31T14:19:25Z",
      "side": 1,
      "message": "execution order of what?\n\nWith your newest change, I guess it is better expresses as \n\n  for (const {isMainFrame, storageKey} of await \n       Promise.all([...this.framesInternal.values()].map(\n          async f \u003d\u003e f.storageKey.then(k \u003d\u003e ({\n            isMainFrame: f.isMainFrame(), storageKey: k})))) {\n    if (isMainFrame) mainStorageKey \u003d storageKey;      \n    storageKeys.add(storageKey)            \n  }",
      "parentUuid": "9d1d935e_f9d5716a",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c043f58_15c930ca",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-05-31T15:58:05Z",
      "side": 1,
      "message": "I meant waiting till it finishes executing for array element n before moving on to execute for n+1 as opposed to executing on all in parallel.\n\nDone",
      "parentUuid": "49b12bad_8d88ac03",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c518899_1c20ab17",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-31T16:20:30Z",
      "side": 1,
      "message": "There\u0027s no true parallelism in JS but you\u0027re right, these could be executed out of order. Does it matter?",
      "parentUuid": "9c043f58_15c930ca",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9961390e_e3fb8428",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-05-31T16:59:39Z",
      "side": 1,
      "message": "Just thought you said it did, but guess I misunderstood:)",
      "parentUuid": "8c518899_1c20ab17",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccdf1d37_2ddd0ab9",
        "filename": "front_end/core/sdk/ResourceTreeModel.ts",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-06-01T04:42:36Z",
      "side": 1,
      "message": "Oh, I can see how this could be confusing: you can\u0027t execute code in parallel but you can wait in parallel. So, say reading a storage key from the backend takes 100ms when represented by \"[....]\".\n\nYou original code\n\n  for (const frame of this.framesInternal.values()) {. // get frame: GF\n    const storageKey \u003d await frame.storageKey;         // await storageKey: AS\n    storageKeys.add(storageKey);                       // process storageKey: PS   \n  }\n\n worked like that\n\n  GF1;AS1[....]PS1;GF2;AS2;[....]PS2;GF3;AS3;[....]PS3;GF4;AS4;[....]PS4;\n\nThe new code works like that\n\n  GF1;AS1[....]\n         GF2;AS2;[....]\n                 GF3;AS3;[....]\n                         GF4;AS4;[....]P2;PS1;PS3;PS4\n                       \nwhich as you can see takes less tome overall.",
      "parentUuid": "9961390e_e3fb8428",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d047d30b_f24d2b73",
        "filename": "test/unittests/front_end/core/sdk/ResourceTreeModel_test.ts",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-20T13:07:17Z",
      "side": 1,
      "message": "Another this to test would be that security key manager gets updated when frame tree changes. You get one from the target and listen to its events to verify that.",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 5
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9cf5809_7fe67afe",
        "filename": "test/unittests/front_end/core/sdk/ResourceTreeModel_test.ts",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-05-31T12:32:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d047d30b_f24d2b73",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 5
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9679c86c_b64a7e17",
        "filename": "test/unittests/front_end/panels/application/StorageView_test.ts",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-05-20T13:07:17Z",
      "side": 1,
      "message": "It also updates when the main storage key changes. We can at least check the the title is updated.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 3
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "255b04d7_a08f57ab",
        "filename": "test/unittests/front_end/panels/application/StorageView_test.ts",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-05-31T12:32:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9679c86c_b64a7e17",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 3
      },
      "revId": "7c8e87dca88bace71bccdce5a6988b160a81e48d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}