{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67ca57b9_29e571f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-04-19T13:21:49Z",
      "side": 1,
      "message": "PTAL",
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14c05499_6f800b9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-04-19T13:36:22Z",
      "side": 1,
      "message": "this is awesome! Two thoughts on it but this is so exciting!",
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "268baeb0_5d33a6ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-04-19T13:38:24Z",
      "side": 1,
      "message": "Something I don\u0027t understand: right now in the perf panel if you click on the entire layout shift track, the \"EventLog\" table will be populated. I presume that was (or still is?) populated by the group.tracks.events property ?",
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a72148b7_5f33a69a",
        "filename": "front_end/models/timeline_model/TimelineModel.ts",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-04-19T13:21:49Z",
      "side": 1,
      "message": "drive-by doc :)",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 61
      },
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00575a2f_1ce1d566",
        "filename": "front_end/models/timeline_model/TimelineModel.ts",
        "patchSetId": 1
      },
      "lineNbr": 1901,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-04-19T13:21:49Z",
      "side": 1,
      "message": "another drive-by change.",
      "range": {
        "startLine": 1901,
        "startChar": 10,
        "endLine": 1901,
        "endChar": 35
      },
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd34929_9fe0580b",
        "filename": "front_end/models/trace/types/TraceEvents.ts",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-04-19T13:24:42Z",
      "side": 1,
      "message": "for the other synthetic events (which I know are usually pairs of async events), we usually do args.data.beginEvent, I am wondering if we should do something similar so we have:\n\n```\nSyntheticLayoutShift extends TraceEventLayoutShift {\n  args: { data: { rawEvent: TraceEventLayoutShift } },\n  // other stuff here\n}\n```\n\nAnd we populate the top level with all the stuff to make sure it conforms to the TraceEventLayoutShift type.\n\nNow I type that... I am not 100% sure, but it does feel slightly odd that for other synthetic events we have the raw data in args.data, but here we do not. WDYT?",
      "range": {
        "startLine": 545,
        "startChar": 0,
        "endLine": 547,
        "endChar": 1
      },
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06036a5e_886b2e00",
        "filename": "front_end/models/trace/types/TraceEvents.ts",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-04-19T14:17:06Z",
      "side": 1,
      "message": "that would work as well. The only thing worth noting is that the type would extend `TraceEventLayoutShift` while also having a `TraceEventLayoutShift` type inside. I guess this could be unexpected but I don\u0027t feel strongly about it",
      "parentUuid": "8cd34929_9fe0580b",
      "range": {
        "startLine": 545,
        "startChar": 0,
        "endLine": 547,
        "endChar": 1
      },
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18a0dfc4_ea97d14a",
        "filename": "front_end/models/trace/types/TraceEvents.ts",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-04-19T14:19:50Z",
      "side": 1,
      "message": "Yeah I don\u0027t feel that strongly about it tbh - let\u0027s leave it be. And if it becomes an issue we can easily refactor it and let TS make sure we update everything :)",
      "parentUuid": "06036a5e_886b2e00",
      "range": {
        "startLine": 545,
        "startChar": 0,
        "endLine": 547,
        "endChar": 1
      },
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "761ce1e9_ca07372f",
        "filename": "front_end/panels/timeline/TimelineUIUtils.ts",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-04-19T13:36:22Z",
      "side": 1,
      "message": "do we know for sure that we will not have a legacy event here? I wonder about wrapping in an isSyntheticLayoutShift (even if we error if it is not true) just to be explicit and make sure this `as X` doesn\u0027t hide any future compiler issues.",
      "range": {
        "startLine": 2258,
        "startChar": 0,
        "endLine": 2258,
        "endChar": 88
      },
      "revId": "1e24b1ae476058246e9f73e7904cd47251c4e764",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}