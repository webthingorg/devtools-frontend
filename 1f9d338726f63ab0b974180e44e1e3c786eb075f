{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7949643a_5ae2cdf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-29T13:50:14Z",
      "side": 1,
      "message": "LGTM % types",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4356042d_bcb1bb9c",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-29T13:14:56Z",
      "side": 1,
      "message": "hm, I think this method was used by other overlays. Would it break?",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42db04da_b992bc29",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-29T13:17:09Z",
      "side": 1,
      "message": "I think you might have fixed other usages in the backend CL? In that case, could we define a specific type of what we are sending here?",
      "parentUuid": "4356042d_bcb1bb9c",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b4eb6c_25eedf26",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-29T13:18:10Z",
      "side": 1,
      "message": "I will take another look later (this was just the first point I noticed)",
      "parentUuid": "42db04da_b992bc29",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8064584b_58c59f96",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-09-29T13:25:06Z",
      "side": 1,
      "message": "I changed the type to \"any\" in the backend\u0027s idl: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/inspector/inspector_overlay_host.idl;l\u003d34;drc\u003dab24109ebff41d668fa343d90fc5e2b7f160f20e\n\nso it should be able to take anything. The consumers either consume the message as a string or as an object (i.e. the Isolation Mode case).\n\nBut since we control both ends, we can define a stricter type, something like \"object|string\". Do you prefer it this way?",
      "parentUuid": "55b4eb6c_25eedf26",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b43f149_e000063d",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-29T13:29:44Z",
      "side": 1,
      "message": "Yes, I\u0027d prefer to define the specific types here that the backend understands. Also, a ScriptValue is kind of any but the backend actually parses a specific structure from it.",
      "parentUuid": "8064584b_58c59f96",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bc7197e_2ffc54a2",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-29T13:53:59Z",
      "side": 1,
      "message": "so I am thinking about more specific types like `\u0027resume\u0027|\u0027pause\u0027|string|{highlightType:...}` this way we can be sure the frontend code is sending messages of specific type.",
      "parentUuid": "2b43f149_e000063d",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7e5b853_c629da42",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-09-29T23:19:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bc7197e_2ffc54a2",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e92710ce_5311ce41",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-09-30T05:37:49Z",
      "side": 1,
      "message": "Looks great! Andrey opened a CL too https://chromium-review.googlesource.com/c/chromium/src/+/3194764 so there could be conflicts here but we will be able to add a type for the screenshot tool too.",
      "parentUuid": "c7e5b853_c629da42",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86007d61_e696c81e",
        "filename": "inspector_overlay/main.ts",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-09-30T07:07:05Z",
      "side": 1,
      "message": "I see. I\u0027ll submit for now and when Andrey\u0027s CL lands, I\u0027ll add a type for screenshot tool too.",
      "parentUuid": "e92710ce_5311ce41",
      "revId": "1f9d338726f63ab0b974180e44e1e3c786eb075f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}