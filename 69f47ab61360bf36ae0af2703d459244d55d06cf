{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5c6a770e_231564b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-07T17:02:58Z",
      "side": 1,
      "message": "Hi Kim!\n\nI\u0027m adding a chip list component that displays chips when a user inspects an expression when using the C/C++ DWARF extension. A chip lets the user jump to the highlighted area and to remove the highlight.\n\nPTAL!",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c951e80_6fd6bd32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Thanks Michal, looking great! Just a few comments.",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "310cae1c_1d3a1d10",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-08-08T08:28:32Z",
      "side": 1,
      "message": "lgtm with suggestions + after Kim\u0027s comments are addressed. Nice!",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85a106a9_921ba764",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be the correct description?",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b505a460_927a6b8d",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85a106a9_921ba764",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5f225b3_c8d7b8b0",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Wdyt about: `Jump to highlighted address`?",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94ae6763_06abd8a7",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "I see where you are coming from. \u0027Jump to address\u0027 doesn\u0027t convey to which address.\nI am not a big fan of \u0027Jump to highlighted address\u0027 because we also have \u0027selected bytes\u0027. \nMaybe \u0027jump to highlighted memory\u0027?",
      "parentUuid": "d5f225b3_c8d7b8b0",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ee8580a_8379fdfe",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "How come that an array of HighlightInfos can be undefined?",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dcf1420_7dc6f47a",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-08-08T08:28:32Z",
      "side": 1,
      "message": "if they can, then the type should become `Array\u003cHighlightInfo|undefined\u003e`.",
      "parentUuid": "3ee8580a_8379fdfe",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21de90eb_fe38d9d1",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Removed: Switched to preparing the data before passing it to the HighlightChipList.",
      "parentUuid": "3ee8580a_8379fdfe",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f631d7e_aaba1b65",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Same question here with undefined: why use `highlightInfo?`? (question mark)",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "498cbe77_b43e5ec2",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "No purpose here, removing!",
      "parentUuid": "3f631d7e_aaba1b65",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a43b7d9f_7c72b444",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Disable clang-format for this one too, and better manually format the html part below.",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5239d336_b0524b13",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a43b7d9f_7c72b444",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c9cb150_2e29280d",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Instead of binding, directly call it in a lambda (() \u003d\u003e this.dispatchEvent(..)). We had the discussion at some point to not use `bind` so much (I know this is used in other parts of the LMI, and the code hasn\u0027t been updated for this yet).",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11618f86_dc3fddf3",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-08-08T08:28:32Z",
      "side": 1,
      "message": "+1, either call it as a lambda or have `@click\u003d${this.#onJumpToHighlightClick}`",
      "parentUuid": "5c9cb150_2e29280d",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd03e501_356181c6",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Good to know, thanks!",
      "parentUuid": "11618f86_dc3fddf3",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a4a5556_0a6df198",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "I don\u0027t think that it\u0027s recommended to nest spans, should this be a div instead? You can get div behaving like an inline element too.",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d833bba_e4e4ba0d",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-08-08T08:28:32Z",
      "side": 1,
      "message": "doesn\u0027t really matter much tbh. Span nesting is valid as far as the HTML spec is concerned.",
      "parentUuid": "2a4a5556_0a6df198",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb3285a3_9f31a1b3",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryHighlightChipList.ts",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Keeping as spans then. I don\u0027t like the idea of forcing a div to behave like a span when a span does the job.",
      "parentUuid": "7d833bba_e4e4ba0d",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccf7b00c_dde79967",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Since this is the same as `#onJumpToPointerAddress`, how about renaming that function to `jumpToAddress` and accept `e: JumpToPointerAddressEvent | JumpToHighlightedMemoryevent\u0027?",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed15c62b_bd0a0d96",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Agree, that\u0027s a nicer solution.",
      "parentUuid": "ccf7b00c_dde79967",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3865d72_24f18f51",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "There\u0027s no need to repackage this event. You can let the `DeleteHighlightChipEvent` bubble up and listen to it. But in that case maybe rename it to just `DeleteHighlightEvent`.",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13aadb41_73911b3d",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspector.ts",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3865d72_24f18f51",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b4ab2e_724ffde1",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspectorController.ts",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Maybe also test the `removeHighlight`?",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32ddf6b6_0d68d68b",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspectorController.ts",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97b4ab2e_724ffde1",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5acf55e_d8728a5b",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspectorPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "By now the code has changed a bit (migrations) and I think instead of using the verbatim string here, you can access this tag by `DeleteHighlightEvent.eventName`",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd5db7b5_a2efa8e9",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspectorPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-08-08T08:28:32Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "d5acf55e_d8728a5b",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d426586e_148a7526",
        "filename": "front_end/ui/components/linear_memory_inspector/LinearMemoryInspectorPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd5db7b5_a2efa8e9",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8941e862_c1e5e044",
        "filename": "front_end/ui/components/linear_memory_inspector/linearMemoryHighlightChipList.css",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2022-08-08T08:28:32Z",
      "side": 1,
      "message": "why do we need this? What is overriding this otherwise?",
      "range": {
        "startLine": 75,
        "startChar": 43,
        "endLine": 75,
        "endChar": 52
      },
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3a1780c_f0627a66",
        "filename": "front_end/ui/components/linear_memory_inspector/linearMemoryHighlightChipList.css",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1546253
      },
      "writtenOn": "2022-08-09T09:02:38Z",
      "side": 1,
      "message": "Good catch, doesn\u0027t seem to do anything in our case. May have been necessary in legacy parts of the codebase.",
      "parentUuid": "8941e862_c1e5e044",
      "range": {
        "startLine": 75,
        "startChar": 43,
        "endLine": 75,
        "endChar": 52
      },
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3564615_2db5580c",
        "filename": "test/unittests/front_end/ui/components/linear_memory_inspector/LinearMemoryInspectorHighlightChipList_test.ts",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-08-08T07:02:50Z",
      "side": 1,
      "message": "Awesome, thanks for the tests!",
      "revId": "69f47ab61360bf36ae0af2703d459244d55d06cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}