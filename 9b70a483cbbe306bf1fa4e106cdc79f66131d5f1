{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "684b7a50_68f4ee3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1541419
      },
      "writtenOn": "2023-06-13T06:21:23Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/4603374\n\nThis CL is necessary for the next CL.\n\nCould you have a look?",
      "revId": "9b70a483cbbe306bf1fa4e106cdc79f66131d5f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "501f3ee0_b14beedc",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-06-13T06:33:22Z",
      "side": 1,
      "message": "So it always listens to last added outermost target? Why exactly that?",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 23
      },
      "revId": "9b70a483cbbe306bf1fa4e106cdc79f66131d5f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0026121b_ac597770",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1541419
      },
      "writtenOn": "2023-06-13T07:58:09Z",
      "side": 1,
      "message": "(This behavior is not changed.)\n\nPrecisely speaking, PreloadingModelProxy represents the model for current scoped (outermost) target. The scenarios changing scoped targets are:\n\n1. Prerender activation\n2. Using background page selector\n\nL227 is OK for 1 with handing over in PreloadingModel.onPrimaryPageChanged and the model is for new primary page.\nIt is OK for 2 because user is just switching the target to show.",
      "parentUuid": "501f3ee0_b14beedc",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 23
      },
      "revId": "9b70a483cbbe306bf1fa4e106cdc79f66131d5f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b31675d0_33b45c1d",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-06-13T10:17:35Z",
      "side": 1,
      "message": "Hm... wouldn\u0027t it be enough to simply do\n\n    TargetManager.instance().addModelListener(\n      SDK.PreloadingModel.PreloadingModel,\n      SDK.PreloadingModel.Events.ModelUpdated,\n      this.onModelUpdated, this,\n      {scoped: true});\n      \nin the client code?",
      "parentUuid": "0026121b_ac597770",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 23
      },
      "revId": "9b70a483cbbe306bf1fa4e106cdc79f66131d5f1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}