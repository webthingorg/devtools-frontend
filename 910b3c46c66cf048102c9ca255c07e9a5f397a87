{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "02a2aca1_4a0f3028",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-07-13T13:33:41Z",
      "side": 1,
      "message": "PTAL",
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc169f57_f399953d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "LGTM! Most comments are nits or questions for my benefit. Love the clarity and comments through out the code and the tests. It is exciting to think that when we get bug reports we have a solid set of tests we can use, extend and attempt to improve our samples handling.",
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83d528b7_68bb7fb4",
        "filename": "front_end/models/cpu_profile/CPUProfileDataModel.ts",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "do we need the check for this.samples here?",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 548,
        "endChar": 68
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43137998_94c501e5",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "typo?",
      "range": {
        "startLine": 21,
        "startChar": 13,
        "endLine": 21,
        "endChar": 22
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5322fe1e_53e107c7",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "nit: might be nice to leave a comment around some of these. E.g. what does fakeJSInvocation mean? Same with helperJSStack and lockedJSStackDepth.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 28
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "149cd982_3c3a8500",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "nit: can we call this event please rather than e? (same through the file)",
      "range": {
        "startLine": 62,
        "startChar": 21,
        "endLine": 62,
        "endChar": 22
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50e28999_a1e7fc45",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "comment for why we return if it is an instant event? Might as well be explicit for this to help future readers.",
      "range": {
        "startLine": 63,
        "startChar": 3,
        "endLine": 65,
        "endChar": 5
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fe496ec_4f76f73a",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 85,
        "startChar": 15,
        "endLine": 85,
        "endChar": 24
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db4a7fc3_ba3f86ea",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "why one extra here? for the node itself? (as node.depth covers the children?)",
      "range": {
        "startLine": 168,
        "startChar": 74,
        "endLine": 168,
        "endChar": 78
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c63883f3_705334f6",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "to check my understanding, if we have a profile call event, we know we can use its stack trace. But in the other case, what is helperJSStack?",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 185,
        "endChar": 120
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b87e285_6707e064",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "any value in typing this as `\u0027Parse\u0027|\u0027Compile\u0027|null ? up to you",
      "range": {
        "startLine": 308,
        "startChar": 42,
        "endLine": 308,
        "endChar": 48
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd871bb4_3c396f5b",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "Any reason to mutate the stack vs return a new one? I guess performance? I don\u0027t mind (because this method returns void it is clearly mutating), just curious!",
      "range": {
        "startLine": 322,
        "startChar": 9,
        "endLine": 322,
        "endChar": 26
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "875d9116_44068413",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "think this can become string|null",
      "range": {
        "startLine": 329,
        "startChar": 33,
        "endLine": 329,
        "endChar": 51
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "536069df_a61cefae",
        "filename": "front_end/models/trace/helpers/SamplesIntegrator.ts",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "wondering if we should call this something with Synthetic in, to match the pattern of using that when the events are fakes that we have made? wdyt?",
      "range": {
        "startLine": 354,
        "startChar": 58,
        "endLine": 354,
        "endChar": 69
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dd20ac8_c3822f9f",
        "filename": "test/unittests/front_end/models/trace/helpers/SamplesIntegrator_test.ts",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "for my understanding, is this code roughly what we will end up doing when we integrate the SamplesIntegrator for real?",
      "range": {
        "startLine": 15,
        "startChar": 11,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0848b732_17ad6e30",
        "filename": "test/unittests/front_end/models/trace/helpers/SamplesIntegrator_test.ts",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-07-13T13:55:43Z",
      "side": 1,
      "message": "lol in the mood for pizza? 😄",
      "range": {
        "startLine": 63,
        "startChar": 20,
        "endLine": 63,
        "endChar": 28
      },
      "revId": "910b3c46c66cf048102c9ca255c07e9a5f397a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}