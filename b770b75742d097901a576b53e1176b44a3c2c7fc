{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "277669d2_c94d61bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-12-01T15:03:36Z",
      "side": 1,
      "message": "lgtm % question",
      "revId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72408967_3f2113f5",
        "filename": "test/unittests/front_end/core/sdk/ChildTargetManager_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-12-01T15:03:36Z",
      "side": 1,
      "message": "Would you want to add a test for this as well?",
      "range": {
        "startLine": 121,
        "startChar": 3,
        "endLine": 121,
        "endChar": 76
      },
      "revId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e454455a_c72096ab",
        "filename": "test/unittests/front_end/core/sdk/ChildTargetManager_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2022-12-01T15:09:26Z",
      "side": 1,
      "message": "As discussed, this is what the test is doing, i.e. verifying that the next two targets would get names \"#1\" and \"#2\" and not \"#4\" and \"#5\". \n\nOverall this logic is underspecified and I am struggling to write more clear test and I have a feeling that parts of this work by accident (e.g. in theory we would show target CDP ID as a name of frame targets, but this doesn\u0027t seem to happen in practice as this happens only for data: and about URLs and the only traget that could have such URL is a main target, which we special case and call \"Main\")",
      "parentUuid": "72408967_3f2113f5",
      "range": {
        "startLine": 121,
        "startChar": 3,
        "endLine": 121,
        "endChar": 76
      },
      "revId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ba50dbc_c84788a6",
        "filename": "test/unittests/front_end/core/sdk/ChildTargetManager_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1419627
      },
      "writtenOn": "2022-12-01T15:12:33Z",
      "side": 1,
      "message": "Got it! Looks good as is then!",
      "parentUuid": "e454455a_c72096ab",
      "range": {
        "startLine": 121,
        "startChar": 3,
        "endLine": 121,
        "endChar": 76
      },
      "revId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b770b75742d097901a576b53e1176b44a3c2c7fc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}