{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a3a3263_a19cb605",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2022-08-08T08:40:48Z",
      "side": 1,
      "message": "Mathias, can you make sure I\u0027m holding the regex stuff correctly? :)",
      "revId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab36fd9e_1ebabfb6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-08-08T10:33:00Z",
      "side": 1,
      "message": "Changhao, this is another example of where we really want backend-powered parsing instead of approximating it ourselves.",
      "revId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77e2af22_a906b0de",
        "filename": "front_end/panels/console/ConsoleFormat.ts",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-08-08T09:42:03Z",
      "side": 1,
      "message": "Note that this misses some cases of valid CSS where parts of the URL are escaped. E.g. `\\64 ata:` (with the space) is equivalent to `data:` in CSS strings and identifiers, but this code wouldn’t consider the former to be a data URL. It might be fine, since this seems like uncommon behavior — but it’s a limitation to be aware of.\n\nQuick example:\n\n    html {\n      background: url(\\64 ata:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAAAAABzHgM7AAAAF0lEQVR42mM4Awb/wYCBYg6EgghRzAEAWDWBGQVyKPMAAAAASUVORK5CYII\u003d);\n    }\n\nHave we considered a different approach altogether? Instead of trying to reparse the CSS with regular expressions, could we rely on CSP instead?",
      "revId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2209ccd8_23a3170b",
        "filename": "front_end/panels/console/ConsoleFormat.ts",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2022-08-08T09:58:08Z",
      "side": 1,
      "message": "Yes, we did consider applying CSP: https://crbug.com/1223475. Although it is kinda tricky: In some cases we don\u0027t want to apply CSP, e.g. when loading source maps. Where as in cases like this we\u0027d like CSP to apply. I have no idea how/where to implement this in the backend, so the DevTools renderer handles requests differently depending on what we are loading or who initiated it. (E.g. an explicit load for a source map vs an implicit load from CSS).\n\nLong story short, this is probably an appropriate band-aid until we have a proper plan for the backend.\n\nW.r.t to escaped urls, I\u0027m not sure allowing an escaped `data:` warrants  the increased implementation complexity. Wdyt?",
      "parentUuid": "77e2af22_a906b0de",
      "revId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df3bd556_56a4f11e",
        "filename": "front_end/panels/console/ConsoleFormat.ts",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-08-08T10:31:27Z",
      "side": 1,
      "message": "\u003e W.r.t to escaped urls, I\u0027m not sure allowing an escaped `data:` warrants  the increased implementation complexity. Wdyt?\n\nOh, I completely agree.",
      "parentUuid": "2209ccd8_23a3170b",
      "revId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "06b5dc90e341568a41994c77eeaacd6df4471188",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}