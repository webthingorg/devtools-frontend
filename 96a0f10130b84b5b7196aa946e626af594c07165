{
  "comments": [
    {
      "key": {
        "uuid": "82502453_9500a1a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Many of the comments are just issues with the patch containing some stale code/comments/whitespace -- please fix this first.\n\nThe one really blocking to resolve is around how UserTiming is extracted/filtered.  I\u0027d like to confirm with someone who knows how this is meant to behave.  I can help here!",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f60bcb5b_63ad7ec9",
        "filename": "front_end/perf_ui/timelineGrid.css",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "I think this is a stale change, right? Please remove.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50448db5_8b0714b5",
        "filename": "front_end/sdk/TracingModel.js",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Nit: Please remove needless whitespace additions (I suspect these were added in earlier experiments)",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bbae884_2125c47b",
        "filename": "front_end/sdk/TracingModel.js",
        "patchSetId": 2
      },
      "lineNbr": 870,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Is this a stale TODO?  Please remove.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e30570e7_6e34262d",
        "filename": "front_end/sdk/TracingModel.js",
        "patchSetId": 2
      },
      "lineNbr": 878,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Nit: rename startEvent to just `event`",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d1c0815_67f48d0a",
        "filename": "front_end/sdk/TracingModel.js",
        "patchSetId": 2
      },
      "lineNbr": 887,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Does this actually get called for a SyncEvent?\n\nI would expect that a \"sync event\" has exactly 1 step, and it looks like you get this already in the constructor.  Judging by the text of this function, I don\u0027t think it gets called.\n\nMaybe you want a different implementation that sets the EndTime of steps[0] in the constructor?",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34426a5f_89006a8f",
        "filename": "front_end/timeline/TimelineFlameChartDataProvider.js",
        "patchSetId": 2
      },
      "lineNbr": 331,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Stale comments, please remove",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca4a3882_157d744e",
        "filename": "front_end/timeline/TimelineFlameChartDataProvider.js",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "I think this is stale code?  Please remove.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a9fe968_d506379a",
        "filename": "front_end/timeline/TimelineFlameChartDataProvider.js",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "I added this as a quick way to filter out non-perf-mark type user timings.\n\nHowever, I don\u0027t think this should be left hard-coded here.\n\nEither:\n- Change the \"extract\" phase to only extract marks, OR\n- Filter out what the Timings Track renders here, but move it to a helper function\n\nI have a slight preference towards the latter, but its really important to confirm that extract these things isn\u0027t a problem.\n\nFor example: do folks expect to see Resource Timing and Navigation Timing events in the Main track?  Or, were those there \"by accident\"?\n\nWe can start by asking Chrome Speed Metrics team, then ask DevTools team.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4953a50_8a09d882",
        "filename": "front_end/timeline/TimelineFlameChartDataProvider.js",
        "patchSetId": 2
      },
      "lineNbr": 553,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "As discussed before: I think you can replace this hard-coded check for \u0027R\u0027 with the helper methods that test if an event is not Async?\n\nOr, if that helper isn\u0027t possible to use, create a new one.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1744a3e8_c50d322a",
        "filename": "front_end/timeline/TimelineFlameChartDataProvider.js",
        "patchSetId": 2
      },
      "lineNbr": 688,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Why was this change made?  This seems significant, and unrelated to perf.marks, which are sync events.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3702c75_1e59194c",
        "filename": "front_end/timeline/TimelineFlameChartDataProvider.js",
        "patchSetId": 2
      },
      "lineNbr": 905,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "Stale comment, please remove.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea30f27_d028e618",
        "filename": "front_end/timeline_model/TimelineModel.js",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-08-25T15:32:36Z",
      "side": 1,
      "message": "I think this comment is not correct.\n\nI think this extracts not just PerfMark, but all UserTiming, sync and async, which includes PerfMeasures, Markers, Resource timing, etc.\n\nHowever, if I recall, it is not a problem to move all UserTimings to Timings track, since the code that renders these things scans through all events in all tracks anyway.\n\nI think this part is thorough review.",
      "revId": "96a0f10130b84b5b7196aa946e626af594c07165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}