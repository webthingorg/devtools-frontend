{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "09f32ec6_3998040b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1302791
      },
      "writtenOn": "2020-10-27T01:50:39Z",
      "side": 1,
      "message": "PTAL",
      "revId": "b642f07ea4f339e3c92b079e0075efcb22b43b65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75c0c957_fe039fd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-10-27T11:06:36Z",
      "side": 1,
      "message": "From the design perspective, it probably makes sense to follow Peter\u0027s mocks and rename the clear storage section to storage: https://docs.google.com/presentation/d/1Tzl8ZRNedw8CmW2zRPYxK85v_RyzKo25bsEab2vG9dU/edit#slide\u003did.g891da5893a_0_0\nWe agreed on that in the design doc as it looks.\n\nThe other thing is that the storage input field seems to take bytes as input, but the UX deck lists MB. What did we agree on?\n\nUsability concerns:\n- Checking the override checkbox, setting a value, unchecking it, and then re-checking it leaves the input field empty. Would it make more sense to restore the old value?\n- The handling of the input field seems strange: If a value is entered and one doesn\u0027t press \u003cENTER\u003e, then the quota is not applied. Maybe Peter can suggest a better way to handle this (Should we apply the quota once the input field looses focus?)\n\n",
      "revId": "b642f07ea4f339e3c92b079e0075efcb22b43b65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08a8a00d_23821b72",
        "filename": "front_end/resources/ClearStorageView.js",
        "patchSetId": 15
      },
      "lineNbr": 177,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-10-27T11:06:36Z",
      "side": 1,
      "message": "Something seems to be missing here.",
      "range": {
        "startLine": 176,
        "startChar": 4,
        "endLine": 177,
        "endChar": 6
      },
      "revId": "b642f07ea4f339e3c92b079e0075efcb22b43b65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8819e19_f4672cff",
        "filename": "front_end/resources/ClearStorageView.js",
        "patchSetId": 15
      },
      "lineNbr": 212,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-10-27T11:06:36Z",
      "side": 1,
      "message": "Number.parseFloat returns NaN if it can\u0027t parse. Can you use that instead of relying on isFloat? Depending on whether you want to continue to use bytes (vs change to MB, for example), you might want to use parseInt?",
      "range": {
        "startLine": 212,
        "startChar": 3,
        "endLine": 212,
        "endChar": 33
      },
      "revId": "b642f07ea4f339e3c92b079e0075efcb22b43b65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "993ec58a_216cf5de",
        "filename": "front_end/resources/ClearStorageView.js",
        "patchSetId": 15
      },
      "lineNbr": 230,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-10-27T11:06:36Z",
      "side": 1,
      "message": "quotaInBytes",
      "range": {
        "startLine": 230,
        "startChar": 22,
        "endLine": 230,
        "endChar": 31
      },
      "revId": "b642f07ea4f339e3c92b079e0075efcb22b43b65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ae2e1cd_c5dd3d45",
        "filename": "front_end/resources/ClearStorageView.js",
        "patchSetId": 15
      },
      "lineNbr": 367,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-10-27T11:06:36Z",
      "side": 1,
      "message": "Please don\u0027t use inner HTML. You can use return UI.Fragment.Fragment.build (see usages in the codebase).",
      "range": {
        "startLine": 367,
        "startChar": 19,
        "endLine": 367,
        "endChar": 29
      },
      "revId": "b642f07ea4f339e3c92b079e0075efcb22b43b65",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}