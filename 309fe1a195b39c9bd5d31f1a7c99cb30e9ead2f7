{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "81ec23ef_d86246b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-09-18T17:06:59Z",
      "side": 1,
      "message": "i can dig it.",
      "revId": "309fe1a195b39c9bd5d31f1a7c99cb30e9ead2f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f2786a_201c7aa2",
        "filename": "front_end/panels/timeline/components/insights/Table.ts",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-09-18T17:06:59Z",
      "side": 1,
      "message": "this looked a little repetitive so i tried to DRY it. \nthis works. but i\u0027m not attached, so whatever you want.\n\n```suggestion\n\n  #handleRowEvent(\n      e: MouseEvent, callback: (index: number, rowEl: HTMLTableRowElement) \u003d\u003e void): void {\n    if (!callback || !(e.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const rowEl \u003d e.target.closest(\u0027tr\u0027);\n    if (!rowEl || !rowEl.parentElement) {\n      return;\n    }\n\n    const index \u003d [...rowEl.parentElement.children].indexOf(rowEl);\n    if (index \u003d\u003d\u003d -1 || (e.type \u003d\u003d\u003d \u0027mouseover\u0027 \u0026\u0026 index \u003d\u003d\u003d this.#currentHoverIndex)) {\n      return;\n    }\n\n    this.#currentHoverIndex \u003d index;\n    callback(index, rowEl);\n  }\n\n  #onHoverRow(e: MouseEvent): void {\n    this.#handleRowEvent(e, (i, el) \u003d\u003e this.#onHoverRowCallback?.(i, el));\n  }\n\n  #onClickRow(e: MouseEvent): void {\n    this.#handleRowEvent(e, (i, el) \u003d\u003e this.#onClickRowCallback?.(i, el));\n  }\n```",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 79,
        "endChar": 3
      },
      "revId": "309fe1a195b39c9bd5d31f1a7c99cb30e9ead2f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddfb71f5_2e2b0be6",
        "filename": "front_end/panels/timeline/components/insights/Table.ts",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-09-18T17:27:06Z",
      "side": 1,
      "message": "I tried that too, but didn\u0027t like the readability of it. In fact there\u0027s a bug here because you are setting the currentHoverIndex even for click :) Easier to understand the code when repeating a bit.",
      "parentUuid": "92f2786a_201c7aa2",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 79,
        "endChar": 3
      },
      "revId": "309fe1a195b39c9bd5d31f1a7c99cb30e9ead2f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a DevTools committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-devtools-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-devtools-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-devtools-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "309fe1a195b39c9bd5d31f1a7c99cb30e9ead2f7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "309fe1a195b39c9bd5d31f1a7c99cb30e9ead2f7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "309fe1a195b39c9bd5d31f1a7c99cb30e9ead2f7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}