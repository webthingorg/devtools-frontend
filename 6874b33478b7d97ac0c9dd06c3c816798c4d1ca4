{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7c5385e3_d2d4a1df",
        "filename": "front_end/panels/freestyler/FreestylerAgent.ts",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2024-07-12T06:05:12Z",
      "side": 1,
      "message": "technically, it is an expression, not a function",
      "revId": "6874b33478b7d97ac0c9dd06c3c816798c4d1ca4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a09892a3_a113d8dd",
        "filename": "front_end/panels/freestyler/FreestylerAgent.ts",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2024-07-12T06:05:12Z",
      "side": 1,
      "message": "throw new Error(\u0027Output exceeded the maximum allowed length\u0027) so that the error is serialized the same way in the catch block?",
      "revId": "6874b33478b7d97ac0c9dd06c3c816798c4d1ca4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3573fdad_df2439b3",
        "filename": "front_end/panels/freestyler/FreestylerEvaluateAction.ts",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2024-07-12T06:05:12Z",
      "side": 1,
      "message": "Let\u0027s separate this change into a separate CL:\n\n1) only include if the class list not empty\n2) include id attribute if present\n3) let\u0027s add/update tests",
      "revId": "6874b33478b7d97ac0c9dd06c3c816798c4d1ca4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}