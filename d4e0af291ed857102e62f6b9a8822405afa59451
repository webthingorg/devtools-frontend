{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f3f30d5e_79254f58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-06-21T08:53:45Z",
      "side": 1,
      "message": "PTAL and check the inline questions :-)\n\nThe web test failure is due to one test accessing \"_listeners\" directly ðŸ˜ž:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/http/tests/devtools/sources/debugger-breakpoints/breakpoint-manager-listeners-count.js;l\u003d29;drc\u003db45fa001f7d5b3cec5a5264e85186626d0c362d9\n\nWe\u0027ll have to do the standard 3-way dance.",
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e990bee_5a8da9aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2021-06-21T09:04:25Z",
      "side": 1,
      "message": "LGTM. Tim, any additional thoughts?",
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cd5b2e5_2fc7ebbe",
        "filename": "front_end/core/common/Object.ts",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-06-21T09:57:10Z",
      "side": 1,
      "message": "Nit: initialize `Map` in the property itself.",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c814ab4d_2a7988e3",
        "filename": "front_end/core/common/Object.ts",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-06-21T10:31:47Z",
      "side": 1,
      "message": "Initially, I was thinking the same, but then again, ObjectWrapper is the base class for a LOT of things in DevTools and I\u0027m not sure what the overhead of tons of empty Maps would be. I\u0027d err on the side of caution and keep (roughly) the existing memory footprint. Wdyt?",
      "parentUuid": "7cd5b2e5_2fc7ebbe",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 45,
        "endChar": 5
      },
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08a4fe5c_9783a0b6",
        "filename": "front_end/core/common/Object.ts",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-06-21T08:53:45Z",
      "side": 1,
      "message": "Paul, Tim, do you think iterating on a copy is necessary? Iterating a set that is actively modified is safe to do as per spec. E.g. a listener could add/remove new listeners. Do we really care if in those cases the event is will be already dispatched to new listeners or now already omitted for deleted listeners?",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7260e8ac_3dc092d8",
        "filename": "front_end/core/common/Object.ts",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2021-06-21T09:04:25Z",
      "side": 1,
      "message": "Well it can be its own class of bugs to do it this way. If callback A unregisters callback B, but the listeners were [A, B] at the time of copy we erroneously call B after A.\n\nThat said I feel like I lack context here to call it either way. However, if I were building this fresh I would take a live set over a snapshotted one.",
      "parentUuid": "08a4fe5c_9783a0b6",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c103190_d01f12ce",
        "filename": "front_end/core/common/Object.ts",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-06-21T09:57:10Z",
      "side": 1,
      "message": "Yeah I am not sure what a change in behavior will have as effect on the wider codebase. Since we aren\u0027t sure, I would err on the side of caution and maintain the existing behavior. I think the existing behavior is a live set, so I guess we should not do the copy here?",
      "parentUuid": "7260e8ac_3dc092d8",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5f61b6a_999c924a",
        "filename": "front_end/core/common/Object.ts",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-06-21T10:31:47Z",
      "side": 1,
      "message": "No, the existing behavior is also a copy (see the `slice` call).",
      "parentUuid": "0c103190_d01f12ce",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "d4e0af291ed857102e62f6b9a8822405afa59451",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}