{
  "comments": [
    {
      "key": {
        "uuid": "bb42082c_dbf78a89",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-01-22T14:56:48Z",
      "side": 1,
      "message": "nit: after the null-check, this has to be a string if the types are correct.",
      "range": {
        "startLine": 81,
        "startChar": 72,
        "endLine": 81,
        "endChar": 80
      },
      "revId": "30542da0d247e783d0902fa9244ded0eb7ae6c33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4078e5fd_3b372041",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 10
      },
      "lineNbr": 282,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-01-22T14:56:48Z",
      "side": 1,
      "message": "If I were to read this, I wouldn\u0027t know what code is. What is the string representing? Or is it up to the plugin?",
      "range": {
        "startLine": 278,
        "startChar": 4,
        "endLine": 282,
        "endChar": 14
      },
      "revId": "30542da0d247e783d0902fa9244ded0eb7ae6c33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c60ebd12_80783e44",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 10
      },
      "lineNbr": 329,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-01-22T14:56:48Z",
      "side": 1,
      "message": "symbolsURL? In general, if we expect contributors to implement this interface you could add an explanatory sentence after each argument name, like\n\n@param {string} symbolsURL - URL of a file providing the debug symbols for this module\n\n(provided that my sample description is correct).",
      "range": {
        "startLine": 329,
        "startChar": 21,
        "endLine": 329,
        "endChar": 28
      },
      "revId": "30542da0d247e783d0902fa9244ded0eb7ae6c33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a32d19a2_20416035",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 10
      },
      "lineNbr": 331,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-01-22T14:56:48Z",
      "side": 1,
      "message": "Here it is hard to guess what this array represents. Could you add a comment please?\n\nWould it be better if all of these functions returned objects with named properties? Then:\n  - the name could be chosen descriptively and hence serve as initial documentation hint\n  - we could add more properties if we later want to add (optional) information",
      "range": {
        "startLine": 331,
        "startChar": 13,
        "endLine": 331,
        "endChar": 39
      },
      "revId": "30542da0d247e783d0902fa9244ded0eb7ae6c33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28bccd8b_fda2785d",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 10
      },
      "lineNbr": 355,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-01-22T14:56:48Z",
      "side": 1,
      "message": "Only those of the innermost scope, or of all enclosing scopes? How does the client of this function learn in which scope they are? Or are we not (yet) making any distinctions about the different scopes of the source language?\n\nIn general, are these functions taking raw locations as argument? Wouldn\u0027t it make more sense to pass in UI locations? In any case, we should explain the why in a comment here.",
      "range": {
        "startLine": 355,
        "startChar": 28,
        "endLine": 355,
        "endChar": 41
      },
      "revId": "30542da0d247e783d0902fa9244ded0eb7ae6c33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1d87da9_1325584d",
        "filename": "front_end/bindings/DebuggerLanguagePlugins.js",
        "patchSetId": 10
      },
      "lineNbr": 363,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-01-22T14:56:48Z",
      "side": 1,
      "message": "How is the lexical scope actually given? This function gets a raw location, which by itself and without translation isn\u0027t connected to a lexical scope?",
      "range": {
        "startLine": 363,
        "startChar": 46,
        "endLine": 363,
        "endChar": 65
      },
      "revId": "30542da0d247e783d0902fa9244ded0eb7ae6c33",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}