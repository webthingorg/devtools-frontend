{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e4b910e_00450e75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-08-30T10:06:27Z",
      "side": 1,
      "message": "(I think, once the indentation question is resolved, it might be a good idea to start moving towards merging this and https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/3107134 — so that I can move on with further patches without building up too deep a stack of interdependent change sets.)",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc92c474_6e3b6112",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-31T11:26:27Z",
      "side": 1,
      "message": "Let\u0027s align indentation with VS Code, e.g. maintain the current version.\n\nWith respect to the indentation issues I posted: that seems to be the case where we don\u0027t detect the indentation of the current document. E.g. if I explicitly set my indentation to 4 spaces, despite the HTML document being indented with 2 spaces, it uses 4 spaces. I just checked and we currently do the same in stable, so I think it is fine to keep the behavior as-is and disregard my indentation comments.\n\nUnfortunately I still can\u0027t enter the \"\u003c\" character on Mac. Do we still need to fix that bug?\n\nAnd +1 to not letting the chain get too deep.",
      "parentUuid": "2e4b910e_00450e75",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bad4841_985a3b6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-08-31T11:39:56Z",
      "side": 1,
      "message": "\u003e Unfortunately I still can\u0027t enter the \"\u003c\" character on Mac. Do we still need to fix that bug?\n\nThat sounds bad. I don\u0027t have a dev environment set up on a Mac though—is there a way to \u0027transplant\u0027 my devtools build from Linux to a Chrome that I can run on Mac, without pulling in all those tools, or should I set up the entire environment?",
      "parentUuid": "bc92c474_6e3b6112",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3086702a_e34c70cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-31T11:45:17Z",
      "side": 1,
      "message": "You can run any Chrome binary with the path to a local copy of DevTools. So what you can do is zip up your `out/Default/gen` directory and then send the zip to your Mac, unzip there and then it \"should just work\". Let me know if you run into any issues and I can help you debug/supply you my build.\n\nP.S. Did you see the stacktrace I posted in an earlier comment? Maybe that can give some pointers as to what is going on maybe?",
      "parentUuid": "1bad4841_985a3b6d",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90817b85_804a9b54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-08-31T12:03:31Z",
      "side": 1,
      "message": "\u003e P.S. Did you see the stacktrace I posted in an earlier comment? \n\nI did not, and seem to have missed a bunch of comments due to not knowing how this tool works.",
      "parentUuid": "3086702a_e34c70cb",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cba18b0d_a6ede370",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-31T13:01:07Z",
      "side": 1,
      "message": "No worries!",
      "parentUuid": "90817b85_804a9b54",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab865117_ddae970e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-08-31T16:36:04Z",
      "side": 1,
      "message": "Though I wasn\u0027t able to reproduce this on typing \u0027\u003c\u0027, I ran into a crash with an identical stack trace, which I assume is the same issue. I\u0027m including a fix in Lezer in the third_party changeset which addresses it.",
      "parentUuid": "90817b85_804a9b54",
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26a2e9e3_4d5d33c1",
        "filename": "front_end/panels/elements/ElementsTreeElement.ts",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-31T11:26:27Z",
      "side": 1,
      "message": "One thought I had: since CodeMirror.next is relatively large (not terribly, but still quit a bit), I wonder if we can lazily load the editor when we need to? E.g. I think we can do the following and avoid the static import:\n\n```\nconst TextEditor \u003d await import(\u0027../../ui/components/text_editor/text_editor.js\u0027);\nconst CodeMirror \u003d await import(\u0027../../third_party/codemirror.next/codemirror.next.js\u0027);\nconst editor \u003d new TextEditor.TextEditor.TextEditor(CodeMirror.EditorState.create({\n```\n\nYou will still need the `TextEditor` import for the type, but then we can change that into `import type * as TextEditor`.\n\nThis is not only nice during the migration, but also saves the user from loading the code until the editor is actually needed, which is a small optimization anyways.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 83
      },
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc12e93c_f01ee626",
        "filename": "front_end/panels/elements/ElementsTreeElement.ts",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-08-31T11:39:56Z",
      "side": 1,
      "message": "That\u0027s an interesting idea. I think eventually, when this is also wired into the console prompt, there will be _very_ few ways to have the devtools open that don\u0027t require the editor, though. Given that, do you still think this is worthwhile?",
      "parentUuid": "26a2e9e3_4d5d33c1",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 83
      },
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "185515db_1f75c384",
        "filename": "front_end/panels/elements/ElementsTreeElement.ts",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-08-31T11:45:17Z",
      "side": 1,
      "message": "Yes that\u0027s true, but I would like to be cautious here. E.g. until we switch over the console prompt, we are still in a state where we would load 2 CodeMirrors on bootup (since most users have both the Elements panel and Console panel open at bootup).\n\nSo given that it is a relatively trivial change, I think it is safer to go for that for now. Later, we can clean things up again once we remove the old CodeMirror version. WDYT?",
      "parentUuid": "dc12e93c_f01ee626",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 83
      },
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d891e5df_e0068448",
        "filename": "front_end/panels/elements/ElementsTreeElement.ts",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-08-31T16:36:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "185515db_1f75c384",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 83
      },
      "revId": "b5ffd89d721c9cb8a30be86a32a9ea4532c253ca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}