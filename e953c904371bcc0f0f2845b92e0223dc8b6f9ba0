{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cec506a6_6b64cdc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-29T15:07:00Z",
      "side": 1,
      "message": "Hey folks, can you PTAL?\n\nAdded @kimanh@chromium.org as a reviewer from GM3 side but please feel free to nominate someone else for the review :)",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a75561_374196f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2024-07-29T16:00:55Z",
      "side": 1,
      "message": "One thing I realized after sending the CL is, I didn\u0027t do focus handling \u0026 styling for accessibility. I\u0027ll do it tomorrow ðŸ˜…",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24de3212_36cd1358",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:05:03Z",
      "side": 1,
      "message": "Hi ErgÃ¼n!\n\nFirst off, thanks a lot for thinking of explicitly adding me as a reviewer here :)! \n\nI have added some comments regarding the styles. Also, sorry for the noise on your bug with the deleted comment, I\u0027ve taken your approach with taking screenshots and attaching it to a closed bug for CL reviews ðŸ˜„, but I accidentally added the screenshot on the wrong bug.\n\nLet me know if there are things that should be clarified regarding the styles! I\u0027m also happy to drop by.",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ad583fc_d92b6a15",
        "filename": "front_end/ui/components/docs/switch_control/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-07-30T01:32:41Z",
      "side": 1,
      "message": "```suggestion\n# Copyright 2024 The Chromium Authors. All rights reserved.\n```",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a95c721_d8385494",
        "filename": "front_end/ui/components/docs/switch_control/basic.html",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-07-30T01:32:41Z",
      "side": 1,
      "message": "nit: 2024",
      "range": {
        "startLine": 2,
        "startChar": 12,
        "endLine": 2,
        "endChar": 16
      },
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "816c1f52_42dcdd37",
        "filename": "front_end/ui/components/docs/switch_control/basic.ts",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-07-30T01:32:41Z",
      "side": 1,
      "message": "```suggestion\n// Copyright 2024 The Chromium Authors. All rights reserved.\n```",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0da85baa_53101ec0",
        "filename": "front_end/ui/components/switch_control/SwitchControl.test.ts",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-07-30T01:32:41Z",
      "side": 1,
      "message": "```suggestion\n  it(\u0027should emit SwitchControlChangeEvent whenever the checkbox inside is changed\u0027, async () \u003d\u003e {\n```",
      "range": {
        "startLine": 23,
        "startChar": 18,
        "endLine": 23,
        "endChar": 42
      },
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27fb00c4_fad72833",
        "filename": "front_end/ui/components/switch_control/SwitchControl.ts",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:05:03Z",
      "side": 1,
      "message": "Question: I can see that this is passing in the tests, but I\u0027m just wondering how ðŸ˜„ maybe you could explain: the parameter `checked` isn\u0027t used, how come that it exists and is set on the change event?",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae531a2b_5cbdf18f",
        "filename": "front_end/ui/components/switch_control/SwitchControl.ts",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-07-30T01:32:41Z",
      "side": 1,
      "message": "Would just `Switch` be a possible name for the component too, or would this cause a conflict somewhere?",
      "range": {
        "startLine": 17,
        "startChar": 13,
        "endLine": 17,
        "endChar": 26
      },
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a69fa238_925e1cc4",
        "filename": "front_end/ui/components/switch_control/SwitchControl.ts",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:05:03Z",
      "side": 1,
      "message": "+1 to this; `Switch` is also used for basic components within Chrome.",
      "parentUuid": "ae531a2b_5cbdf18f",
      "range": {
        "startLine": 17,
        "startChar": 13,
        "endLine": 17,
        "endChar": 26
      },
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e87313e8_61355506",
        "filename": "front_end/ui/components/switch_control/SwitchControl.ts",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:05:03Z",
      "side": 1,
      "message": "Is there a reason for using the `render` method directly, instead of scheduling it (`ComponentHelpers.ScheduledRender.scheduleRender`)?",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a45afede_33ed38ba",
        "filename": "front_end/ui/components/switch_control/SwitchControl.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-07-30T01:32:41Z",
      "side": 1,
      "message": "I\u0027m not sure, but maybe `?checked\u003d${this.#checked}` would work as well?",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 66
      },
      "fixSuggestions": [
        {
          "fixId": "885dfff7_0e5e7b12",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/ui/components/switch_control/SwitchControl.ts",
              "range": {
                "startLine": 48,
                "startChar": 0,
                "endLine": 49,
                "endChar": 0
              },
              "replacement": "        ?checked\u003d${this.#checked}\u003e\n"
            }
          ]
        }
      ],
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc8e9080_da71b59d",
        "filename": "front_end/ui/components/switch_control/switchControl.css",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:05:03Z",
      "side": 1,
      "message": "We should use `--sys-size` variables now, e.g. this one would be `--sys-size-8`. This also applies to the other height/widths in the file. They are defined in https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/ui/legacy/designTokens.css;l\u003d16;drc\u003d64f76d758f1f1ec9f7aa8fbf2b45ddd16ce99765.\n\nSee also the design kit regarding px/rem:\nhttps://www.figma.com/design/A5iQBBNAe5zPFpJvUzUgW8/CDT-design-kit?node-id\u003d481-2334\n\n(On a side note, I guess it would be helpful to have px values added as comments to the `designTokens.css`, will take care of that!)\n\nDesign Tokens describe standard tokens for colors, type fonts, sizes, radius etc.",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a681503a_5e6622ce",
        "filename": "front_end/ui/components/switch_control/switchControl.css",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:05:03Z",
      "side": 1,
      "message": "Generally: We only want to use `--ref` colors in exceptions, since we need to define light/dark colors for them (as you did here). Mostly, there should already be a `--sys` color that exists that you can use, which changes with light/dark mode automatically.\n\nLooking at the colors: Peter has already defined the colors that you can use, as an example, see https://g-issues.chromium.org/action/issues/356309687/attachments/58290902?download\u003dfalse.\n\nThe colors directly translate to the code using the prefix `--sys-color`, i.e. `--sys-color-outline`. If Peter hasn\u0027t defined any specific color for the dark modes, then I assume it should already be the correct color in dark mode too, but please double check! If the dark mode colors do not fit, you can overwrite them for dark mode.\n\nThis comment applies to all colors that are used here. The `--color-primary` is legacy and still used in a few places, and should no longer be used. There should also be a `--sys-color` that you can use for it.",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc1887bc_7525111f",
        "filename": "front_end/ui/components/switch_control/switchControl.css",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2024-07-30T08:29:37Z",
      "side": 1,
      "message": "We also have design tokens for border radius, see https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/ui/legacy/designTokens.css;l\u003d62;drc\u003d64f76d758f1f1ec9f7aa8fbf2b45ddd16ce99765.\n\nIt looks as if this could be `--sys-shape-corner-full`.\n\nSame for the other border radius in this file.",
      "revId": "e953c904371bcc0f0f2845b92e0223dc8b6f9ba0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}