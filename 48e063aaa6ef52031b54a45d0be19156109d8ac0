{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "39dbc05d_521535ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-17T00:44:15Z",
      "side": 1,
      "message": "Some more UX-y feedback. I\u0027ve used this feature quite a bit and watched its development, and.. I think there\u0027s room to tweak things to improve understanding. \nLet me know what you think.",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d17731e_d98426a3",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-17T00:44:15Z",
      "side": 1,
      "message": "I\u0027d much prefer if we show these values as milliseconds.  DevTools doesn\u0027t have any other spot where it uses microseconds (that I know of!).  The concern of microseconds was also brought up a couple times here: https://github.com/MicrosoftEdge/DevTools/issues/98\n\n(And yes I understand they\u0027ll almost always be smaller than 0.0 ms )",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "add55bd9_86c72736",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2024-03-05T18:59:14Z",
      "side": 1,
      "message": "Updated to show ms instead of us as suggested. Thanks.",
      "parentUuid": "6d17731e_d98426a3",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a71379bc_fa97aad0",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-17T00:44:15Z",
      "side": 1,
      "message": "Only very few people understand what this number means. Luckily Nolan Lawson explained the selector matching bloom filter (https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/ ) , but.. it\u0027s still incredibly esoteric knowledge. \n\nThe best I\u0027ve come up with this is switching this to a percentage (`fastRejectCount/(matchAttemptCount-MatchCount)`) and framing it as \"% of slow-path non-matches\".  I think this is a small improvement over the current framing. It\u0027ll definitely need docs regardless.",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52bc7631_be656f04",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2024-03-05T18:59:14Z",
      "side": 1,
      "message": "Added a new column of \"% of slow-path non-matches\" as suggested. Thanks.",
      "parentUuid": "a71379bc_fa97aad0",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc9965d7_7e2144b9",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-17T00:44:15Z",
      "side": 1,
      "message": "I feel like showing",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a346a1ba_b7ce948e",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2024-03-05T18:59:14Z",
      "side": 1,
      "message": "Do you prefer not showing \u0027Match Count\u0027?",
      "parentUuid": "bc9965d7_7e2144b9",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33e9d946_a4ab17a2",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-03-07T01:32:33Z",
      "side": 1,
      "message": "oops didnt finish my comment.  I\u0027m slightly considering that \u0027Match hit %\u0027 is going to be more useful.. But.. I\u0027m not sure. This is a small tweak IMO so I\u0027m fine to consider it after the CL lands.\n\nLet\u0027s go ahead with Match Count  :)",
      "parentUuid": "a346a1ba_b7ce948e",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59f924dd_5a047f84",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-17T00:44:15Z",
      "side": 1,
      "message": "When moving around a trace and watching the aggregated selectorstats update.. i notice that the datagrid can switch to showing the very bottom rows. Can you reproduce this?\n\nI\u0027m guessing that there\u0027s some scroll logic that is defaulting to \"bottom items win\", but we\u0027d definitely want to be always be viewing the top rows of the datagrid, as it changes.\n\nMy only guess is the datagrid\u0027s default favors the Protocol Monitor or Network panel, where you want to prioritize the bottom. I\u0027m unfamiliar with it\u0027s impl or options, but hopefully you can find an option that will resolve this :)",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcdec905_20b49c98",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2024-03-05T18:59:14Z",
      "side": 1,
      "message": "I can reproduce this issue. It is related to the function `shouldAutoScrollToBottom` in the DataGrid class. It happens when 1) user has scrolled to the button of the datagrid then, 2) rerun profiling. Looks like a feature in datagrid but I can add a flag to disable this feature for selector stats in datagrid if preferred.",
      "parentUuid": "59f924dd_5a047f84",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c30d2e4e_0826777b",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-03-07T01:32:33Z",
      "side": 1,
      "message": "Ah that\u0027s it yup!  \nI\u0027m fine if you want to fix this in a follow-up CL.  I\u0027m not very familiar with this DataGrid component and don\u0027t know what kind of fix the owners prefer. But generally some option to disable the autoScrollToBottom makes sense to me.  :)",
      "parentUuid": "fcdec905_20b49c98",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff7a0936_b2e3d6e3",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2024-03-13T23:03:15Z",
      "side": 1,
      "message": "I\u0027ll created a follow-up CL to update the datagrid component.",
      "parentUuid": "c30d2e4e_0826777b",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "846c2545_cf5e3b59",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 112,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-02-17T00:44:15Z",
      "side": 1,
      "message": "move this column after match count, before Selector ?   I don\u0027t see a good reason why it should be second. But let me know if you got one. :)",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac83546d_b38147b4",
        "filename": "front_end/panels/timeline/TimelineSelectorStatsView.ts",
        "patchSetId": 10
      },
      "lineNbr": 112,
      "author": {
        "id": 1429976
      },
      "writtenOn": "2024-03-05T18:59:14Z",
      "side": 1,
      "message": "updated as suggested. Thanks.",
      "parentUuid": "846c2545_cf5e3b59",
      "revId": "48e063aaa6ef52031b54a45d0be19156109d8ac0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}