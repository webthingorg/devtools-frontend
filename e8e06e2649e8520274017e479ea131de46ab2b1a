{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "877751f5_13c4ce6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2021-02-12T13:11:55Z",
      "side": 1,
      "message": "PTAL ",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5247c048_a8c41bec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-15T04:48:42Z",
      "side": 1,
      "message": "This looks good, Alex, thanks!\n\nJust curious - you\u0027re now no longer using requestRootNode at all? We have a CDP method for this which requests the first n levels of the tree (n \u003d\u003d 3, usually). Was there an issue with using that method, or is this pattern preferred?",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b079e032_6019152a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-15T04:56:13Z",
      "side": 1,
      "message": "disregard last comment, realised that you had moved the preloading call to AccessibilityTreeView instead.",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e9f1379_f7b0e306",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-15T05:30:37Z",
      "side": 1,
      "message": "lgtm",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc39f3bf_e4d1ba05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1475325
      },
      "writtenOn": "2021-02-15T06:35:13Z",
      "side": 1,
      "message": "LGTM thanks!",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c28ccfa_eb482bcc",
        "filename": "front_end/elements/AccessibilityNode.ts",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-15T04:48:42Z",
      "side": 1,
      "message": "nit: Should we make childAXNodes a non private variable?",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f292df25_12ddafc4",
        "filename": "front_end/elements/AccessibilityTree.ts",
        "patchSetId": 4
      },
      "lineNbr": 156,
      "author": {
        "id": 1475325
      },
      "writtenOn": "2021-02-15T06:35:13Z",
      "side": 1,
      "message": "Just to clarify my own understanding, why does this function also need to be async? Is it because refreshAccessibilityTree() is?",
      "range": {
        "startLine": 156,
        "startChar": 10,
        "endLine": 156,
        "endChar": 15
      },
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a5737da_6be3b057",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-15T05:30:37Z",
      "side": 1,
      "message": "nit: can you add a comment here explaining the difference between these two? i.e some children aren\u0027t loaded in the model but exist and need to be fetched, I find it difficult to follow when there are multiple things called children. Something like:\n\n```\nsdkNode.numChildren() contains the true count of children for an accessibility node stored in the backend, whereas axChildren only contains children that have been loaded into the model. In the case where these differ, the children need to be fetched and loaded into the model in order to be displayed on screen.\n```\n\n\nSomething less verbose than that would be good, too.",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312e27f2_aa7dd48c",
        "filename": "test/unittests/front_end/elements/AccessibilityNode_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1323906
      },
      "writtenOn": "2021-02-15T05:30:37Z",
      "side": 1,
      "message": "Is it worth having a test for click behaviour of nodes with no children? Not sure if we typically test the sad path.",
      "revId": "e8e06e2649e8520274017e479ea131de46ab2b1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}