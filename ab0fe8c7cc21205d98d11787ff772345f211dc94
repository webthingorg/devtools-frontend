{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2e32f9d2_85da711e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:09:40Z",
      "side": 1,
      "message": "This seems very unittestable.",
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64e581d2_cccf2f57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-15T15:29:37Z",
      "side": 1,
      "message": "Indeed checkContrast is not tested. I talked to alex who implemented it and it is doing exactly what we want (I also tested e2e), because of that I honestly just copied the implementation, since nothing appeared to me checkContrast specifically.\n\nThanks for pointing out what makes sense or not.",
      "parentUuid": "2e32f9d2_85da711e",
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2068b387_0cf56ff6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-15T15:32:25Z",
      "side": 1,
      "message": "To be honest, this class only forwards to checkFormsIssues on devtools open, so there is no real logic. I am not sure what assertion makes sense here, only and e2e test would make sense.",
      "parentUuid": "64e581d2_cccf2f57",
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb462b6_2c054d5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:52:27Z",
      "side": 1,
      "message": "Yeah, this is the logic. We should have a unit test that would `sinon.stub` the `invoke_checkFormsIssues` and verify that it is called when expected. For example see https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/test/unittests/front_end/core/sdk/EmulationModel_test.ts;l\u003d43?q\u003d%22invoke_%22%20lang:ts%20f:unittest%20%22stub(%22",
      "parentUuid": "2068b387_0cf56ff6",
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23e8d2f0_e924fc51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-16T13:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cb462b6_2c054d5b",
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52a02262_ce1afea9",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:09:40Z",
      "side": 1,
      "message": "SDK.TargetManager.TargetManager.instance().addModelListener(\n      SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load,\n      this.#pageLoaded, this, {scoped: true});",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 100
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d5286ea_10954433",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-15T15:29:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52a02262_ce1afea9",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 100
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "340426ec_ca6c237d",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:09:40Z",
      "side": 1,
      "message": "This is very backwards. It should suffice to do something like\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(    \n        SDK.ResourceTreeModel.ResourceTreeModel)) {\n      this.#checkFormsIssues(model);\n    }",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 100
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a926853f_a31e66da",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-15T15:29:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "340426ec_ca6c237d",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 100
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e273b82_91afb19b",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:52:27Z",
      "side": 1,
      "message": "Sorry, what I meant was to do it only once in the constructor and remove this event listener completely.",
      "parentUuid": "a926853f_a31e66da",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 100
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "601e1dd7_2906e2f3",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-16T13:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e273b82_91afb19b",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 100
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542508e1_dec62fad",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:09:40Z",
      "side": 1,
      "message": "Does checkFormIssues walk the frame tree recursivelys?",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "782b88ae_03a7f114",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-15T15:29:37Z",
      "side": 1,
      "message": "It will check forms in every frame. This check indeed makes no sense, it is probably checkContrast specific.",
      "parentUuid": "542508e1_dec62fad",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c401f512_0280921e",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:52:27Z",
      "side": 1,
      "message": "If it does check in every frame also including OOPIF, you would only need to call checkFormIssues for outermost targets in the constructor, i.e.\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(    \n        SDK.ResourceTreeModel.ResourceTreeModel)) {\n      if (model.target().outermostTarget() !\u003d model.target()) continue;\n      this.#checkFormsIssues(model);\n    }",
      "parentUuid": "782b88ae_03a7f114",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83cf601a_0b0fef4a",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-16T13:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c401f512_0280921e",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d951c23_4de761e6",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-05-15T15:09:40Z",
      "side": 1,
      "message": "contrast?",
      "range": {
        "startLine": 69,
        "startChar": 58,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2582928c_1838b20d",
        "filename": "front_end/models/issues_manager/CheckFormsIssuesTrigger.ts",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1523322
      },
      "writtenOn": "2023-05-15T15:29:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d951c23_4de761e6",
      "range": {
        "startLine": 69,
        "startChar": 58,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "ab0fe8c7cc21205d98d11787ff772345f211dc94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}