{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f67d5fcf_79c53cce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-01-13T07:15:52Z",
      "side": 1,
      "message": "Sorry for the whole back and forth. The interaction between different targets is often tricky to get right.",
      "revId": "347b7bd0d73b8d391fe481802c0a9667668c8ce4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2383c4_2bf2b2e9",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-01-13T06:02:51Z",
      "side": 1,
      "message": "You could just resync for `this` DebuggerModel and remove the static method below.",
      "revId": "347b7bd0d73b8d391fe481802c0a9667668c8ce4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ddea058_d391493e",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-01-13T07:15:52Z",
      "side": 1,
      "message": "Not sure if just re-syncing \u0027this\u0027 is sufficient/correct. If \u0027this\u0027 frame navigates, do we need to sync Ids for cross-origin subframes as well? I am unsure whether cross-origin subframes get thrown away and re-created or if they get a \u0027Frame.navigated\u0027 of their own.",
      "parentUuid": "3c2383c4_2bf2b2e9",
      "revId": "347b7bd0d73b8d391fe481802c0a9667668c8ce4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfc91acb_5276396f",
        "filename": "front_end/sdk/DebuggerModel.js",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-01-13T07:15:52Z",
      "side": 1,
      "message": "The code in its current form now contains a data race. \u0027CallStackSidebarPane\u0027 awaits the result of `modelForDebuggerId`, even though it no longer returns a promise. In turn, \u0027resyncDebuggerIdForModels` is not awaited (since it\u0027s triggered in an event, and event handlers are not awaited).\n\nThis means, that if we trigger re-sync and *immediately* afterwards call `modelForDebuggerId`, we return the wrong Id here. as the `syncDebuggerId` is on the Microtask Queue but has not yet run.\n\nThe solution (if we want to do this cleanly), is to store the promise returned by `resyncDebuggerIdForModels` in the event handler. And then `await` that promise in `modelForDebuggerId` and make `modelForDebuggerId` async again.",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 263,
        "endChar": 3
      },
      "revId": "347b7bd0d73b8d391fe481802c0a9667668c8ce4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}