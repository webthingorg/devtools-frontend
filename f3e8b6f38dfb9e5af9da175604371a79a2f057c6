{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "359fc8da_6640b350",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2021-12-16T09:05:31Z",
      "side": 1,
      "message": "PTAL.\nIf you agree that this is the way to proceed, I\u0027ll update the rest of the file accordingly. Currently there are still a few instances of `const size \u003d Object.keys(Something).length + 1`",
      "revId": "f3e8b6f38dfb9e5af9da175604371a79a2f057c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38828ddc_f733a2d5",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-12-16T09:15:45Z",
      "side": 1,
      "message": "Alex, Wolfgang: Wdyt to instead set \"LastValidEnumPosition\" always one higher as the current max:\n\n enum SomeMetric {\n   Foo \u003d 1,\n   Bar \u003d 2,\n   MaxValue \u003d 3,\n }\n \nThen we could have a lint rule that checks for:\n \n InspectorFrontendHostInstance.recordEnumeratedHistogram(\n   EnumeratedHistogram.Metric, value, SomeMetric::MaxValue);\n \nWith typescript-eslint we could check that: a) The types of \"value\" is a variant of \"SomeMetric\", and b) that the third argument to `recordEnumeratedHistogram` is always of the form \"\u003cenum\u003e::MaxValue\".",
      "range": {
        "startLine": 153,
        "startChar": 4,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "f3e8b6f38dfb9e5af9da175604371a79a2f057c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2da2fe8_b847815d",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2021-12-16T09:38:40Z",
      "side": 1,
      "message": "SGTM, and a good opportunity for me to add my first lint rule.",
      "parentUuid": "38828ddc_f733a2d5",
      "range": {
        "startLine": 153,
        "startChar": 4,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "f3e8b6f38dfb9e5af9da175604371a79a2f057c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e9753d2_c3d881fa",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2021-12-20T16:13:37Z",
      "side": 1,
      "message": "I implemented a ESLint check for b) but not for a). I do not think a) is absolutely necessary. Do you have an idea how it could be implemented somewhat easily or do you think it\u0027s fine as it is?",
      "parentUuid": "e2da2fe8_b847815d",
      "range": {
        "startLine": 153,
        "startChar": 4,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "f3e8b6f38dfb9e5af9da175604371a79a2f057c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "921e23fb_339c3520",
        "filename": "front_end/core/host/UserMetrics.ts",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2021-12-21T05:29:54Z",
      "side": 1,
      "message": "For both checks you need type information. We don\u0027t have those types of lint rules in the code base at the moment but there should be examples around existing ESLint rules (https://www.npmjs.com/package/@typescript-eslint/eslint-plugin see the ones in the table with \"requires type information).\n\nThe current rule would also allow \"someObject.MaxValue\" as the third parameter.\n\nI\u0027m fine with landing the rule as-is but ideally we at least try to get a typed rule working as a follow-up.",
      "parentUuid": "3e9753d2_c3d881fa",
      "range": {
        "startLine": 153,
        "startChar": 4,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "f3e8b6f38dfb9e5af9da175604371a79a2f057c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}