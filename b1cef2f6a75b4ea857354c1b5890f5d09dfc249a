{
  "comments": [
    {
      "key": {
        "uuid": "9cddf64e_a24a032f",
        "filename": "front_end/sdk/CSSStyleDeclaration.js",
        "patchSetId": 6
      },
      "lineNbr": 334,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-09-16T08:16:31Z",
      "side": 1,
      "message": "I\u0027m thinking that there might be a simpler fix that doesn\u0027t require the new longhandPropertiesIncludingComputed method, and doesn\u0027t require to go and get the computed styles (which, I suspect, have already been retrieved anyway).\n\nHere, on this line, we check if the particular longhand property is active. Only the properties that haven\u0027t been disabled by the user are considered active.\nThe _allProperties array does contain all of the properties, including the inactive ones, along with their values.\n\nI\u0027m surprised that this method would filter out the inactive properties at all. It\u0027s called longhandProperties, and as such, should return all longhand properties of a given shorthand, with no exceptions.\nSo I\u0027d be tempted to look for longhands inside the this._allProperties array instead of the this._activePropertyMap map and see if that breaks anything else.\n\nIf it does, we could always find the callsites that depended on the longhandProperties() method only returning active properties, and make them do the filtering themselves (with property.activeInStyle()).\n\nThis way, no need for longhandPropertiesIncludingComputed, and no extra call to the backend.",
      "range": {
        "startLine": 334,
        "startChar": 6,
        "endLine": 334,
        "endChar": 65
      },
      "revId": "b1cef2f6a75b4ea857354c1b5890f5d09dfc249a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba55e4e0_0a6e65f5",
        "filename": "front_end/sdk/CSSStyleDeclaration.js",
        "patchSetId": 6
      },
      "lineNbr": 334,
      "author": {
        "id": 1448638
      },
      "writtenOn": "2020-09-16T21:30:03Z",
      "side": 1,
      "message": "Computed styles are available on first view, however computed styles are not refreshed if user adds/changes a property. The computed styles are only refreshed once user navigates to computed tab.\n\nEven the _allProperties array contains the overloaded property and value. For example if style has \n```\nmargin: 10px\nmargin-top: 20px;\n```\n_allProperties contains `margin`, `margin-top`, `margin-bottom`, `margin-right` and ``margin-left`. However `margin-top` here refers to new leading property, ideally there should be two `margin-top` in the array with one inactive but that is not the case.",
      "parentUuid": "9cddf64e_a24a032f",
      "range": {
        "startLine": 334,
        "startChar": 6,
        "endLine": 334,
        "endChar": 65
      },
      "revId": "b1cef2f6a75b4ea857354c1b5890f5d09dfc249a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7fa4be6_9983f90d",
        "filename": "front_end/sdk/CSSStyleDeclaration.js",
        "patchSetId": 6
      },
      "lineNbr": 334,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-09-17T08:38:20Z",
      "side": 1,
      "message": "In this particular case, it wouldn\u0027t be a problem though, would it? \n\nmargin: 10px;\nmargin-top: 20px;\n\nthe computed value of margin-top is 20px, and that\u0027s what the _allProperties array will contain. So we could keep on using it like today to display the longhand value when expanding the margin shorthand (and do the crossing-out, since that\u0027s missing).\n\nBut after re-reading the crbug report, I understand that there\u0027s another side to this problem that I had overloo\\ked:\n\nmargin-top: 20px;\nmargin: 10px;\n\nin this case, the opposite happens, the margin-top property computes to 10px because it is overridden by the margin shorthand. But the _allProperties array still contains 20px as you said.\n\nSorry for missing that, that means my simpler approach won\u0027t work.",
      "parentUuid": "ba55e4e0_0a6e65f5",
      "range": {
        "startLine": 334,
        "startChar": 6,
        "endLine": 334,
        "endChar": 65
      },
      "revId": "b1cef2f6a75b4ea857354c1b5890f5d09dfc249a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "462f8c9b_8135dd2d",
        "filename": "front_end/sdk/CSSStyleDeclaration.js",
        "patchSetId": 6
      },
      "lineNbr": 359,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-09-16T08:16:31Z",
      "side": 1,
      "message": "In case we need to keep this, this can be replaced with this._cssModel.computedStylePromise(node.id)",
      "range": {
        "startLine": 359,
        "startChar": 35,
        "endLine": 359,
        "endChar": 92
      },
      "revId": "b1cef2f6a75b4ea857354c1b5890f5d09dfc249a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b4de891_d2952198",
        "filename": "front_end/sdk/CSSStyleDeclaration.js",
        "patchSetId": 6
      },
      "lineNbr": 359,
      "author": {
        "id": 1448638
      },
      "writtenOn": "2020-09-16T21:30:03Z",
      "side": 1,
      "message": "You are right, I overlooked that, updated.",
      "parentUuid": "462f8c9b_8135dd2d",
      "range": {
        "startLine": 359,
        "startChar": 35,
        "endLine": 359,
        "endChar": 92
      },
      "revId": "b1cef2f6a75b4ea857354c1b5890f5d09dfc249a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}