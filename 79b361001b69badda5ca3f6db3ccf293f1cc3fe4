{
  "comments": [
    {
      "key": {
        "uuid": "c318ee23_eedad501",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1341877
      },
      "writtenOn": "2020-09-01T15:52:04Z",
      "side": 1,
      "message": "Left a comment, otherwise LGTM",
      "revId": "79b361001b69badda5ca3f6db3ccf293f1cc3fe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e2b77bc_d67a7aa1",
        "filename": "front_end/sdk/OverlayModel.js",
        "patchSetId": 3
      },
      "lineNbr": 943,
      "author": {
        "id": 1341877
      },
      "writtenOn": "2020-09-01T15:52:04Z",
      "side": 1,
      "message": "could this be achieved using the current Throttler?\nhttps://chromium.googlesource.com/devtools/devtools-frontend/+/refs/heads/master/front_end/common/Throttler.js",
      "range": {
        "startLine": 943,
        "startChar": 6,
        "endLine": 943,
        "endChar": 15
      },
      "revId": "79b361001b69badda5ca3f6db3ccf293f1cc3fe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "387e5df5_87245d10",
        "filename": "front_end/sdk/OverlayModel.js",
        "patchSetId": 3
      },
      "lineNbr": 943,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-09-02T08:38:34Z",
      "side": 1,
      "message": "My understanding is that a throttle is meant to prevent a function from being called more than 1 time per x ms. In my case, I wanted to debounce as I want a slightly different behavior: as long as the function keeps getting called, I\u0027m not executing it, unless a certain amount of time has passed without it being called again.\nThis is so that if a user is quickly checking on and off grids in the layout panel, I\u0027m not recording anything. I\u0027m only recording once interactions settle.\nBut maybe the Throttler class can do these 2 things. I\u0027ll look into how it\u0027s done and switch to it if it supports my use case.",
      "parentUuid": "9e2b77bc_d67a7aa1",
      "range": {
        "startLine": 943,
        "startChar": 6,
        "endLine": 943,
        "endChar": 15
      },
      "revId": "79b361001b69badda5ca3f6db3ccf293f1cc3fe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e8014cc_8c0e866e",
        "filename": "front_end/sdk/OverlayModel.js",
        "patchSetId": 3
      },
      "lineNbr": 943,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-09-02T08:41:13Z",
      "side": 1,
      "message": "I\u0027m not sure it can be done using the existing throttler, and I\u0027d support doing \"debounce\" in a new function, separate from doing \"throttle\", because I feel like \"throttle\" has the undertone of firing something once in a while, while \"debounce\" will delay the firing until no more signals are received.",
      "parentUuid": "9e2b77bc_d67a7aa1",
      "range": {
        "startLine": 943,
        "startChar": 6,
        "endLine": 943,
        "endChar": 15
      },
      "revId": "79b361001b69badda5ca3f6db3ccf293f1cc3fe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4222d5_3888791c",
        "filename": "front_end/sdk/OverlayModel.js",
        "patchSetId": 3
      },
      "lineNbr": 943,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-09-02T08:53:00Z",
      "side": 1,
      "message": "BTW have you considered moving the debounce helper to /front_end/common/, where the Throttler exists now? It could be in a later CL of course. I feel like this can be useful for other occasions.",
      "parentUuid": "9e8014cc_8c0e866e",
      "range": {
        "startLine": 943,
        "startChar": 6,
        "endLine": 943,
        "endChar": 15
      },
      "revId": "79b361001b69badda5ca3f6db3ccf293f1cc3fe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37628a50_72034f0d",
        "filename": "front_end/sdk/OverlayModel.js",
        "patchSetId": 3
      },
      "lineNbr": 943,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-09-02T08:59:17Z",
      "side": 1,
      "message": "That\u0027s a good point. Usually for things like this, I prefer to wait until there is a second consumer to the new helper function. Otherwise we quickly end up with big common files that actually aren\u0027t that commonly used.\nLooking at the rest of the codebase, I\u0027m not seeing any other occurrences of the word debounce. It could very well be that there are other similar functions hidden away in other places, with other names though. \nWhat do you think? Are you aware of other parts of the code that need to debounce functions? If so, I\u0027m happy to clean this up (move debounce to common, and refactor all call sites to use it).",
      "parentUuid": "cc4222d5_3888791c",
      "range": {
        "startLine": 943,
        "startChar": 6,
        "endLine": 943,
        "endChar": 15
      },
      "revId": "79b361001b69badda5ca3f6db3ccf293f1cc3fe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}