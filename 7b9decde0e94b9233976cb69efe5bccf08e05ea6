{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ba7ac608_32217612",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-12-08T09:16:16Z",
      "side": 1,
      "message": "can you check in with Ergun on this change please? I know the setting to 0/Infinity is important I think for some of the network panel behaviour.\n\nI know right now this wouldn\u0027t break because breadcrumbs are not turned on, but when they get turned on for everyone I think this CL might cause the network panel to break. But I am not sure of the details, but Ergun is ðŸ˜Š",
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c479263_b0102296",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1593257
      },
      "writtenOn": "2023-12-08T13:15:00Z",
      "side": 1,
      "message": "Jack and I discussed it in chat, Breadcrumbs are enabled in TimelineMinimap, which is only used in Performance panel. TimelineMinimap has its own instance of TimelineOverviewPane so breadcrumbs should not be affecting other panels ðŸ˜Š",
      "parentUuid": "ba7ac608_32217612",
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b48a0a43_05860bab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-12-08T14:12:49Z",
      "side": 1,
      "message": "I\u0027ve tested this and I think it breaks the behavior.\n\n* Open a new tab with your CL included, visit a website and inspect devtools\n* Paste this to the console `setInterval(() \u003d\u003e fetch(\u0027image.svg\u0027), 1000);`\n* Then, in the timeline, drag it to include only one request.\n* Then, double click in timeline to reset the bounds to the full\n\nWhat happens is:\n* When the new requests come, the selected area in timeline grid shrinks\n\nHowever,\n* We expect the selected area not to shrink.\n\nSadly I don\u0027t know what the exact dependency between Network panel\u0027s timeline grid usage and performance panel\u0027s; but this change is breaking the behavior ðŸ˜…",
      "parentUuid": "6c479263_b0102296",
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe28b1a_befcd7a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-12-08T14:13:34Z",
      "side": 1,
      "message": "(ah don\u0027t forget to enable the breadcrumbs before testing ðŸ˜…)",
      "parentUuid": "b48a0a43_05860bab",
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68d046e0_28a417cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-12-11T11:28:25Z",
      "side": 1,
      "message": "We ended up fixing this a different way via a larger refactor in crrev.com/c/5106049, I have checked and that CL did not break the network panel. Will mark this CL as abandoned.",
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61cf856e_369b1c6e",
        "filename": "front_end/ui/legacy/components/perf_ui/TimelineOverviewPane.ts",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-12-08T14:16:47Z",
      "side": 1,
      "message": "let\u0027s make sure this is definitely always going to be false when this component is used in the network panel.\n\nIt may even make sense to add a flag to its constructor so you have to do something like:\n\nconst overview \u003d new TimelineOverviewPane(\u0027whatever\u0027, { usePerformanceBreadcrumbs: true})\n\nSo the TimelineMiniMap would set this to true, but the NetworkPanel would not.\n\nAnd then we can make sure if that is false we stick with the old behaviour that does not break the network panel, and if it is true we can go with the new behaviour.",
      "range": {
        "startLine": 244,
        "startChar": 29,
        "endLine": 244,
        "endChar": 72
      },
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14a8f07f_0e2a2da3",
        "filename": "front_end/ui/legacy/components/perf_ui/TimelineOverviewPane.ts",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-12-08T14:18:04Z",
      "side": 1,
      "message": "This makes a lot of sense to me, also with this CL I\u0027m seeing that create breadcrumb button is included in the network panel\u0027s timeline too.",
      "parentUuid": "61cf856e_369b1c6e",
      "range": {
        "startLine": 244,
        "startChar": 29,
        "endLine": 244,
        "endChar": 72
      },
      "revId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7b9decde0e94b9233976cb69efe5bccf08e05ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}