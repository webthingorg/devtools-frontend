{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5627b9ca_804ae2e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-07-04T07:15:05Z",
      "side": 1,
      "message": "scripts/build lgtm % comments.\n\nIs it strictly necessary to land these changes together? Or could we land the \"scripts/build\" changes independently? It seems we only introduce the \"typeRef\" parameter, so why do we also make the protocol monitor changes in this CL?",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "376fb8c8_9ddb0bc4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "No we can land them separately but the Protocol Monitor now relies on this new script because I need it to determine the type of parameters accepted by array parameters. So I would need to submit the python script first. \nDo you want me to uncommit the Protocol Monitor files ?",
      "parentUuid": "5627b9ca_804ae2e4",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4357a476_ed93cd16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-07-04T09:38:55Z",
      "side": 1,
      "message": "yes, please move those into a separate CL: go/small-cls. You can do dependent CLs if you have changes that rely on other changes: https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_managing_dependent_cls",
      "parentUuid": "376fb8c8_9ddb0bc4",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c71edbb8_7fbe401b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T13:36:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4357a476_ed93cd16",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29236662_0382d863",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "I believe we would need to use the parameterId here too.",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18e76565_6a697f09",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T13:36:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29236662_0382d863",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1acf3ba5_fcec34d4",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "move this if check to where the value is assigned (inline using a ternary operator)",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2839dd7b_ba35e444",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Not really sure that I can do that because of the nested innerParam inside object param...",
      "parentUuid": "1acf3ba5_fcec34d4",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e39950df_cc5b8721",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-05T08:16:41Z",
      "side": 1,
      "message": "what is a specific problem with it?",
      "parentUuid": "2839dd7b_ba35e444",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5646ac20_6946ca9b",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-05T13:49:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e39950df_cc5b8721",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c766660_98776ea5",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "`class` is a reserved keyword, let\u0027s rename it to something else? I suggest we use the classMap from lit for this.",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5462193e_64a811fa",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c766660_98776ea5",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f45c4dc7_34a84d81",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 352,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "is id used?",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4daf9a61_ca0d85f6",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 352,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f45c4dc7_34a84d81",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4faecc8_1f16f9d0",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 374,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "let\u0027s pass ID as a data attribute on the input element and have a single instance of the blur handler instead of creating a new one for each id.",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d578524_e14ef19a",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 374,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4faecc8_1f16f9d0",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeb40fbd_52b5b43a",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 407,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "now that we removed the type differences let\u0027s move the check to the definition of the subparameters variable using a ternary operator.",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25959670_5d5bb4eb",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 407,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eeb40fbd_52b5b43a",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a149e07_1d3fc28e",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 416,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "nit: indentation.",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f36d6b3d_35c86ef5",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 416,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a149e07_1d3fc28e",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f17e905f_dd2d1180",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "I think we don\u0027t need this ternary operator here and we can always provide handleInputOnBlur",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e48a849e_baf0e723",
        "filename": "front_end/panels/protocol_monitor/components/JSONEditor.ts",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f17e905f_dd2d1180",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd89fef7_337ab4bd",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 5
      },
      "lineNbr": 292,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-07-04T07:15:05Z",
      "side": 1,
      "message": "It is odd that we overwrite `json_ref`/`type_ref`. It\u0027s better to move this `if` case above the `if \u0027type\u0027 in ...` line and and turn the other if into an \"else if\".",
      "range": {
        "startLine": 289,
        "startChar": 0,
        "endLine": 292,
        "endChar": 42
      },
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d583b21_053f363d",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 5
      },
      "lineNbr": 292,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd89fef7_337ab4bd",
      "range": {
        "startLine": 289,
        "startChar": 0,
        "endLine": 292,
        "endChar": 42
      },
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e5987f_112e2b78",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 5
      },
      "lineNbr": 305,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-07-04T07:15:05Z",
      "side": 1,
      "message": "Do I understand correctly that `typeRef` will reference the element type in case `type \u003d\u003d\u003d \u0027array\u0027`?\n\nMaybe you could add a comment that this is what we try to determine at the `if js_bind_type \u003d\u003d \"array\"` line.",
      "range": {
        "startLine": 305,
        "startChar": 33,
        "endLine": 305,
        "endChar": 65
      },
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68595fc3_fb4eb603",
        "filename": "scripts/build/code_generator_frontend.py",
        "patchSetId": 5
      },
      "lineNbr": 305,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T09:35:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42e5987f_112e2b78",
      "range": {
        "startLine": 305,
        "startChar": 33,
        "endLine": 305,
        "endChar": 65
      },
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c7e2396_78b22b73",
        "filename": "test/unittests/front_end/panels/protocol_monitor/ProtocolMonitor_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-07-04T08:10:06Z",
      "side": 1,
      "message": "nit: let\u0027s use `for (const key of Object.keys())",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f2d82d8_83f3d70a",
        "filename": "test/unittests/front_end/panels/protocol_monitor/ProtocolMonitor_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1581285
      },
      "writtenOn": "2023-07-04T13:36:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c7e2396_78b22b73",
      "revId": "55646d1354e636e064fdbaf259c2c306ce76fa2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}