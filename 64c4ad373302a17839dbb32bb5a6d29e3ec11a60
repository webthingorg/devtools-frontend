{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d0c37b66_5d170df8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-06T14:57:14Z",
      "side": 1,
      "message": "lgtm with follow-up suggestion, thanks!",
      "revId": "64c4ad373302a17839dbb32bb5a6d29e3ec11a60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a78e5d0f_7677e698",
        "filename": "front_end/panels/timeline/ThreadAppender.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-06T14:57:14Z",
      "side": 1,
      "message": "we should probably migrate these to use the new trace engine configuration approach - do you fancy doing that in a follow up? Thanks!",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 86
      },
      "revId": "64c4ad373302a17839dbb32bb5a6d29e3ec11a60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "056f18f1_386d07bc",
        "filename": "front_end/panels/timeline/ThreadAppender.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-06T15:02:18Z",
      "side": 1,
      "message": "the trace engine by default parses all trace events already. This is because the visibility of events is determined using the styles defined in the UI, so the engine doesn\u0027t try to query an event\u0027s visibility before processing. Enabling this flag means we draw all the events coming from the engine.\n\nThis is likely not the ideal solution, so we can define a set of events that we keep track of and that we use in the engine and in the UI. In the engine we will use this to filter events (unless the configuration says otherwise) and in the UI to define events\u0027 styles. wdyt?",
      "parentUuid": "a78e5d0f_7677e698",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 86
      },
      "revId": "64c4ad373302a17839dbb32bb5a6d29e3ec11a60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6692f3e1_be0ce6c7",
        "filename": "front_end/panels/timeline/ThreadAppender.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-06T15:08:01Z",
      "side": 1,
      "message": "sorry for the awful redaction, I meant *we can define a set of events that we keep track of and use that in the engine and in the UI",
      "parentUuid": "056f18f1_386d07bc",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 86
      },
      "revId": "64c4ad373302a17839dbb32bb5a6d29e3ec11a60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b39948e_e09a399b",
        "filename": "front_end/panels/timeline/ThreadAppender.ts",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-10-06T15:08:07Z",
      "side": 1,
      "message": "Ah sorry - I got confused and thought this file was in the models/trace folder, but it is not and purely UI. So please ignore my suggestion ðŸ˜Š\n\nWhile we are on this topic though, I thought we did filter events already based on this flag at the engine level - in Trace.Configuration.experiments we already have `timelineShowAllEvents` defined. `SamplesIntegrator` uses this when filtering stack traces, as far as I can tell. But yes I suppose there are potentially other places in the RendererHandler in particular where we could filter.\n\nRight now I could see the argument that it is best for the engine to parse everything, because then when this setting changes (noting that one day I want us to promote this from an experiment to an actual setting) we wouldn\u0027t have to re-parse the trace, but instead when the user changed the setting we could just redraw the UI.\n\nwdyt? \n\n(either way, this doesn\u0027t have to block this CL landing)",
      "parentUuid": "056f18f1_386d07bc",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 86
      },
      "revId": "64c4ad373302a17839dbb32bb5a6d29e3ec11a60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3964571e_00734a1f",
        "filename": "front_end/panels/timeline/ThreadAppender.ts",
        "patchSetId": 4
      },
      "lineNbr": 506,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2023-10-06T14:50:01Z",
      "side": 1,
      "message": "this is a drive-by change. We don\u0027t mean to use the color generator for trace events.",
      "range": {
        "startLine": 506,
        "startChar": 27,
        "endLine": 506,
        "endChar": 72
      },
      "revId": "64c4ad373302a17839dbb32bb5a6d29e3ec11a60",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}