{
  "comments": [
    {
      "key": {
        "uuid": "03ec2d41_91c46ee4",
        "filename": "scripts/deps/manage_node_deps.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-07-21T14:33:55Z",
      "side": 1,
      "message": "It\u0027s best to update puppeteer as a separate CL really. That way we can roll it back if we need to.",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 25
      },
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b37e57_db7c4bf0",
        "filename": "scripts/deps/manage_node_deps.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2020-07-22T18:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03ec2d41_91c46ee4",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 25
      },
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3ccdedb_afa25542",
        "filename": "test/e2e/helpers/emulation-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-07-21T14:33:55Z",
      "side": 1,
      "message": "Just check on this one. There\u0027s possibly a reason for the former code, typically around things being async but not appearing so, so it\u0027s possible that it\u0027s waiting a bit longer to be sure the element is available.",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeffc6c6_e24525d8",
        "filename": "test/e2e/helpers/emulation-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2020-07-22T18:28:28Z",
      "side": 1,
      "message": "Interesting! My intuition was that before `$` would always returned a JSHandle to the result, so even if nothing was found you would still get a handle to `undefined`. I assumed this was the only way to check if something was found.\nNow `$` will return an ElementHandle if something is found and null otherwise",
      "parentUuid": "e3ccdedb_afa25542",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6364c1c_8c71ba05",
        "filename": "test/e2e/helpers/emulation-helpers.ts",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-22T20:41:21Z",
      "side": 1,
      "message": "I think Johan\u0027s intuition is on the right track here. I remember the original purpose of the extra `const isOpen \u003d await inspector.evaluate(element \u003d\u003e Boolean(element));` is to check if `$(MEDIA_QUERY_INSPECTOR_SELECTOR)` exists in the DOM. If now `$` returns `ElementHandle | null` then I think we could remove this. And of course double-check by running it several times :P because maybe my memory failed me.",
      "parentUuid": "aeffc6c6_e24525d8",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0df1a7e_be7ad1ad",
        "filename": "test/e2e/sources/dwarf-cxx-language-plugin_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-07-21T14:33:55Z",
      "side": 1,
      "message": "I know you didn\u0027t write this, but since you\u0027re here could you break this down into multiple lines? The readability of multiple awaits is low for me.",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1be4200_5e0c2752",
        "filename": "test/e2e/sources/dwarf-cxx-language-plugin_test.ts",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2020-07-22T18:28:28Z",
      "side": 1,
      "message": "This file has been deleted on master (and therefore not part of this cl after rebasing) but I\u0027ll go through other occurrences of this",
      "parentUuid": "a0df1a7e_be7ad1ad",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04cdc3c8_9422589e",
        "filename": "test/shared/helper.ts",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-07-21T14:33:55Z",
      "side": 1,
      "message": "This feels very similar to the above. Can we combine them?",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "416d613a_6e732150",
        "filename": "test/shared/helper.ts",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1439900
      },
      "writtenOn": "2020-07-22T18:28:28Z",
      "side": 1,
      "message": "I\u0027m not sure there is a good way of combining them. If we factor out the traversal logic then we would have to use reflection to inject the concrete matching strategies",
      "parentUuid": "04cdc3c8_9422589e",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f5fba0_5c193479",
        "filename": "test/shared/helper.ts",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-23T07:19:07Z",
      "side": 1,
      "message": "I can think of a few ways to combine them but they all result in code that is harder to follow and maintain compared to accepting the minimal amount of duplication. This trickiness is mostly because we cannot close over any variables (or re-use smaller helper functions) since these functions need to be serializable (since they\u0027ll be evaluated in the document\u0027s realm, not the Node.js realm). We could hack it with eval-style string concatenation but that sounds nasty.\n\nMy gut feeling is that the cost-benefit ratio of combining isn\u0027t worth it in this particular case. WDYT?",
      "parentUuid": "416d613a_6e732150",
      "revId": "c71e054bcf25f78de7a62a5ae15ed0f2dec5873b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}