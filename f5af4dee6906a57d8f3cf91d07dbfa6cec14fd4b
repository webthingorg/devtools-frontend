{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f197466_648472d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-01-29T15:25:35Z",
      "side": 1,
      "message": "Hey, Changhao, do you maybe want to take a look? To lighten the review load on ergunsh a little :)",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20f0c865_f1f1c334",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 3
      },
      "lineNbr": 937,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-02-07T12:07:24Z",
      "side": 1,
      "message": "Could this be lifted to the parent class? Seems like this has been repeated for quite a few cases here.",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a884dbf2_1dedf3cc",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 3
      },
      "lineNbr": 937,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-12T08:59:52Z",
      "side": 1,
      "message": "The parent is an interface. Do you think it should be an abstract class instead?",
      "parentUuid": "20f0c865_f1f1c334",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb88fdf_8ba9b81e",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 3
      },
      "lineNbr": 937,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-02-20T13:36:52Z",
      "side": 1,
      "message": "Maybe staying as a pure interface would be better? Does TypeScript have the notion of default methods? Would that help in this case?",
      "parentUuid": "a884dbf2_1dedf3cc",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfc451f9_c6db185b",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 3
      },
      "lineNbr": 937,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-20T19:42:28Z",
      "side": 1,
      "message": "I think that would come out to be an abstract class. I\u0027m not opposed, how about I tackle that in a followup? I have some things in mind for a bigger refactoring for the Color hierarchy anyways.",
      "parentUuid": "ecb88fdf_8ba9b81e",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83d84f3e_ddf9c020",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-02-07T12:07:24Z",
      "side": 1,
      "message": "Maybe I didn\u0027t understand correctly about the `if angle` check here. Does this mean that we need to do this special check for all the other swatches to add an event listener to update their color swatches?",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5863af3d_dad2b407",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-02-12T08:59:52Z",
      "side": 1,
      "message": "Yes, whenever there are nested swatches we\u0027ll need to hook up events to propagate updates. Alternatively, we could reparse and rerender values whenever we apply style edits, but that feels a little bit brittle and costly.\n\nNote that that\u0027s not new, we just never had the ability to have that sort of nesting in general. Some cases, like color-mix, manually implement nesting and also propagate update events.",
      "parentUuid": "83d84f3e_ddf9c020",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bee67626_0e34e31d",
        "filename": "front_end/panels/elements/StylePropertyTreeElement.ts",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2024-02-20T13:36:52Z",
      "side": 1,
      "message": "I\u0027m wondering if we can come up with better ways to do this, but that\u0027s out of the scope of this CL. One step at a time I guess.",
      "parentUuid": "5863af3d_dad2b407",
      "revId": "f5af4dee6906a57d8f3cf91d07dbfa6cec14fd4b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}