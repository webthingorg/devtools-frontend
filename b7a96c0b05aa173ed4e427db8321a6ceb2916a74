{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c0abf220_4e5ce5e4",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 21
      },
      "lineNbr": 221,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-09-05T18:01:59Z",
      "side": 1,
      "message": "Why create the prettyPrintButton object, and not just append the LitHtml to the existing LitHtml?",
      "range": {
        "startLine": 221,
        "startChar": 8,
        "endLine": 221,
        "endChar": 25
      },
      "revId": "b7a96c0b05aa173ed4e427db8321a6ceb2916a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6c964dc_2f140b81",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 21
      },
      "lineNbr": 246,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-09-05T18:01:59Z",
      "side": 1,
      "message": "Visually this results in a floating button on the bottom. There should probably be some kind of horizontal divider, similar to the sources panel. And the button feels smaller than the one in the Sources panel.",
      "range": {
        "startLine": 246,
        "startChar": 5,
        "endLine": 246,
        "endChar": 28
      },
      "revId": "b7a96c0b05aa173ed4e427db8321a6ceb2916a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "635fd038_7fb47305",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 21
      },
      "lineNbr": 282,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-09-05T18:01:59Z",
      "side": 1,
      "message": "If the setting is false, then the button has no effect at all. Shouldn\u0027t the setting only be responsible for the default state? And the button allows users to override their default",
      "range": {
        "startLine": 282,
        "startChar": 8,
        "endLine": 282,
        "endChar": 93
      },
      "revId": "b7a96c0b05aa173ed4e427db8321a6ceb2916a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fbf52d1_2da2b71b",
        "filename": "front_end/panels/application/preloading/PreloadingView.ts",
        "patchSetId": 21
      },
      "lineNbr": 283,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-09-05T18:01:59Z",
      "side": 1,
      "message": "Let\u0027s try to avoid this. I couldn\u0027t reproduce the error. In general, if you call an async function from sync code, you can put `void` in front: `void myAsyncFunction()`. You could also make `updateRuleSetDetails` async.",
      "range": {
        "startLine": 283,
        "startChar": 5,
        "endLine": 283,
        "endChar": 73
      },
      "revId": "b7a96c0b05aa173ed4e427db8321a6ceb2916a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8bafbe2_52f29824",
        "filename": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
        "patchSetId": 21
      },
      "lineNbr": 29,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-09-05T18:01:59Z",
      "side": 1,
      "message": "nit: formatted",
      "fixSuggestions": [
        {
          "fixId": "a22935e1_00649046",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 29,
                "startChar": 0,
                "endLine": 30,
                "endChar": 0
              },
              "replacement": "  #formattedSourceText?: string;\n"
            },
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 42,
                "startChar": 0,
                "endLine": 44,
                "endChar": 0
              },
              "replacement": "  set formattedSourceText(formattedSourceText: string) {\n    this.#formattedSourceText \u003d formattedSourceText;\n"
            },
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 100,
                "startChar": 0,
                "endLine": 101,
                "endChar": 0
              },
              "replacement": "      doc: this.#shouldPrettyPrint ? this.#formattedSourceText : this.#data?.sourceText,\n"
            },
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 103,
                "startChar": 0,
                "endLine": 104,
                "endChar": 0
              },
              "replacement": "            (this.#shouldPrettyPrint ? this.#formattedSourceText : this.#data?.sourceText) || \u0027\u0027),\n"
            }
          ]
        }
      ],
      "revId": "b7a96c0b05aa173ed4e427db8321a6ceb2916a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ad72e3d_57171eb7",
        "filename": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
        "patchSetId": 21
      },
      "lineNbr": 42,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2024-09-05T18:01:59Z",
      "side": 1,
      "message": "nit: formattedSourceText",
      "fixSuggestions": [
        {
          "fixId": "c4b16502_0fb32137",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 29,
                "startChar": 0,
                "endLine": 30,
                "endChar": 0
              },
              "replacement": "  #formattedSourceText?: string;\n"
            },
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 42,
                "startChar": 0,
                "endLine": 44,
                "endChar": 0
              },
              "replacement": "  set formattedSourceText(formattedSourceText: string) {\n    this.#formattedSourceText \u003d formattedSourceText;\n"
            },
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 100,
                "startChar": 0,
                "endLine": 101,
                "endChar": 0
              },
              "replacement": "      doc: this.#shouldPrettyPrint ? this.#formattedSourceText : this.#data?.sourceText,\n"
            },
            {
              "path": "front_end/panels/application/preloading/components/RuleSetDetailsView.ts",
              "range": {
                "startLine": 103,
                "startChar": 0,
                "endLine": 104,
                "endChar": 0
              },
              "replacement": "            (this.#shouldPrettyPrint ? this.#formattedSourceText : this.#data?.sourceText) || \u0027\u0027),\n"
            }
          ]
        }
      ],
      "revId": "b7a96c0b05aa173ed4e427db8321a6ceb2916a74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}