{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e6a78808_cbb785a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2023-02-22T23:24:17Z",
      "side": 1,
      "message": "Hi Philip, PTAL at this updated version, thanks!",
      "revId": "7360956613732985b3353d0cf681858ee27840e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "556217de_bd98ff3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2023-02-23T09:42:08Z",
      "side": 1,
      "message": "Hi Wolfgang, could you PTAL since Philip is out today? Thanks!",
      "revId": "7360956613732985b3353d0cf681858ee27840e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d9195d4_487e99cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-23T10:37:11Z",
      "side": 1,
      "message": "LGTM with a question",
      "revId": "7360956613732985b3353d0cf681858ee27840e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33e0179b_ffcd4fc4",
        "filename": "front_end/ui/components/settings/SettingCheckbox.ts",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-23T10:37:11Z",
      "side": 1,
      "message": "Is this a required change? Wouldn\u0027t `checked` be false if not not set anyway?",
      "range": {
        "startLine": 70,
        "startChar": 33,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "7360956613732985b3353d0cf681858ee27840e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c585c64_10445a8a",
        "filename": "front_end/ui/components/settings/SettingCheckbox.ts",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2023-02-23T11:20:49Z",
      "side": 1,
      "message": "This actually is necessary, due to this confusing fact that an element\u0027s attribute is not the same as an element\u0027s property. `?` translates to the attribute, which, surprisingly, does not affect the \u003cinput\u003e\u0027s rendering of the checkbox. The `.` translates to the property, which does affect the rendering of the checkbox.\n\nIn practice, this means that if we use the `checked` attribute, we can only set the initial status of the \u003cinput\u003e correctly, but subsequent updates of the `checked` *attribute* won\u0027t change the \u003cinput\u003e\u0027s status and its rendering. To achieve this, we need to use the `checked` *property*. This took me a while to find out. Here\u0027s more details: https://github.com/lit/lit-element/issues/601\n\nThis wasn\u0027t an issue because we are not changing the setting from other places. Now that we do, we were getting un-synced \u003cinput\u003e state, hence this fix.",
      "parentUuid": "33e0179b_ffcd4fc4",
      "range": {
        "startLine": 70,
        "startChar": 33,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "7360956613732985b3353d0cf681858ee27840e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b596fb8a_432fd314",
        "filename": "front_end/ui/components/settings/SettingCheckbox.ts",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2023-02-23T11:56:59Z",
      "side": 1,
      "message": "Thanks for the explanation! I ran into the attribute/property discrepancy before myself, but didn\u0027t make the connection to how this relates to the fact that the setting can now be updated from elsewhere.",
      "parentUuid": "7c585c64_10445a8a",
      "range": {
        "startLine": 70,
        "startChar": 33,
        "endLine": 70,
        "endChar": 34
      },
      "revId": "7360956613732985b3353d0cf681858ee27840e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "7360956613732985b3353d0cf681858ee27840e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "7360956613732985b3353d0cf681858ee27840e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "7360956613732985b3353d0cf681858ee27840e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7360956613732985b3353d0cf681858ee27840e3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}