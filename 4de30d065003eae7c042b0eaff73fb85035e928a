{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "91375f8d_cc79ee46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2021-04-26T10:59:41Z",
      "side": 1,
      "message": "PTAL",
      "revId": "4de30d065003eae7c042b0eaff73fb85035e928a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a20413d5_0862928c",
        "filename": "test/e2e/application/frame-tree_test.ts",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-04-26T11:06:44Z",
      "side": 1,
      "message": "This looks funky, could you explain why would you need to do \n\n  await goToResource(\u0027application/js-oopif.html\u0027);\n  await ensureApplicationPanel();\n\nrepeatedly?",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "4de30d065003eae7c042b0eaff73fb85035e928a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a245043f_f84cd0e2",
        "filename": "test/e2e/application/frame-tree_test.ts",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2021-04-26T12:49:52Z",
      "side": 1,
      "message": "I have seen flakes on the Mac bot for which after navigating to the correct frame details panel, it did not show a stack trace at all. The screenshot in https://logs.chromium.org/logs/devtools-frontend/buildbucket/cr-buildbucket.appspot.com/8849181739321981840/+/u/E2E_tests/stdout is an example. I do not know what causes this and I have not seen it outside of a Mac e2e test run. This can be mitigated by reloading the page (the old version contained `target.reload()` for the same reason).\n\nThe `ensureApplicationPanel()` is a bit mysterious to me as well. I\u0027ve seen runs where the test progressed correctly but then times out because it does not find the element referred to in next step\u0027s selector. The screenshots in this case show DevTools not on the Application panel but on the Elements panel instead - even though previous steps that passed were happening on the Application panel. I suspect that this is triggered by the e2e test already progressing before the panel has fully loaded. `ensureApplicationPanel()` prevents the test from timing out in this scenario by navigating back to the Application panel.",
      "parentUuid": "a20413d5_0862928c",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "4de30d065003eae7c042b0eaff73fb85035e928a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b427cb71_d06f7d12",
        "filename": "test/e2e/application/frame-tree_test.ts",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-04-26T13:25:05Z",
      "side": 1,
      "message": "ensureApplicatonPanel seems fine (it is just repeatedly clicking on the application panel until the panel is open, which is something an---admittedly very quick---user could also be doing.\n\nI am a little concerned about the stack-trace not showing up in some runs. Do we have a race condition here? We inserted the code to transfer the stack-trace in the FrameManager, and I think we assume a particular order or events there. Could it be that events happen in a different order in the runs where this test flakes?",
      "parentUuid": "a245043f_f84cd0e2",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "4de30d065003eae7c042b0eaff73fb85035e928a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05107340_ac2a1bd7",
        "filename": "test/e2e/application/frame-tree_test.ts",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-04-26T13:26:24Z",
      "side": 1,
      "message": "Also, if I understood your explanation correctly, then it should be fine to move \n      await goToResource(\u0027application/js-oopif.html\u0027);\n      await ensureApplicationPanel();\nout of the function.",
      "parentUuid": "b427cb71_d06f7d12",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "4de30d065003eae7c042b0eaff73fb85035e928a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25d8ec46_a15f3cd7",
        "filename": "test/e2e/application/frame-tree_test.ts",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2021-04-30T13:47:02Z",
      "side": 1,
      "message": "The test used to flake when not reloading the page. This lead us to discover an actual bug: the FrameManager\u0027s assumption about the order of events during OOPIF transition is not always correct. The whole CL has been rewritten such that the FrameManager is able to handle the CDP events arriving in any of the 2 possible orders.",
      "parentUuid": "05107340_ac2a1bd7",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "4de30d065003eae7c042b0eaff73fb85035e928a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}