{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "97d558b6_25424209",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-03-22T22:48:50Z",
      "side": 1,
      "message": "Adding Paul as reviewer as the author of the original error throwing logic.\n@aerotwist: Hi Paul, PTAL, thanks!",
      "revId": "45d1382d277c519a587fa2ef79dce3bc2f23864c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad160528_ac1147d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-03-22T23:09:42Z",
      "side": 1,
      "message": "FWIW this subtle issue probably arised before Paul\u0027s TS-fication, when this landed: https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2425340, where the original \"create-plain-node-if-no-style-found\" logic was removed.",
      "revId": "45d1382d277c519a587fa2ef79dce3bc2f23864c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "672e0aca_94f0f2c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2021-03-23T06:31:48Z",
      "side": 1,
      "message": "LGTM\n\nCould we add a test?",
      "revId": "45d1382d277c519a587fa2ef79dce3bc2f23864c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3f9bebb_ad4470db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-03-23T08:26:58Z",
      "side": 1,
      "message": "Yes. Let me add an e2e test in a separate CL, since this one will be back-merged.",
      "parentUuid": "672e0aca_94f0f2c1",
      "revId": "45d1382d277c519a587fa2ef79dce3bc2f23864c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d460f36d_7de7bb4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2021-03-23T11:18:21Z",
      "side": 1,
      "message": "LGTM. Is there anything we can do if we\u0027re seeing this case occur? I guess I\u0027m not clear about the phrase \"when there is no matched style for a css variable declaration\". How do we get to the point where we have a CSS var showing up without any matches?",
      "revId": "45d1382d277c519a587fa2ef79dce3bc2f23864c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f882cdf5_38e624fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2021-03-23T13:05:32Z",
      "side": 1,
      "message": "I don\u0027t think the frontend can do anything in particular, other than to render the style text as a plain node. This happens when we have a CSS variable usage in a `@keyframes XXX`, and for some reason we won\u0027t get the matched CSS style declaration for this CSS variable usage from the backend (I suppose I can dig further up from `getMatchedStylesForNode` CDP command to see what is missing.",
      "parentUuid": "d460f36d_7de7bb4c",
      "revId": "45d1382d277c519a587fa2ef79dce3bc2f23864c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}