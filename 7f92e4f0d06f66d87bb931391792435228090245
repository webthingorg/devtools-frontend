{
  "comments": [
    {
      "key": {
        "uuid": "903999d2_0794d3d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-08-25T09:26:00Z",
      "side": 1,
      "message": "This needs to get back-merged to M86.",
      "revId": "7f92e4f0d06f66d87bb931391792435228090245",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "058935aa_e5e9896d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396454
      },
      "writtenOn": "2020-08-25T09:47:47Z",
      "side": 1,
      "message": "This looks reasonable to me, but I defer to Changhao.\n\nFor completeness-sake, this aims to fix failing e2e-tests when rolling in backend updates (https://ci.chromium.org/p/devtools-frontend/builders/try/devtools_frontend_linux_rel/b8871016509207275552?).",
      "revId": "7f92e4f0d06f66d87bb931391792435228090245",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "770f0288_1934b7c1",
        "filename": "front_end/sdk/CSSModel.js",
        "patchSetId": 2
      },
      "lineNbr": 798,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-08-25T09:29:13Z",
      "side": 1,
      "message": "Is this field even necessary? Could we just use this._cssPropertyTracker !\u003d\u003d null instead?",
      "range": {
        "startLine": 798,
        "startChar": 9,
        "endLine": 798,
        "endChar": 39
      },
      "revId": "7f92e4f0d06f66d87bb931391792435228090245",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b162c488_9eec2afb",
        "filename": "front_end/sdk/CSSModel.js",
        "patchSetId": 2
      },
      "lineNbr": 809,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-08-25T10:56:29Z",
      "side": 1,
      "message": "If this gets called from dispose() this will cause another error, because when dispose is called the target is already closed.\n\nThe other problem is that this function should probably do the following:\n\n  async disableCSSPropertyTracker() {\n      // Sending an empty list to the backend signals the close of style tracking\n      await this._agent.invoke_trackComputedStyleUpdates({propertiesToTrack: []});\n      this._isCSSPropertyTrackingEnabled \u003d false;\n      this._cssPropertyTracker \u003d null;\n  }\n\nSo as to give the last update a chance to get processed.",
      "range": {
        "startLine": 809,
        "startChar": 16,
        "endLine": 809,
        "endChar": 48
      },
      "revId": "7f92e4f0d06f66d87bb931391792435228090245",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f61d7ebe_3fac8938",
        "filename": "front_end/sdk/CSSModel.js",
        "patchSetId": 2
      },
      "lineNbr": 809,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-08-25T11:03:48Z",
      "side": 1,
      "message": "OK I think the following will work:\n\n  async disableCSSPropertyTracker() {\n      this._isCSSPropertyTrackingEnabled \u003d false;\n      // Sending an empty list to the backend signals the close of style tracking\n      await this._agent.invoke_trackComputedStyleUpdates({propertiesToTrack: []});\n      this._cssPropertyTracker \u003d null;\n  }",
      "parentUuid": "b162c488_9eec2afb",
      "range": {
        "startLine": 809,
        "startChar": 16,
        "endLine": 809,
        "endChar": 48
      },
      "revId": "7f92e4f0d06f66d87bb931391792435228090245",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15bb6ae4_76bd25f0",
        "filename": "front_end/sdk/CSSModel.js",
        "patchSetId": 2
      },
      "lineNbr": 840,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2020-08-25T11:02:13Z",
      "side": 1,
      "message": "I think when calling this here the target is already closed, resulting in an error for the invoke.",
      "range": {
        "startLine": 840,
        "startChar": 9,
        "endLine": 840,
        "endChar": 34
      },
      "revId": "7f92e4f0d06f66d87bb931391792435228090245",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}