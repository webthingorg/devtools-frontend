{
  "comments": [
    {
      "key": {
        "uuid": "fc361dba_2c6bb07f",
        "filename": "scripts/check_gn.js",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2019-12-16T13:46:24Z",
      "side": 1,
      "message": "I\u0027d perfer it if this was passed as an argument at the call site for checkGNVariable, even if that means code duplication.\n\nAfter that checkGNVariable\u0027s obtainRelativePath should never be undefined then.",
      "range": {
        "startLine": 123,
        "startChar": 85,
        "endLine": 123,
        "endChar": 108
      },
      "revId": "c55b167fcba39e5a5efb8a377ef4d7d7921ec52e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48ebf8c3_bc815c3c",
        "filename": "scripts/check_gn.js",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-16T14:26:32Z",
      "side": 1,
      "message": "I prefer this version, as there is only 1 case where this `obtainRelativePath` is necessary. The amount of duplicate code would be triple what we have now.\n\nSubmitting for now per personal preferences. We maybe should can come up with a styling guide for this.",
      "parentUuid": "fc361dba_2c6bb07f",
      "range": {
        "startLine": 123,
        "startChar": 85,
        "endLine": 123,
        "endChar": 108
      },
      "revId": "c55b167fcba39e5a5efb8a377ef4d7d7921ec52e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd85bcf5_b166678b",
        "filename": "scripts/check_gn.js",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2019-12-16T14:29:27Z",
      "side": 1,
      "message": "Couldn\u0027t you just turn relativePathFromBuildGN into an arrow function that is defined before checkAllDevToolsFiles? That wouldn\u0027t introduce any code duplication and remove the complicated condition here.\n\nIt\u0027s up to you.",
      "parentUuid": "48ebf8c3_bc815c3c",
      "range": {
        "startLine": 123,
        "startChar": 85,
        "endLine": 123,
        "endChar": 108
      },
      "revId": "c55b167fcba39e5a5efb8a377ef4d7d7921ec52e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f662a889_a9be7070",
        "filename": "scripts/check_gn.js",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2019-12-16T14:31:03Z",
      "side": 1,
      "message": "Sadly not, as it it references `moduleName` which is defined in the for-loop. If that was a possibility, I would have definitely done it.",
      "parentUuid": "cd85bcf5_b166678b",
      "range": {
        "startLine": 123,
        "startChar": 85,
        "endLine": 123,
        "endChar": 108
      },
      "revId": "c55b167fcba39e5a5efb8a377ef4d7d7921ec52e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd930326_2ca84e1f",
        "filename": "scripts/check_gn.js",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2019-12-16T14:34:19Z",
      "side": 1,
      "message": "The call in the for loop looks as follows:\n\nobtainRelativePath(moduleName)\n\nThat looks like you could have defined \n\n (moduleName) \u003d\u003e (filename) \u003d\u003e {\n      ...\n      });\n\nAm I missing somethig?",
      "parentUuid": "f662a889_a9be7070",
      "range": {
        "startLine": 123,
        "startChar": 85,
        "endLine": 123,
        "endChar": 108
      },
      "revId": "c55b167fcba39e5a5efb8a377ef4d7d7921ec52e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}