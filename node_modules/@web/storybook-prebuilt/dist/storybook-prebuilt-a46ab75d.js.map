{"version":3,"file":"storybook-prebuilt-a46ab75d.js","sources":["../node_modules/@storybook/router/dist/esm/utils.js","../node_modules/@remix-run/router/dist/router.js","../node_modules/react-router/dist/index.js","../node_modules/react-router-dom/dist/index.js","../node_modules/@storybook/router/dist/esm/visibility.js","../node_modules/@storybook/router/dist/esm/router.js","../node_modules/lodash/_assignMergeValue.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/_safeGet.js","../node_modules/lodash/toPlainObject.js","../node_modules/lodash/_baseMergeDeep.js","../node_modules/lodash/_baseMerge.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/mergeWith.js","../node_modules/store2/dist/store2.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/countBy.js","../node_modules/@storybook/semver/internal/constants.js","../node_modules/@storybook/semver/internal/debug.js","../node_modules/@storybook/semver/internal/re.js","../node_modules/@storybook/semver/internal/identifiers.js","../node_modules/@storybook/semver/classes/semver.js","../node_modules/@storybook/semver/functions/parse.js","../node_modules/@storybook/semver/functions/valid.js","../node_modules/@storybook/semver/functions/clean.js","../node_modules/@storybook/semver/functions/inc.js","../node_modules/@storybook/semver/functions/compare.js","../node_modules/@storybook/semver/functions/eq.js","../node_modules/@storybook/semver/functions/diff.js","../node_modules/@storybook/semver/functions/major.js","../node_modules/@storybook/semver/functions/minor.js","../node_modules/@storybook/semver/functions/patch.js","../node_modules/@storybook/semver/functions/prerelease.js","../node_modules/@storybook/semver/functions/rcompare.js","../node_modules/@storybook/semver/functions/compare-loose.js","../node_modules/@storybook/semver/functions/compare-build.js","../node_modules/@storybook/semver/functions/sort.js","../node_modules/@storybook/semver/functions/rsort.js","../node_modules/@storybook/semver/functions/gt.js","../node_modules/@storybook/semver/functions/lt.js","../node_modules/@storybook/semver/functions/neq.js","../node_modules/@storybook/semver/functions/gte.js","../node_modules/@storybook/semver/functions/lte.js","../node_modules/@storybook/semver/functions/cmp.js","../node_modules/@storybook/semver/functions/coerce.js","../node_modules/@storybook/semver/classes/range.js","../node_modules/@storybook/semver/classes/comparator.js","../node_modules/@storybook/semver/functions/satisfies.js","../node_modules/@storybook/semver/ranges/to-comparators.js","../node_modules/@storybook/semver/ranges/max-satisfying.js","../node_modules/@storybook/semver/ranges/min-satisfying.js","../node_modules/@storybook/semver/ranges/min-version.js","../node_modules/@storybook/semver/ranges/valid.js","../node_modules/@storybook/semver/ranges/outside.js","../node_modules/@storybook/semver/ranges/gtr.js","../node_modules/@storybook/semver/ranges/ltr.js","../node_modules/@storybook/semver/ranges/intersects.js","../node_modules/@storybook/semver/ranges/simplify.js","../node_modules/@storybook/semver/ranges/subset.js","../node_modules/@storybook/semver/index.js"],"sourcesContent":["import \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.object.freeze.js\";\n\nvar _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { once } from '@storybook/client-logger';\nimport deepEqual from 'fast-deep-equal';\nimport isPlainObject from 'lodash/isPlainObject';\nimport memoize from 'memoizerific';\nimport qs from 'qs';\nimport dedent from 'ts-dedent';\nvar splitPathRegex = /\\/([^/]+)\\/(?:(.*)_)?([^/]+)?/;\nexport var parsePath = memoize(1000)(function (path) {\n  var result = {\n    viewMode: undefined,\n    storyId: undefined,\n    refId: undefined\n  };\n\n  if (path) {\n    var _ref = path.toLowerCase().match(splitPathRegex) || [],\n        _ref2 = _slicedToArray(_ref, 4),\n        viewMode = _ref2[1],\n        refId = _ref2[2],\n        storyId = _ref2[3];\n\n    if (viewMode) {\n      Object.assign(result, {\n        viewMode: viewMode,\n        storyId: storyId,\n        refId: refId\n      });\n    }\n  }\n\n  return result;\n});\nexport var DEEPLY_EQUAL = Symbol('Deeply equal');\nexport var deepDiff = function deepDiff(value, update) {\n  if (_typeof(value) !== _typeof(update)) return update;\n  if (deepEqual(value, update)) return DEEPLY_EQUAL;\n\n  if (Array.isArray(value) && Array.isArray(update)) {\n    var res = update.reduce(function (acc, upd, index) {\n      var diff = deepDiff(value[index], upd);\n      if (diff !== DEEPLY_EQUAL) acc[index] = diff;\n      return acc;\n    }, new Array(update.length));\n    if (update.length >= value.length) return res;\n    return res.concat(new Array(value.length - update.length).fill(undefined));\n  }\n\n  if (isPlainObject(value) && isPlainObject(update)) {\n    return Object.keys(Object.assign({}, value, update)).reduce(function (acc, key) {\n      var diff = deepDiff(value === null || value === void 0 ? void 0 : value[key], update === null || update === void 0 ? void 0 : update[key]);\n      return diff === DEEPLY_EQUAL ? acc : Object.assign(acc, _defineProperty({}, key, diff));\n    }, {});\n  }\n\n  return update;\n}; // Keep this in sync with validateArgs in core-client/src/preview/parseArgsParam.ts\n\nvar VALIDATION_REGEXP = /^[a-zA-Z0-9 _-]*$/;\nvar NUMBER_REGEXP = /^-?[0-9]+(\\.[0-9]+)?$/;\nvar HEX_REGEXP = /^#([a-f0-9]{3,4}|[a-f0-9]{6}|[a-f0-9]{8})$/i;\nvar COLOR_REGEXP = /^(rgba?|hsla?)\\(([0-9]{1,3}),\\s?([0-9]{1,3})%?,\\s?([0-9]{1,3})%?,?\\s?([0-9](\\.[0-9]{1,2})?)?\\)$/i;\n\nvar validateArgs = function validateArgs() {\n  var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var value = arguments.length > 1 ? arguments[1] : undefined;\n  if (key === null) return false;\n  if (key === '' || !VALIDATION_REGEXP.test(key)) return false;\n  if (value === null || value === undefined) return true; // encoded as `!null` or `!undefined`\n\n  if (value instanceof Date) return true; // encoded as modified ISO string\n\n  if (typeof value === 'number' || typeof value === 'boolean') return true;\n\n  if (typeof value === 'string') {\n    return VALIDATION_REGEXP.test(value) || NUMBER_REGEXP.test(value) || HEX_REGEXP.test(value) || COLOR_REGEXP.test(value);\n  }\n\n  if (Array.isArray(value)) return value.every(function (v) {\n    return validateArgs(key, v);\n  });\n  if (isPlainObject(value)) return Object.entries(value).every(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        k = _ref4[0],\n        v = _ref4[1];\n\n    return validateArgs(k, v);\n  });\n  return false;\n};\n\nvar encodeSpecialValues = function encodeSpecialValues(value) {\n  if (value === undefined) return '!undefined';\n  if (value === null) return '!null';\n\n  if (typeof value === 'string') {\n    if (HEX_REGEXP.test(value)) return \"!hex(\".concat(value.slice(1), \")\");\n    if (COLOR_REGEXP.test(value)) return \"!\".concat(value.replace(/[\\s%]/g, ''));\n    return value;\n  }\n\n  if (Array.isArray(value)) return value.map(encodeSpecialValues);\n\n  if (isPlainObject(value)) {\n    return Object.entries(value).reduce(function (acc, _ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          key = _ref6[0],\n          val = _ref6[1];\n\n      return Object.assign(acc, _defineProperty({}, key, encodeSpecialValues(val)));\n    }, {});\n  }\n\n  return value;\n};\n\nvar QS_OPTIONS = {\n  encode: false,\n  // we handle URL encoding ourselves\n  delimiter: ';',\n  // we don't actually create multiple query params\n  allowDots: true,\n  // encode objects using dot notation: obj.key=val\n  format: 'RFC1738',\n  // encode spaces using the + sign\n  serializeDate: function serializeDate(date) {\n    return \"!date(\".concat(date.toISOString(), \")\");\n  }\n};\nexport var buildArgsParam = function buildArgsParam(initialArgs, args) {\n  var update = deepDiff(initialArgs, args);\n  if (!update || update === DEEPLY_EQUAL) return '';\n  var object = Object.entries(update).reduce(function (acc, _ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n\n    if (validateArgs(key, value)) return Object.assign(acc, _defineProperty({}, key, value));\n    once.warn(dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      Omitted potentially unsafe URL args.\\n\\n      More info: https://storybook.js.org/docs/react/writing-stories/args#setting-args-through-the-url\\n    \"]))));\n    return acc;\n  }, {});\n  return qs.stringify(encodeSpecialValues(object), QS_OPTIONS).replace(/ /g, '+').split(';').map(function (part) {\n    return part.replace('=', ':');\n  }).join(';');\n};\nexport var queryFromString = memoize(1000)(function (s) {\n  return qs.parse(s, {\n    ignoreQueryPrefix: true\n  });\n});\nexport var queryFromLocation = function queryFromLocation(location) {\n  return queryFromString(location.search);\n};\nexport var stringifyQuery = function stringifyQuery(query) {\n  return qs.stringify(query, {\n    addQueryPrefix: true,\n    encode: false\n  });\n};\nexport var getMatch = memoize(1000)(function (current, target) {\n  var startsWith = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var startsWithTarget = current && startsWith && current.startsWith(target);\n  var currentIsTarget = typeof target === 'string' && current === target;\n  var matchTarget = current && target && current.match(target);\n\n  if (startsWithTarget || currentIsTarget || matchTarget) {\n    return {\n      path: current\n    };\n  }\n\n  return null;\n});","/**\n * @remix-run/router v1.7.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }));\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher = getLoadingFetcher(submission);\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true\n      });\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission = submission || getSubmissionFromNavigation(state.navigation);\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, activeSubmission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => createUseMatchesMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They only set `defaultShouldRevalidate` on\n    // explicit revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n    //\n    // They automatically revalidate without even calling shouldRevalidate if:\n    // - They were cancelled\n    // - They're in the middle of their first load and therefore this is still\n    //   an initial load and not a revalidation\n    //\n    // If neither of those is true, then they _always_ check shouldRevalidate\n    let fetcher = state.fetchers.get(key);\n    let isPerformingInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined &&\n    // If a fetcher.load redirected then it'll be \"loading\" without any data\n    // so ensure we're not processing the redirect from this fetcher\n    !fetchRedirectIds.has(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = cancelledFetcherLoads.includes(key) || isPerformingInitialLoad || shouldRevalidateLoader(fetcherMatch, _extends({\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: isRevalidationRequired\n    }));\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.14.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.14.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","import React from 'react';\nexport var ToggleVisibility = function ToggleVisibility(_ref) {\n  var hidden = _ref.hidden,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    hidden: hidden\n  }, children);\n};\nToggleVisibility.displayName = \"ToggleVisibility\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport global from 'global';\nimport React, { useCallback } from 'react';\nimport { Link, BrowserRouter, useNavigate, useLocation, Router } from 'react-router-dom';\nimport { ToggleVisibility } from './visibility';\nimport { queryFromString, parsePath, getMatch } from './utils';\nvar document = global.document;\n\nvar getBase = function getBase() {\n  return \"\".concat(document.location.pathname, \"?\");\n};\n\n// const queryNavigate: NavigateFn = (to: string | number, options?: NavigateOptions<{}>) =>\n//   typeof to === 'number' ? navigate(to) : navigate(`${getBase()}path=${to}`, options);\nvar useQueryNavigate = function useQueryNavigate() {\n  var navigate = useNavigate();\n  return useCallback(function (to, options) {\n    if (typeof to === 'string' && to.startsWith('#')) {\n      document.location.hash = to;\n      return undefined;\n    }\n\n    if (typeof to === 'string') {\n      var target = options !== null && options !== void 0 && options.plain ? to : \"?path=\".concat(to);\n      return navigate(target, options);\n    }\n\n    if (typeof to === 'number') {\n      return navigate(to);\n    }\n\n    return undefined;\n  }, []);\n}; // A component that will navigate to a new location/path when clicked\n\n\nvar QueryLink = function QueryLink(_ref) {\n  var to = _ref.to,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"to\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(Link, _extends({\n    to: \"\".concat(getBase(), \"path=\").concat(to)\n  }, rest), children);\n};\n\nQueryLink.displayName = \"QueryLink\";\nQueryLink.displayName = 'QueryLink'; // A render-prop component where children is called with a location\n// and will be called whenever it changes when it changes\n\nvar QueryLocation = function QueryLocation(_ref2) {\n  var children = _ref2.children;\n  var location = useLocation();\n\n  var _queryFromString = queryFromString(location.search),\n      path = _queryFromString.path,\n      singleStory = _queryFromString.singleStory;\n\n  var _parsePath = parsePath(path),\n      viewMode = _parsePath.viewMode,\n      storyId = _parsePath.storyId,\n      refId = _parsePath.refId;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    path: path,\n    location: location,\n    viewMode: viewMode,\n    storyId: storyId,\n    refId: refId,\n    singleStory: singleStory === 'true'\n  }));\n};\n\nQueryLocation.displayName = 'QueryLocation'; // A render-prop component for rendering when a certain path is hit.\n// It's immensely similar to `Location` but it receives an addition data property: `match`.\n// match has a truthy value when the path is hit.\n\nvar QueryMatch = function QueryMatch(_ref3) {\n  var children = _ref3.children,\n      targetPath = _ref3.path,\n      _ref3$startsWith = _ref3.startsWith,\n      startsWith = _ref3$startsWith === void 0 ? false : _ref3$startsWith;\n  return /*#__PURE__*/React.createElement(QueryLocation, null, function (_ref4) {\n    var urlPath = _ref4.path,\n        rest = _objectWithoutProperties(_ref4, [\"path\"]);\n\n    return children(Object.assign({\n      match: getMatch(urlPath, targetPath, startsWith)\n    }, rest));\n  });\n};\n\nQueryMatch.displayName = \"QueryMatch\";\nQueryMatch.displayName = 'QueryMatch'; // A component to conditionally render children based on matching a target path\n\nvar Route = function Route(_ref5) {\n  var path = _ref5.path,\n      children = _ref5.children,\n      _ref5$startsWith = _ref5.startsWith,\n      startsWith = _ref5$startsWith === void 0 ? false : _ref5$startsWith,\n      _ref5$hideOnly = _ref5.hideOnly,\n      hideOnly = _ref5$hideOnly === void 0 ? false : _ref5$hideOnly;\n  return /*#__PURE__*/React.createElement(QueryMatch, {\n    path: path,\n    startsWith: startsWith\n  }, function (_ref6) {\n    var match = _ref6.match;\n\n    if (hideOnly) {\n      return /*#__PURE__*/React.createElement(ToggleVisibility, {\n        hidden: !match\n      }, children);\n    }\n\n    return match ? children : null;\n  });\n};\n\nRoute.displayName = \"Route\";\nRoute.displayName = 'Route';\nexport { QueryLink as Link };\nexport { QueryMatch as Match };\nexport { QueryLocation as Location };\nexport { Route };\nexport { useQueryNavigate as useNavigate };\nexport { BrowserRouter as LocationProvider };\nexport { Router as BaseLocationProvider };\nexport { useNavigate as usePlainNavigate }; // eslint-disable-next-line no-undef","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n","/*! store2 - v2.14.2 - 2022-07-18\n* Copyright (c) 2022 Nathan Bubna; Licensed (MIT OR GPL-3.0) */\n;(function(window, define) {\n    var _ = {\n        version: \"2.14.2\",\n        areas: {},\n        apis: {},\n        nsdelim: '.',\n\n        // utilities\n        inherit: function(api, o) {\n            for (var p in api) {\n                if (!o.hasOwnProperty(p)) {\n                    Object.defineProperty(o, p, Object.getOwnPropertyDescriptor(api, p));\n                }\n            }\n            return o;\n        },\n        stringify: function(d, fn) {\n            return d === undefined || typeof d === \"function\" ? d+'' : JSON.stringify(d,fn||_.replace);\n        },\n        parse: function(s, fn) {\n            // if it doesn't parse, return as is\n            try{ return JSON.parse(s,fn||_.revive); }catch(e){ return s; }\n        },\n\n        // extension hooks\n        fn: function(name, fn) {\n            _.storeAPI[name] = fn;\n            for (var api in _.apis) {\n                _.apis[api][name] = fn;\n            }\n        },\n        get: function(area, key){ return area.getItem(key); },\n        set: function(area, key, string){ area.setItem(key, string); },\n        remove: function(area, key){ area.removeItem(key); },\n        key: function(area, i){ return area.key(i); },\n        length: function(area){ return area.length; },\n        clear: function(area){ area.clear(); },\n\n        // core functions\n        Store: function(id, area, namespace) {\n            var store = _.inherit(_.storeAPI, function(key, data, overwrite) {\n                if (arguments.length === 0){ return store.getAll(); }\n                if (typeof data === \"function\"){ return store.transact(key, data, overwrite); }// fn=data, alt=overwrite\n                if (data !== undefined){ return store.set(key, data, overwrite); }\n                if (typeof key === \"string\" || typeof key === \"number\"){ return store.get(key); }\n                if (typeof key === \"function\"){ return store.each(key); }\n                if (!key){ return store.clear(); }\n                return store.setAll(key, data);// overwrite=data, data=key\n            });\n            store._id = id;\n            try {\n                var testKey = '__store2_test';\n                area.setItem(testKey, 'ok');\n                store._area = area;\n                area.removeItem(testKey);\n            } catch (e) {\n                store._area = _.storage('fake');\n            }\n            store._ns = namespace || '';\n            if (!_.areas[id]) {\n                _.areas[id] = store._area;\n            }\n            if (!_.apis[store._ns+store._id]) {\n                _.apis[store._ns+store._id] = store;\n            }\n            return store;\n        },\n        storeAPI: {\n            // admin functions\n            area: function(id, area) {\n                var store = this[id];\n                if (!store || !store.area) {\n                    store = _.Store(id, area, this._ns);//new area-specific api in this namespace\n                    if (!this[id]){ this[id] = store; }\n                }\n                return store;\n            },\n            namespace: function(namespace, singleArea, delim) {\n                delim = delim || this._delim || _.nsdelim;\n                if (!namespace){\n                    return this._ns ? this._ns.substring(0,this._ns.length-delim.length) : '';\n                }\n                var ns = namespace, store = this[ns];\n                if (!store || !store.namespace) {\n                    store = _.Store(this._id, this._area, this._ns+ns+delim);//new namespaced api\n                    store._delim = delim;\n                    if (!this[ns]){ this[ns] = store; }\n                    if (!singleArea) {\n                        for (var name in _.areas) {\n                            store.area(name, _.areas[name]);\n                        }\n                    }\n                }\n                return store;\n            },\n            isFake: function(force) {\n                if (force) {\n                    this._real = this._area;\n                    this._area = _.storage('fake');\n                } else if (force === false) {\n                    this._area = this._real || this._area;\n                }\n                return this._area.name === 'fake';\n            },\n            toString: function() {\n                return 'store'+(this._ns?'.'+this.namespace():'')+'['+this._id+']';\n            },\n\n            // storage functions\n            has: function(key) {\n                if (this._area.has) {\n                    return this._area.has(this._in(key));//extension hook\n                }\n                return !!(this._in(key) in this._area);\n            },\n            size: function(){ return this.keys().length; },\n            each: function(fn, fill) {// fill is used by keys(fillList) and getAll(fillList))\n                for (var i=0, m=_.length(this._area); i<m; i++) {\n                    var key = this._out(_.key(this._area, i));\n                    if (key !== undefined) {\n                        if (fn.call(this, key, this.get(key), fill) === false) {\n                            break;\n                        }\n                    }\n                    if (m > _.length(this._area)) { m--; i--; }// in case of removeItem\n                }\n                return fill || this;\n            },\n            keys: function(fillList) {\n                return this.each(function(k, v, list){ list.push(k); }, fillList || []);\n            },\n            get: function(key, alt) {\n                var s = _.get(this._area, this._in(key)),\n                    fn;\n                if (typeof alt === \"function\") {\n                    fn = alt;\n                    alt = null;\n                }\n                return s !== null ? _.parse(s, fn) :\n                    alt != null ? alt : s;\n            },\n            getAll: function(fillObj) {\n                return this.each(function(k, v, all){ all[k] = v; }, fillObj || {});\n            },\n            transact: function(key, fn, alt) {\n                var val = this.get(key, alt),\n                    ret = fn(val);\n                this.set(key, ret === undefined ? val : ret);\n                return this;\n            },\n            set: function(key, data, overwrite) {\n                var d = this.get(key),\n                    replacer;\n                if (d != null && overwrite === false) {\n                    return data;\n                }\n                if (typeof overwrite === \"function\") {\n                    replacer = overwrite;\n                    overwrite = undefined;\n                }\n                return _.set(this._area, this._in(key), _.stringify(data, replacer), overwrite) || d;\n            },\n            setAll: function(data, overwrite) {\n                var changed, val;\n                for (var key in data) {\n                    val = data[key];\n                    if (this.set(key, val, overwrite) !== val) {\n                        changed = true;\n                    }\n                }\n                return changed;\n            },\n            add: function(key, data, replacer) {\n                var d = this.get(key);\n                if (d instanceof Array) {\n                    data = d.concat(data);\n                } else if (d !== null) {\n                    var type = typeof d;\n                    if (type === typeof data && type === 'object') {\n                        for (var k in data) {\n                            d[k] = data[k];\n                        }\n                        data = d;\n                    } else {\n                        data = d + data;\n                    }\n                }\n                _.set(this._area, this._in(key), _.stringify(data, replacer));\n                return data;\n            },\n            remove: function(key, alt) {\n                var d = this.get(key, alt);\n                _.remove(this._area, this._in(key));\n                return d;\n            },\n            clear: function() {\n                if (!this._ns) {\n                    _.clear(this._area);\n                } else {\n                    this.each(function(k){ _.remove(this._area, this._in(k)); }, 1);\n                }\n                return this;\n            },\n            clearAll: function() {\n                var area = this._area;\n                for (var id in _.areas) {\n                    if (_.areas.hasOwnProperty(id)) {\n                        this._area = _.areas[id];\n                        this.clear();\n                    }\n                }\n                this._area = area;\n                return this;\n            },\n\n            // internal use functions\n            _in: function(k) {\n                if (typeof k !== \"string\"){ k = _.stringify(k); }\n                return this._ns ? this._ns + k : k;\n            },\n            _out: function(k) {\n                return this._ns ?\n                    k && k.indexOf(this._ns) === 0 ?\n                        k.substring(this._ns.length) :\n                        undefined : // so each() knows to skip it\n                    k;\n            }\n        },// end _.storeAPI\n        storage: function(name) {\n            return _.inherit(_.storageAPI, { items: {}, name: name });\n        },\n        storageAPI: {\n            length: 0,\n            has: function(k){ return this.items.hasOwnProperty(k); },\n            key: function(i) {\n                var c = 0;\n                for (var k in this.items){\n                    if (this.has(k) && i === c++) {\n                        return k;\n                    }\n                }\n            },\n            setItem: function(k, v) {\n                if (!this.has(k)) {\n                    this.length++;\n                }\n                this.items[k] = v;\n            },\n            removeItem: function(k) {\n                if (this.has(k)) {\n                    delete this.items[k];\n                    this.length--;\n                }\n            },\n            getItem: function(k){ return this.has(k) ? this.items[k] : null; },\n            clear: function(){ for (var k in this.items){ this.removeItem(k); } }\n        }// end _.storageAPI\n    };\n\n    var store =\n        // safely set this up (throws error in IE10/32bit mode for local files)\n        _.Store(\"local\", (function(){try{ return localStorage; }catch(e){}})());\n    store.local = store;// for completeness\n    store._ = _;// for extenders and debuggers...\n    // safely setup store.session (throws exception in FF for file:/// urls)\n    store.area(\"session\", (function(){try{ return sessionStorage; }catch(e){}})());\n    store.area(\"page\", _.storage(\"page\"));\n\n    if (typeof define === 'function' && define.amd !== undefined) {\n        define('store2', [], function () {\n            return store;\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = store;\n    } else {\n        // expose the primary store fn to the global object and save conflicts\n        if (window.store){ _.conflict = window.store; }\n        window.store = store;\n    }\n\n})(this, this && this.define);\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the number of times the key was returned by `iteratee`. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': 1, '6': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.countBy(['one', 'two', 'three'], 'length');\n * // => { '3': 2, '5': 1 }\n */\nvar countBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    ++result[key];\n  } else {\n    baseAssignValue(result, key, 1);\n  }\n});\n\nmodule.exports = countBy;\n","\"use strict\";\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.number.max-safe-integer\");\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nvar SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */\n9007199254740991; // Max safe segment length for coercion.\n\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\nmodule.exports = {\n  SEMVER_SPEC_VERSION: SEMVER_SPEC_VERSION,\n  MAX_LENGTH: MAX_LENGTH,\n  MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH: MAX_SAFE_COMPONENT_LENGTH\n};","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar debug = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === 'object' && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG) ? function () {\n  var _console;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return (_console = console).error.apply(_console, ['SEMVER'].concat(args));\n} : function () {};\nmodule.exports = debug;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.regexp.constructor\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nvar _require = require('./constants'),\n    MAX_SAFE_COMPONENT_LENGTH = _require.MAX_SAFE_COMPONENT_LENGTH;\n\nvar debug = require('./debug');\n\nexports = module.exports = {}; // The actual regexps go on exports.re\n\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar t = exports.t = {};\nvar R = 0;\n\nvar createToken = function createToken(name, value, isGlobal) {\n  var index = R++;\n  debug(index, value);\n  t[name] = index;\n  src[index] = value;\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined);\n}; // The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*');\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+'); // ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'); // ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', \"(\".concat(src[t.NUMERICIDENTIFIER], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIER], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIER], \")\"));\ncreateToken('MAINVERSIONLOOSE', \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\")); // ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', \"(?:\".concat(src[t.NUMERICIDENTIFIER], \"|\").concat(src[t.NONNUMERICIDENTIFIER], \")\"));\ncreateToken('PRERELEASEIDENTIFIERLOOSE', \"(?:\".concat(src[t.NUMERICIDENTIFIERLOOSE], \"|\").concat(src[t.NONNUMERICIDENTIFIER], \")\")); // ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', \"(?:-(\".concat(src[t.PRERELEASEIDENTIFIER], \"(?:\\\\.\").concat(src[t.PRERELEASEIDENTIFIER], \")*))\"));\ncreateToken('PRERELEASELOOSE', \"(?:-?(\".concat(src[t.PRERELEASEIDENTIFIERLOOSE], \"(?:\\\\.\").concat(src[t.PRERELEASEIDENTIFIERLOOSE], \")*))\")); // ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+'); // ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', \"(?:\\\\+(\".concat(src[t.BUILDIDENTIFIER], \"(?:\\\\.\").concat(src[t.BUILDIDENTIFIER], \")*))\")); // ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', \"v?\".concat(src[t.MAINVERSION]).concat(src[t.PRERELEASE], \"?\").concat(src[t.BUILD], \"?\"));\ncreateToken('FULL', \"^\".concat(src[t.FULLPLAIN], \"$\")); // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\n\ncreateToken('LOOSEPLAIN', \"[v=\\\\s]*\".concat(src[t.MAINVERSIONLOOSE]).concat(src[t.PRERELEASELOOSE], \"?\").concat(src[t.BUILD], \"?\"));\ncreateToken('LOOSE', \"^\".concat(src[t.LOOSEPLAIN], \"$\"));\ncreateToken('GTLT', '((?:<|>)?=?)'); // Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\n\ncreateToken('XRANGEIDENTIFIERLOOSE', \"\".concat(src[t.NUMERICIDENTIFIERLOOSE], \"|x|X|\\\\*\"));\ncreateToken('XRANGEIDENTIFIER', \"\".concat(src[t.NUMERICIDENTIFIER], \"|x|X|\\\\*\"));\ncreateToken('XRANGEPLAIN', \"[v=\\\\s]*(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\".concat(src[t.PRERELEASE], \")?\").concat(src[t.BUILD], \"?\") + \")?)?\");\ncreateToken('XRANGEPLAINLOOSE', \"[v=\\\\s]*(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\".concat(src[t.PRERELEASELOOSE], \")?\").concat(src[t.BUILD], \"?\") + \")?)?\");\ncreateToken('XRANGE', \"^\".concat(src[t.GTLT], \"\\\\s*\").concat(src[t.XRANGEPLAIN], \"$\"));\ncreateToken('XRANGELOOSE', \"^\".concat(src[t.GTLT], \"\\\\s*\").concat(src[t.XRANGEPLAINLOOSE], \"$\")); // Coercion.\n// Extract anything that could conceivably be a part of a valid semver\n\ncreateToken('COERCE', \"\".concat('(^|[^\\\\d])' + '(\\\\d{1,').concat(MAX_SAFE_COMPONENT_LENGTH, \"})\") + \"(?:\\\\.(\\\\d{1,\".concat(MAX_SAFE_COMPONENT_LENGTH, \"}))?\") + \"(?:\\\\.(\\\\d{1,\".concat(MAX_SAFE_COMPONENT_LENGTH, \"}))?\") + \"(?:$|[^\\\\d])\");\ncreateToken('COERCERTL', src[t.COERCE], true); // Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\n\ncreateToken('LONETILDE', '(?:~>?)');\ncreateToken('TILDETRIM', \"(\\\\s*)\".concat(src[t.LONETILDE], \"\\\\s+\"), true);\nexports.tildeTrimReplace = '$1~';\ncreateToken('TILDE', \"^\".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAIN], \"$\"));\ncreateToken('TILDELOOSE', \"^\".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAINLOOSE], \"$\")); // Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\n\ncreateToken('LONECARET', '(?:\\\\^)');\ncreateToken('CARETTRIM', \"(\\\\s*)\".concat(src[t.LONECARET], \"\\\\s+\"), true);\nexports.caretTrimReplace = '$1^';\ncreateToken('CARET', \"^\".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAIN], \"$\"));\ncreateToken('CARETLOOSE', \"^\".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAINLOOSE], \"$\")); // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\ncreateToken('COMPARATORLOOSE', \"^\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.LOOSEPLAIN], \")$|^$\"));\ncreateToken('COMPARATOR', \"^\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.FULLPLAIN], \")$|^$\")); // An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\ncreateToken('COMPARATORTRIM', \"(\\\\s*)\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.LOOSEPLAIN], \"|\").concat(src[t.XRANGEPLAIN], \")\"), true);\nexports.comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\n\ncreateToken('HYPHENRANGE', \"^\\\\s*(\".concat(src[t.XRANGEPLAIN], \")\") + \"\\\\s+-\\\\s+\" + \"(\".concat(src[t.XRANGEPLAIN], \")\") + \"\\\\s*$\");\ncreateToken('HYPHENRANGELOOSE', \"^\\\\s*(\".concat(src[t.XRANGEPLAINLOOSE], \")\") + \"\\\\s+-\\\\s+\" + \"(\".concat(src[t.XRANGEPLAINLOOSE], \")\") + \"\\\\s*$\"); // Star ranges basically just allow anything at all.\n\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*'); // >=0.0.0 is like a star\n\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$');\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$');","\"use strict\";\n\nvar numeric = /^[0-9]+$/;\n\nvar compareIdentifiers = function compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n};\n\nvar rcompareIdentifiers = function rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n};\n\nmodule.exports = {\n  compareIdentifiers: compareIdentifiers,\n  rcompareIdentifiers: rcompareIdentifiers\n};","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar debug = require('../internal/debug');\n\nvar _require = require('../internal/constants'),\n    MAX_LENGTH = _require.MAX_LENGTH,\n    MAX_SAFE_INTEGER = _require.MAX_SAFE_INTEGER;\n\nvar _require2 = require('../internal/re'),\n    re = _require2.re,\n    t = _require2.t;\n\nvar _require3 = require('../internal/identifiers'),\n    compareIdentifiers = _require3.compareIdentifiers;\n\nvar SemVer = /*#__PURE__*/function () {\n  function SemVer(version, options) {\n    _classCallCheck(this, SemVer);\n\n    if (!options || _typeof(options) !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {\n        return version;\n      } else {\n        version = version.version;\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(\"Invalid Version: \".concat(version));\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\"version is longer than \".concat(MAX_LENGTH, \" characters\"));\n    }\n\n    debug('SemVer', version, options);\n    this.options = options;\n    this.loose = !!options.loose; // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n\n    this.includePrerelease = !!options.includePrerelease;\n    var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n\n    if (!m) {\n      throw new TypeError(\"Invalid Version: \".concat(version));\n    }\n\n    this.raw = version; // these are actually numbers\n\n    this.major = +m[1];\n    this.minor = +m[2];\n    this.patch = +m[3];\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version');\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version');\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version');\n    } // numberify any prerelease numeric ids\n\n\n    if (!m[4]) {\n      this.prerelease = [];\n    } else {\n      this.prerelease = m[4].split('.').map(function (id) {\n        if (/^[0-9]+$/.test(id)) {\n          var num = +id;\n\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num;\n          }\n        }\n\n        return id;\n      });\n    }\n\n    this.build = m[5] ? m[5].split('.') : [];\n    this.format();\n  }\n\n  _createClass(SemVer, [{\n    key: \"format\",\n    value: function format() {\n      this.version = \"\".concat(this.major, \".\").concat(this.minor, \".\").concat(this.patch);\n\n      if (this.prerelease.length) {\n        this.version += \"-\".concat(this.prerelease.join('.'));\n      }\n\n      return this.version;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.version;\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(other) {\n      debug('SemVer.compare', this.version, this.options, other);\n\n      if (!(other instanceof SemVer)) {\n        if (typeof other === 'string' && other === this.version) {\n          return 0;\n        }\n\n        other = new SemVer(other, this.options);\n      }\n\n      if (other.version === this.version) {\n        return 0;\n      }\n\n      return this.compareMain(other) || this.comparePre(other);\n    }\n  }, {\n    key: \"compareMain\",\n    value: function compareMain(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n\n      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n  }, {\n    key: \"comparePre\",\n    value: function comparePre(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      } // NOT having a prerelease is > having one\n\n\n      if (this.prerelease.length && !other.prerelease.length) {\n        return -1;\n      } else if (!this.prerelease.length && other.prerelease.length) {\n        return 1;\n      } else if (!this.prerelease.length && !other.prerelease.length) {\n        return 0;\n      }\n\n      var i = 0;\n\n      do {\n        var a = this.prerelease[i];\n        var b = other.prerelease[i];\n        debug('prerelease compare', i, a, b);\n\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    }\n  }, {\n    key: \"compareBuild\",\n    value: function compareBuild(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n\n      var i = 0;\n\n      do {\n        var a = this.build[i];\n        var b = other.build[i];\n        debug('prerelease compare', i, a, b);\n\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    } // preminor will bump the version up to the next minor release, and immediately\n    // down to pre-release. premajor and prepatch work the same way.\n\n  }, {\n    key: \"inc\",\n    value: function inc(release, identifier) {\n      switch (release) {\n        case 'premajor':\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor = 0;\n          this.major++;\n          this.inc('pre', identifier);\n          break;\n\n        case 'preminor':\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor++;\n          this.inc('pre', identifier);\n          break;\n\n        case 'prepatch':\n          // If this is already a prerelease, it will bump to the next version\n          // drop any prereleases that might already exist, since they are not\n          // relevant at this point.\n          this.prerelease.length = 0;\n          this.inc('patch', identifier);\n          this.inc('pre', identifier);\n          break;\n        // If the input is a non-prerelease version, this acts the same as\n        // prepatch.\n\n        case 'prerelease':\n          if (this.prerelease.length === 0) {\n            this.inc('patch', identifier);\n          }\n\n          this.inc('pre', identifier);\n          break;\n\n        case 'major':\n          // If this is a pre-major version, bump up to the same major version.\n          // Otherwise increment major.\n          // 1.0.0-5 bumps to 1.0.0\n          // 1.1.0 bumps to 2.0.0\n          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n            this.major++;\n          }\n\n          this.minor = 0;\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n\n        case 'minor':\n          // If this is a pre-minor version, bump up to the same minor version.\n          // Otherwise increment minor.\n          // 1.2.0-5 bumps to 1.2.0\n          // 1.2.1 bumps to 1.3.0\n          if (this.patch !== 0 || this.prerelease.length === 0) {\n            this.minor++;\n          }\n\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n\n        case 'patch':\n          // If this is not a pre-release version, it will increment the patch.\n          // If it is a pre-release it will bump up to the same patch version.\n          // 1.2.0-5 patches to 1.2.0\n          // 1.2.0 patches to 1.2.1\n          if (this.prerelease.length === 0) {\n            this.patch++;\n          }\n\n          this.prerelease = [];\n          break;\n        // This probably shouldn't be used publicly.\n        // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n\n        case 'pre':\n          if (this.prerelease.length === 0) {\n            this.prerelease = [0];\n          } else {\n            var i = this.prerelease.length;\n\n            while (--i >= 0) {\n              if (typeof this.prerelease[i] === 'number') {\n                this.prerelease[i]++;\n                i = -2;\n              }\n            }\n\n            if (i === -1) {\n              // didn't increment anything\n              this.prerelease.push(0);\n            }\n          }\n\n          if (identifier) {\n            // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n            // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n            if (this.prerelease[0] === identifier) {\n              if (isNaN(this.prerelease[1])) {\n                this.prerelease = [identifier, 0];\n              }\n            } else {\n              this.prerelease = [identifier, 0];\n            }\n          }\n\n          break;\n\n        default:\n          throw new Error(\"invalid increment argument: \".concat(release));\n      }\n\n      this.format();\n      this.raw = this.version;\n      return this;\n    }\n  }]);\n\n  return SemVer;\n}();\n\nmodule.exports = SemVer;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('../internal/constants'),\n    MAX_LENGTH = _require.MAX_LENGTH;\n\nvar _require2 = require('../internal/re'),\n    re = _require2.re,\n    t = _require2.t;\n\nvar SemVer = require('../classes/semver');\n\nvar parse = function parse(version, options) {\n  if (!options || _typeof(options) !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    };\n  }\n\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null;\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL];\n\n  if (!r.test(version)) {\n    return null;\n  }\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n};\n\nmodule.exports = parse;","\"use strict\";\n\nvar parse = require('./parse');\n\nvar valid = function valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n};\n\nmodule.exports = valid;","\"use strict\";\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nvar parse = require('./parse');\n\nvar clean = function clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n};\n\nmodule.exports = clean;","\"use strict\";\n\nvar SemVer = require('../classes/semver');\n\nvar inc = function inc(version, release, options, identifier) {\n  if (typeof options === 'string') {\n    identifier = options;\n    options = undefined;\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n};\n\nmodule.exports = inc;","\"use strict\";\n\nvar SemVer = require('../classes/semver');\n\nvar compare = function compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n};\n\nmodule.exports = compare;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar eq = function eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n};\n\nmodule.exports = eq;","\"use strict\";\n\nvar parse = require('./parse');\n\nvar eq = require('./eq');\n\nvar diff = function diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    var hasPre = v1.prerelease.length || v2.prerelease.length;\n    var prefix = hasPre ? 'pre' : '';\n    var defaultResult = hasPre ? 'prerelease' : '';\n\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key;\n        }\n      }\n    }\n\n    return defaultResult; // may be undefined\n  }\n};\n\nmodule.exports = diff;","\"use strict\";\n\nvar SemVer = require('../classes/semver');\n\nvar major = function major(a, loose) {\n  return new SemVer(a, loose).major;\n};\n\nmodule.exports = major;","\"use strict\";\n\nvar SemVer = require('../classes/semver');\n\nvar minor = function minor(a, loose) {\n  return new SemVer(a, loose).minor;\n};\n\nmodule.exports = minor;","\"use strict\";\n\nvar SemVer = require('../classes/semver');\n\nvar patch = function patch(a, loose) {\n  return new SemVer(a, loose).patch;\n};\n\nmodule.exports = patch;","\"use strict\";\n\nvar parse = require('./parse');\n\nvar prerelease = function prerelease(version, options) {\n  var parsed = parse(version, options);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n};\n\nmodule.exports = prerelease;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar rcompare = function rcompare(a, b, loose) {\n  return compare(b, a, loose);\n};\n\nmodule.exports = rcompare;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar compareLoose = function compareLoose(a, b) {\n  return compare(a, b, true);\n};\n\nmodule.exports = compareLoose;","\"use strict\";\n\nvar SemVer = require('../classes/semver');\n\nvar compareBuild = function compareBuild(a, b, loose) {\n  var versionA = new SemVer(a, loose);\n  var versionB = new SemVer(b, loose);\n  return versionA.compare(versionB) || versionA.compareBuild(versionB);\n};\n\nmodule.exports = compareBuild;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.sort\");\n\nvar compareBuild = require('./compare-build');\n\nvar sort = function sort(list, loose) {\n  return list.sort(function (a, b) {\n    return compareBuild(a, b, loose);\n  });\n};\n\nmodule.exports = sort;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.sort\");\n\nvar compareBuild = require('./compare-build');\n\nvar rsort = function rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return compareBuild(b, a, loose);\n  });\n};\n\nmodule.exports = rsort;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar gt = function gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n};\n\nmodule.exports = gt;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar lt = function lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n};\n\nmodule.exports = lt;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar neq = function neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n};\n\nmodule.exports = neq;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar gte = function gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n};\n\nmodule.exports = gte;","\"use strict\";\n\nvar compare = require('./compare');\n\nvar lte = function lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n};\n\nmodule.exports = lte;","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar eq = require('./eq');\n\nvar neq = require('./neq');\n\nvar gt = require('./gt');\n\nvar gte = require('./gte');\n\nvar lt = require('./lt');\n\nvar lte = require('./lte');\n\nvar cmp = function cmp(a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (_typeof(a) === 'object') a = a.version;\n      if (_typeof(b) === 'object') b = b.version;\n      return a === b;\n\n    case '!==':\n      if (_typeof(a) === 'object') a = a.version;\n      if (_typeof(b) === 'object') b = b.version;\n      return a !== b;\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n\n    case '!=':\n      return neq(a, b, loose);\n\n    case '>':\n      return gt(a, b, loose);\n\n    case '>=':\n      return gte(a, b, loose);\n\n    case '<':\n      return lt(a, b, loose);\n\n    case '<=':\n      return lte(a, b, loose);\n\n    default:\n      throw new TypeError(\"Invalid operator: \".concat(op));\n  }\n};\n\nmodule.exports = cmp;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nvar SemVer = require('../classes/semver');\n\nvar parse = require('./parse');\n\nvar _require = require('../internal/re'),\n    re = _require.re,\n    t = _require.t;\n\nvar coerce = function coerce(version, options) {\n  if (version instanceof SemVer) {\n    return version;\n  }\n\n  if (typeof version === 'number') {\n    version = String(version);\n  }\n\n  if (typeof version !== 'string') {\n    return null;\n  }\n\n  options = options || {};\n  var match = null;\n\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE]);\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next;\n\n    while ((next = re[t.COERCERTL].exec(version)) && (!match || match.index + match[0].length !== version.length)) {\n      if (!match || next.index + next[0].length !== match.index + match[0].length) {\n        match = next;\n      }\n\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length;\n    } // leave it in a clean state\n\n\n    re[t.COERCERTL].lastIndex = -1;\n  }\n\n  if (match === null) return null;\n  return parse(\"\".concat(match[2], \".\").concat(match[3] || '0', \".\").concat(match[4] || '0'), options);\n};\n\nmodule.exports = coerce;","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.every\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.some\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.map\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// hoisted class for cyclic dependency\nvar Range = /*#__PURE__*/function () {\n  function Range(range, options) {\n    var _this = this;\n\n    _classCallCheck(this, Range);\n\n    if (!options || _typeof(options) !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n\n    if (range instanceof Range) {\n      if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n        return range;\n      } else {\n        return new Range(range.raw, options);\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value;\n      this.set = [[range]];\n      this.format();\n      return this;\n    }\n\n    this.options = options;\n    this.loose = !!options.loose;\n    this.includePrerelease = !!options.includePrerelease; // First, split based on boolean or ||\n\n    this.raw = range;\n    this.set = range.split(/\\s*\\|\\|\\s*/) // map the range to a 2d array of comparators\n    .map(function (range) {\n      return _this.parseRange(range.trim());\n    }) // throw out any comparator lists that are empty\n    // this generally means that it was not a valid range, which is allowed\n    // in loose mode, but will still throw if the WHOLE range is invalid.\n    .filter(function (c) {\n      return c.length;\n    });\n\n    if (!this.set.length) {\n      throw new TypeError(\"Invalid SemVer Range: \".concat(range));\n    } // if we have any that are not the null set, throw out null sets.\n\n\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      var first = this.set[0];\n      this.set = this.set.filter(function (c) {\n        return !isNullSet(c[0]);\n      });\n      if (this.set.length === 0) this.set = [first];else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        var _iterator = _createForOfIteratorHelper(this.set),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var c = _step.value;\n\n            if (c.length === 1 && isAny(c[0])) {\n              this.set = [c];\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n\n    this.format();\n  }\n\n  _createClass(Range, [{\n    key: \"format\",\n    value: function format() {\n      this.range = this.set.map(function (comps) {\n        return comps.join(' ').trim();\n      }).join('||').trim();\n      return this.range;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.range;\n    }\n  }, {\n    key: \"parseRange\",\n    value: function parseRange(range) {\n      var _this2 = this;\n\n      var loose = this.options.loose;\n      range = range.trim(); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n\n      var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n      range = range.replace(hr, hyphenReplace(this.options.includePrerelease));\n      debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n\n      range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n      debug('comparator trim', range, re[t.COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`\n\n      range = range.replace(re[t.TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`\n\n      range = range.replace(re[t.CARETTRIM], caretTrimReplace); // normalize spaces\n\n      range = range.split(/\\s+/).join(' '); // At this point, the range is completely trimmed and\n      // ready to be split into comparators.\n\n      var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n      var rangeList = range.split(' ').map(function (comp) {\n        return parseComparator(comp, _this2.options);\n      }).join(' ').split(/\\s+/) // >=0.0.0 is equivalent to *\n      .map(function (comp) {\n        return replaceGTE0(comp, _this2.options);\n      }) // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? function (comp) {\n        return !!comp.match(compRe);\n      } : function () {\n        return true;\n      }).map(function (comp) {\n        return new Comparator(comp, _this2.options);\n      }); // if any comparators are the null set, then replace with JUST null set\n      // if more than one comparator, remove any * comparators\n      // also, don't include the same comparator more than once\n\n      var l = rangeList.length;\n      var rangeMap = new Map();\n\n      var _iterator2 = _createForOfIteratorHelper(rangeList),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var comp = _step2.value;\n          if (isNullSet(comp)) return [comp];\n          rangeMap.set(comp.value, comp);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (rangeMap.size > 1 && rangeMap.has('')) rangeMap[\"delete\"]('');\n      return _toConsumableArray(rangeMap.values());\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range, options) {\n      if (!(range instanceof Range)) {\n        throw new TypeError('a Range is required');\n      }\n\n      return this.set.some(function (thisComparators) {\n        return isSatisfiable(thisComparators, options) && range.set.some(function (rangeComparators) {\n          return isSatisfiable(rangeComparators, options) && thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options);\n            });\n          });\n        });\n      });\n    } // if ANY of the sets match ALL of its comparators, then pass\n\n  }, {\n    key: \"test\",\n    value: function test(version) {\n      if (!version) {\n        return false;\n      }\n\n      if (typeof version === 'string') {\n        try {\n          version = new SemVer(version, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n\n      for (var i = 0; i < this.set.length; i++) {\n        if (testSet(this.set[i], version, this.options)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return Range;\n}();\n\nmodule.exports = Range;\n\nvar Comparator = require('./comparator');\n\nvar debug = require('../internal/debug');\n\nvar SemVer = require('./semver');\n\nvar _require = require('../internal/re'),\n    re = _require.re,\n    t = _require.t,\n    comparatorTrimReplace = _require.comparatorTrimReplace,\n    tildeTrimReplace = _require.tildeTrimReplace,\n    caretTrimReplace = _require.caretTrimReplace;\n\nvar isNullSet = function isNullSet(c) {\n  return c.value === '<0.0.0-0';\n};\n\nvar isAny = function isAny(c) {\n  return c.value === '';\n}; // take a set of comparators and determine whether there\n// exists a version which can satisfy it\n\n\nvar isSatisfiable = function isSatisfiable(comparators, options) {\n  var result = true;\n  var remainingComparators = comparators.slice();\n  var testComparator = remainingComparators.pop();\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options);\n    });\n    testComparator = remainingComparators.pop();\n  }\n\n  return result;\n}; // comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\n\n\nvar parseComparator = function parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n};\n\nvar isX = function isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}; // ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n\n\nvar replaceTildes = function replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n};\n\nvar replaceTilde = function replaceTilde(comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = \">=\".concat(M, \".0.0 <\").concat(+M + 1, \".0.0-0\");\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = \">=\".concat(M, \".\").concat(m, \".0 <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n    } else if (pr) {\n      debug('replaceTilde pr', pr);\n      ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p, \"-\").concat(pr, \" <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p, \" <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n    }\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}; // ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n\n\nvar replaceCarets = function replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n};\n\nvar replaceCaret = function replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n  var z = options.includePrerelease ? '-0' : '';\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) {\n      ret = '';\n    } else if (isX(m)) {\n      ret = \">=\".concat(M, \".0.0\").concat(z, \" <\").concat(+M + 1, \".0.0-0\");\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = \">=\".concat(M, \".\").concat(m, \".0\").concat(z, \" <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n      } else {\n        ret = \">=\".concat(M, \".\").concat(m, \".0\").concat(z, \" <\").concat(+M + 1, \".0.0-0\");\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p, \"-\").concat(pr, \" <\").concat(M, \".\").concat(m, \".\").concat(+p + 1, \"-0\");\n        } else {\n          ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p, \"-\").concat(pr, \" <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n        }\n      } else {\n        ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p, \"-\").concat(pr, \" <\").concat(+M + 1, \".0.0-0\");\n      }\n    } else {\n      debug('no pr');\n\n      if (M === '0') {\n        if (m === '0') {\n          ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p).concat(z, \" <\").concat(M, \".\").concat(m, \".\").concat(+p + 1, \"-0\");\n        } else {\n          ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p).concat(z, \" <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n        }\n      } else {\n        ret = \">=\".concat(M, \".\").concat(m, \".\").concat(p, \" <\").concat(+M + 1, \".0.0-0\");\n      }\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n};\n\nvar replaceXRanges = function replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n};\n\nvar replaceXRange = function replaceXRange(comp, options) {\n  comp = comp.trim();\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX) {\n      gtlt = '';\n    } // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n\n\n    pr = options.includePrerelease ? '-0' : '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0;\n      }\n\n      p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>=';\n\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n\n        if (xm) {\n          M = +M + 1;\n        } else {\n          m = +m + 1;\n        }\n      }\n\n      if (gtlt === '<') pr = '-0';\n      ret = \"\".concat(gtlt + M, \".\").concat(m, \".\").concat(p).concat(pr);\n    } else if (xm) {\n      ret = \">=\".concat(M, \".0.0\").concat(pr, \" <\").concat(+M + 1, \".0.0-0\");\n    } else if (xp) {\n      ret = \">=\".concat(M, \".\").concat(m, \".0\").concat(pr, \" <\").concat(M, \".\").concat(+m + 1, \".0-0\");\n    }\n\n    debug('xRange return', ret);\n    return ret;\n  });\n}; // Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\n\n\nvar replaceStars = function replaceStars(comp, options) {\n  debug('replaceStars', comp, options); // Looseness is ignored here.  star is always as loose as it gets!\n\n  return comp.trim().replace(re[t.STAR], '');\n};\n\nvar replaceGTE0 = function replaceGTE0(comp, options) {\n  debug('replaceGTE0', comp, options);\n  return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '');\n}; // This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n\n\nvar hyphenReplace = function hyphenReplace(incPr) {\n  return function ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n    if (isX(fM)) {\n      from = '';\n    } else if (isX(fm)) {\n      from = \">=\".concat(fM, \".0.0\").concat(incPr ? '-0' : '');\n    } else if (isX(fp)) {\n      from = \">=\".concat(fM, \".\").concat(fm, \".0\").concat(incPr ? '-0' : '');\n    } else if (fpr) {\n      from = \">=\".concat(from);\n    } else {\n      from = \">=\".concat(from).concat(incPr ? '-0' : '');\n    }\n\n    if (isX(tM)) {\n      to = '';\n    } else if (isX(tm)) {\n      to = \"<\".concat(+tM + 1, \".0.0-0\");\n    } else if (isX(tp)) {\n      to = \"<\".concat(tM, \".\").concat(+tm + 1, \".0-0\");\n    } else if (tpr) {\n      to = \"<=\".concat(tM, \".\").concat(tm, \".\").concat(tp, \"-\").concat(tpr);\n    } else if (incPr) {\n      to = \"<\".concat(tM, \".\").concat(tm, \".\").concat(+tp + 1, \"-0\");\n    } else {\n      to = \"<=\".concat(to);\n    }\n\n    return \"\".concat(from, \" \").concat(to).trim();\n  };\n};\n\nvar testSet = function testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false;\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var _i = 0; _i < set.length; _i++) {\n      debug(set[_i].semver);\n\n      if (set[_i].semver === Comparator.ANY) {\n        continue;\n      }\n\n      if (set[_i].semver.prerelease.length > 0) {\n        var allowed = set[_i].semver;\n\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n          return true;\n        }\n      }\n    } // Version has a -pre, but it's not one of the ones we like.\n\n\n    return false;\n  }\n\n  return true;\n};","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ANY = Symbol('SemVer ANY'); // hoisted class for cyclic dependency\n\nvar Comparator = /*#__PURE__*/function () {\n  _createClass(Comparator, null, [{\n    key: \"ANY\",\n    get: function get() {\n      return ANY;\n    }\n  }]);\n\n  function Comparator(comp, options) {\n    _classCallCheck(this, Comparator);\n\n    if (!options || _typeof(options) !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp;\n      } else {\n        comp = comp.value;\n      }\n    }\n\n    debug('comparator', comp, options);\n    this.options = options;\n    this.loose = !!options.loose;\n    this.parse(comp);\n\n    if (this.semver === ANY) {\n      this.value = '';\n    } else {\n      this.value = this.operator + this.semver.version;\n    }\n\n    debug('comp', this);\n  }\n\n  _createClass(Comparator, [{\n    key: \"parse\",\n    value: function parse(comp) {\n      var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n      var m = comp.match(r);\n\n      if (!m) {\n        throw new TypeError(\"Invalid comparator: \".concat(comp));\n      }\n\n      this.operator = m[1] !== undefined ? m[1] : '';\n\n      if (this.operator === '=') {\n        this.operator = '';\n      } // if it literally is just '>' or '' then allow anything.\n\n\n      if (!m[2]) {\n        this.semver = ANY;\n      } else {\n        this.semver = new SemVer(m[2], this.options.loose);\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value;\n    }\n  }, {\n    key: \"test\",\n    value: function test(version) {\n      debug('Comparator.test', version, this.options.loose);\n\n      if (this.semver === ANY || version === ANY) {\n        return true;\n      }\n\n      if (typeof version === 'string') {\n        try {\n          version = new SemVer(version, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n\n      return cmp(version, this.operator, this.semver, this.options);\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(comp, options) {\n      if (!(comp instanceof Comparator)) {\n        throw new TypeError('a Comparator is required');\n      }\n\n      if (!options || _typeof(options) !== 'object') {\n        options = {\n          loose: !!options,\n          includePrerelease: false\n        };\n      }\n\n      if (this.operator === '') {\n        if (this.value === '') {\n          return true;\n        }\n\n        return new Range(comp.value, options).test(this.value);\n      } else if (comp.operator === '') {\n        if (comp.value === '') {\n          return true;\n        }\n\n        return new Range(this.value, options).test(comp.semver);\n      }\n\n      var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n      var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n      var sameSemVer = this.semver.version === comp.semver.version;\n      var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n      var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n      var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n      return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n    }\n  }]);\n\n  return Comparator;\n}();\n\nmodule.exports = Comparator;\n\nvar _require = require('../internal/re'),\n    re = _require.re,\n    t = _require.t;\n\nvar cmp = require('../functions/cmp');\n\nvar debug = require('../internal/debug');\n\nvar SemVer = require('./semver');\n\nvar Range = require('./range');","\"use strict\";\n\nvar Range = require('../classes/range');\n\nvar satisfies = function satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n\n  return range.test(version);\n};\n\nmodule.exports = satisfies;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nvar Range = require('../classes/range'); // Mostly just for testing and legacy API reasons\n\n\nvar toComparators = function toComparators(range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n};\n\nmodule.exports = toComparators;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nvar SemVer = require('../classes/semver');\n\nvar Range = require('../classes/range');\n\nvar maxSatisfying = function maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  var rangeObj = null;\n\n  try {\n    rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n};\n\nmodule.exports = maxSatisfying;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nvar SemVer = require('../classes/semver');\n\nvar Range = require('../classes/range');\n\nvar minSatisfying = function minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  var rangeObj = null;\n\n  try {\n    rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  });\n  return min;\n};\n\nmodule.exports = minSatisfying;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nvar SemVer = require('../classes/semver');\n\nvar Range = require('../classes/range');\n\nvar gt = require('../functions/gt');\n\nvar minVersion = function minVersion(range, loose) {\n  range = new Range(range, loose);\n  var minver = new SemVer('0.0.0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = new SemVer('0.0.0-0');\n\n  if (range.test(minver)) {\n    return minver;\n  }\n\n  minver = null;\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version);\n\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++;\n          } else {\n            compver.prerelease.push(0);\n          }\n\n          compver.raw = compver.format();\n\n        /* fallthrough */\n\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver;\n          }\n\n          break;\n\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error(\"Unexpected operation: \".concat(comparator.operator));\n      }\n    });\n  }\n\n  if (minver && range.test(minver)) {\n    return minver;\n  }\n\n  return null;\n};\n\nmodule.exports = minVersion;","\"use strict\";\n\nvar Range = require('../classes/range');\n\nvar validRange = function validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n};\n\nmodule.exports = validRange;","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar SemVer = require('../classes/semver');\n\nvar Comparator = require('../classes/comparator');\n\nvar ANY = Comparator.ANY;\n\nvar Range = require('../classes/range');\n\nvar satisfies = require('../functions/satisfies');\n\nvar gt = require('../functions/gt');\n\nvar lt = require('../functions/lt');\n\nvar lte = require('../functions/lte');\n\nvar gte = require('../functions/gte');\n\nvar outside = function outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  } // If it satisifes the range it is not outside\n\n\n  if (satisfies(version, range, options)) {\n    return false;\n  } // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n\n  var _loop = function _loop(i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n\n      high = high || comparator;\n      low = low || comparator;\n\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    }); // If the edge version comparator has a operator then our version\n    // isn't outside it\n\n    if (high.operator === comp || high.operator === ecomp) {\n      return {\n        v: false\n      };\n    } // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n\n\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return {\n        v: false\n      };\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return {\n        v: false\n      };\n    }\n  };\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var _ret = _loop(i);\n\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n\n  return true;\n};\n\nmodule.exports = outside;","\"use strict\";\n\n// Determine if version is greater than all the versions possible in the range.\nvar outside = require('./outside');\n\nvar gtr = function gtr(version, range, options) {\n  return outside(version, range, '>', options);\n};\n\nmodule.exports = gtr;","\"use strict\";\n\nvar outside = require('./outside'); // Determine if version is less than all the versions possible in the range\n\n\nvar ltr = function ltr(version, range, options) {\n  return outside(version, range, '<', options);\n};\n\nmodule.exports = ltr;","\"use strict\";\n\nvar Range = require('../classes/range');\n\nvar intersects = function intersects(r1, r2, options) {\n  r1 = new Range(r1, options);\n  r2 = new Range(r2, options);\n  return r1.intersects(r2);\n};\n\nmodule.exports = intersects;","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.sort\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nvar satisfies = require('../functions/satisfies.js');\n\nvar compare = require('../functions/compare.js');\n\nmodule.exports = function (versions, range, options) {\n  var set = [];\n  var min = null;\n  var prev = null;\n  var v = versions.sort(function (a, b) {\n    return compare(a, b, options);\n  });\n\n  var _iterator = _createForOfIteratorHelper(v),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var version = _step.value;\n      var included = satisfies(version, range, options);\n\n      if (included) {\n        prev = version;\n        if (!min) min = version;\n      } else {\n        if (prev) {\n          set.push([min, prev]);\n        }\n\n        prev = null;\n        min = null;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (min) set.push([min, null]);\n  var ranges = [];\n\n  for (var _i = 0, _set = set; _i < _set.length; _i++) {\n    var _set$_i = _slicedToArray(_set[_i], 2),\n        _min = _set$_i[0],\n        max = _set$_i[1];\n\n    if (_min === max) ranges.push(_min);else if (!max && _min === v[0]) ranges.push('*');else if (!max) ranges.push(\">=\".concat(_min));else if (_min === v[0]) ranges.push(\"<=\".concat(max));else ranges.push(\"\".concat(_min, \" - \").concat(max));\n  }\n\n  var simplified = ranges.join(' || ');\n  var original = typeof range.raw === 'string' ? range.raw : String(range);\n  return simplified.length < original.length ? simplified : range;\n};","\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.set\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar Range = require('../classes/range.js');\n\nvar _require = require('../classes/comparator.js'),\n    ANY = _require.ANY;\n\nvar satisfies = require('../functions/satisfies.js');\n\nvar compare = require('../functions/compare.js'); // Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a subset of some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else return false\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n// - If LT\n//   - If LT.semver is greater than that of any > comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n// - If any C is a = range, and GT or LT are set, return false\n// - Else return true\n\n\nvar subset = function subset(sub, dom, options) {\n  sub = new Range(sub, options);\n  dom = new Range(dom, options);\n  var sawNonNull = false;\n\n  var _iterator = _createForOfIteratorHelper(sub.set),\n      _step;\n\n  try {\n    OUTER: for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var simpleSub = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(dom.set),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var simpleDom = _step2.value;\n          var isSub = simpleSubset(simpleSub, simpleDom, options);\n          sawNonNull = sawNonNull || isSub !== null;\n          if (isSub) continue OUTER;\n        } // the null set is a subset of everything, but null simple ranges in\n        // a complex range should be ignored.  so if we saw a non-null range,\n        // then we know this isn't a subset, but if EVERY simple range was null,\n        // then it is a subset.\n\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (sawNonNull) return false;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n};\n\nvar simpleSubset = function simpleSubset(sub, dom, options) {\n  if (sub.length === 1 && sub[0].semver === ANY) return dom.length === 1 && dom[0].semver === ANY;\n  var eqSet = new Set();\n  var gt, lt;\n\n  var _iterator3 = _createForOfIteratorHelper(sub),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var c = _step3.value;\n      if (c.operator === '>' || c.operator === '>=') gt = higherGT(gt, c, options);else if (c.operator === '<' || c.operator === '<=') lt = lowerLT(lt, c, options);else eqSet.add(c.semver);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  if (eqSet.size > 1) return null;\n  var gtltComp;\n\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options);\n    if (gtltComp > 0) return null;else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) return null;\n  } // will iterate one or zero times\n\n\n  var _iterator4 = _createForOfIteratorHelper(eqSet),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var eq = _step4.value;\n      if (gt && !satisfies(eq, String(gt), options)) return null;\n      if (lt && !satisfies(eq, String(lt), options)) return null;\n\n      var _iterator6 = _createForOfIteratorHelper(dom),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _c = _step6.value;\n          if (!satisfies(eq, String(_c), options)) return false;\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return true;\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  var higher, lower;\n  var hasDomLT, hasDomGT;\n\n  var _iterator5 = _createForOfIteratorHelper(dom),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var _c2 = _step5.value;\n      hasDomGT = hasDomGT || _c2.operator === '>' || _c2.operator === '>=';\n      hasDomLT = hasDomLT || _c2.operator === '<' || _c2.operator === '<=';\n\n      if (gt) {\n        if (_c2.operator === '>' || _c2.operator === '>=') {\n          higher = higherGT(gt, _c2, options);\n          if (higher === _c2) return false;\n        } else if (gt.operator === '>=' && !satisfies(gt.semver, String(_c2), options)) return false;\n      }\n\n      if (lt) {\n        if (_c2.operator === '<' || _c2.operator === '<=') {\n          lower = lowerLT(lt, _c2, options);\n          if (lower === _c2) return false;\n        } else if (lt.operator === '<=' && !satisfies(lt.semver, String(_c2), options)) return false;\n      }\n\n      if (!_c2.operator && (lt || gt) && gtltComp !== 0) return false;\n    } // if there was a < or >, and nothing in the dom, then must be false\n    // UNLESS it was limited by another range in the other direction.\n    // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  if (gt && hasDomLT && !lt && gtltComp !== 0) return false;\n  if (lt && hasDomGT && !gt && gtltComp !== 0) return false;\n  return true;\n}; // >=1.2.3 is lower than >1.2.3\n\n\nvar higherGT = function higherGT(a, b, options) {\n  if (!a) return b;\n  var comp = compare(a.semver, b.semver, options);\n  return comp > 0 ? a : comp < 0 ? b : b.operator === '>' && a.operator === '>=' ? b : a;\n}; // <=1.2.3 is higher than <1.2.3\n\n\nvar lowerLT = function lowerLT(a, b, options) {\n  if (!a) return b;\n  var comp = compare(a.semver, b.semver, options);\n  return comp < 0 ? a : comp > 0 ? b : b.operator === '<' && a.operator === '<=' ? b : a;\n};\n\nmodule.exports = subset;","\"use strict\";\n\n// just pre-load all the stuff that index.js lazily exports\nvar internalRe = require('./internal/re');\n\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset')\n};"],"names":["_templateObject","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","call","slice","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","Action","splitPathRegex","parsePath","memoize","path","result","viewMode","storyId","refId","_ref2","toLowerCase","match","assign","DEEPLY_EQUAL","deepDiff","update","deepEqual","res","reduce","acc","upd","index","diff","concat","fill","isPlainObject","keys","VALIDATION_REGEXP","NUMBER_REGEXP","HEX_REGEXP","COLOR_REGEXP","validateArgs","arguments","Date","every","v","entries","_ref3","_ref4","k","encodeSpecialValues","replace","map","_ref5","_ref6","val","QS_OPTIONS","encode","delimiter","allowDots","format","serializeDate","date","toISOString","buildArgsParam","initialArgs","args","object","_ref7","strings","raw","_ref8","once","warn","dedent","freeze","defineProperties","qs","stringify","split","part","join","queryFromString","s","parse","ignoreQueryPrefix","queryFromLocation","location","search","stringifyQuery","query","addQueryPrefix","getMatch","current","target","startsWithTarget","startsWith","currentIsTarget","matchTarget","PopStateEventType","createBrowserHistory","options","getLocation","createHref","validateLocation","_options2","_options2$window","window","document","defaultView","_options2$v5Compat","v5Compat","globalHistory","history","action","Pop","listener","getIndex","replaceState","_extends","state","idx","handlePop","nextIndex","delta","to","Push","createLocation","historyState","getHistoryState","url","pushState","error","DOMException","Replace","createURL","base","origin","href","createPath","invariant","URL","listen","fn","Error","addEventListener","removeEventListener","encodeLocation","pathname","hash","go","getUrlBasedHistory","_window$location","usr","message","Math","random","substr","_ref","_ref$pathname","_ref$search","_ref$hash","charAt","parsedPath","hashIndex","indexOf","searchIndex","NavigationContext","React","LocationContext","matches","isDataRoute","event","button","altKey","ctrlKey","shiftKey","isModifiedEvent","ToggleVisibility","hidden","children","createElement","source","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","displayName","global","useQueryNavigate","navigate","useNavigate","useCallback","plain","QueryLink","rest","Link","QueryLocation","useLocation","_queryFromString","singleStory","_parsePath","Fragment","QueryMatch","targetPath","_ref3$startsWith","urlPath","Route","_ref5$startsWith","_ref5$hideOnly","hideOnly","baseAssignValue","require$$0","eq","require$$1","_assignMergeValue","isArrayLike","isObjectLike","isArrayLikeObject_1","_safeGet","copyObject","keysIn","toPlainObject_1","assignMergeValue","cloneBuffer","cloneTypedArray","require$$2","copyArray","require$$3","initCloneObject","require$$4","isArguments","require$$5","require$$6","isArrayLikeObject","require$$7","isBuffer","require$$8","isFunction","require$$9","isObject","require$$10","require$$11","isTypedArray","require$$12","safeGet","require$$13","toPlainObject","require$$14","Stack","baseFor","baseMergeDeep","srcIndex","mergeFunc","customizer","stack","objValue","srcValue","stacked","get","newValue","isCommon","isArr","isBuff","isTyped","set","_baseMerge","baseMerge","identity","overRest","setToString","isIndex","baseRest","func","start","isIterateeCall","type","mergeWith_1","assigner","sources","guard","createAssigner","define","_","version","areas","apis","nsdelim","inherit","api","p","getOwnPropertyDescriptor","d","JSON","revive","e","storeAPI","area","getItem","string","setItem","remove","removeItem","clear","Store","id","namespace","store","data","overwrite","getAll","transact","each","setAll","_id","testKey","_area","storage","_ns","singleArea","delim","_delim","substring","ns","isFake","force","_real","has","_in","size","m","_out","fillList","list","alt","fillObj","all","ret","replacer","changed","add","clearAll","storageAPI","items","c","localStorage","local","sessionStorage","amd","module","exports","conflict","baseIsEqual","isEqual_1","other","_arrayAggregator","array","setter","iteratee","accumulator","baseEach","eachFunc","fromRight","collection","iterable","createBaseEach","arrayAggregator","baseAggregator","baseIteratee","createAggregator","initializer","countBy_1","constants","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","debug_1","process","env","NODE_DEBUG","_console","_len","_key","console","debug","re","src","t","R","createToken","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","LONECARET","numeric","compareIdentifiers","a","b","anum","bnum","identifiers","rcompareIdentifiers","_defineProperties","props","descriptor","_require2","SemVer","instance","Constructor","_classCallCheck","loose","includePrerelease","trim","LOOSE","FULL","major","minor","patch","prerelease","num","build","protoProps","staticProps","compareMain","comparePre","release","identifier","inc","isNaN","semver","parse_1","er","valid_1","clean_1","inc_1","compare_1","compare","eq_1","diff_1","version1","version2","v1","v2","hasPre","prefix","defaultResult","major_1","minor_1","patch_1","prerelease_1","parsed","rcompare_1","compareLoose_1","compareBuild_1","versionA","versionB","compareBuild","sort_1","sort","rsort_1","gt_1","lt_1","neq_1","gte_1","lte_1","neq","gt","gte","lt","lte","cmp_1","op","_require","coerce_1","String","rtl","COERCERTL","exec","lastIndex","_toConsumableArray","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","_createForOfIteratorHelper","F","f","it","normalCompletion","didErr","step","_e2","Range","range","_this","Comparator","parseRange","filter","first","isNullSet","_step","_iterator","isAny","comps","_this2","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","COMPARATORLOOSE","COMPARATOR","rangeList","comp","parseComparator","replaceGTE0","_step2","rangeMap","Map","_iterator2","values","some","thisComparators","isSatisfiable","rangeComparators","thisComparator","rangeComparator","intersects","testSet","comparators","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","r","TILDELOOSE","TILDE","M","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","ANY","allowed","_createClass","operator","cmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comparator","satisfies_1","toComparators_1","maxSatisfying_1","versions","max","maxSV","rangeObj","forEach","minSatisfying_1","min","minSV","minVersion_1","minver","compver","valid","satisfies","outside_1","hilo","gtfn","ltefn","ltfn","ecomp","_loop","high","low","_ret","outside","gtr_1","ltr_1","intersects_1","r1","r2","simpleSubset","sub","dom","_step3","gtltComp","eqSet","Set","_iterator3","higherGT","lowerLT","_step4","hasDomLT","hasDomGT","_iterator4","_step6","_iterator6","_c","_step5","_iterator5","_c2","subset_1","sawNonNull","OUTER","simpleSub","simpleDom","isSub","internalRe","tokens","clean","rcompare","compareLoose","require$$15","require$$16","require$$17","rsort","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","coerce","require$$26","require$$27","require$$28","require$$29","toComparators","require$$30","maxSatisfying","require$$31","minSatisfying","require$$32","minVersion","require$$33","validRange","require$$34","require$$35","gtr","require$$36","ltr","require$$37","require$$38","simplifyRange","prev","_e3","ranges","_set","_set$_i","_min","simplified","original","subset","require$$40"],"mappings":"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"}