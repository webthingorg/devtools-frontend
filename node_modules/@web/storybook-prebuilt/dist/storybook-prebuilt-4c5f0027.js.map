{"version":3,"file":"storybook-prebuilt-4c5f0027.js","sources":["../node_modules/@storybook/addons/dist/esm/types.js","../node_modules/@storybook/addons/dist/esm/index.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/pickBy.js"],"sourcesContent":["import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.values.js\";\n// NOTE: The types exported from this file are simplified versions of the types exported\n// by @storybook/csf, with the simpler form retained for backwards compatibility.\n// We will likely start exporting the more complex <StoryFnReturnType> based types in 7.0\n// The `any` here is the story store's `StoreItem` record. Ideally we should probably only\n// pass a defined subset of that full data, but we pass it all so far :shrug:\nexport var types;\n\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"TOOLEXTRA\"] = \"toolextra\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (types = {}));\n\nexport function isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}","import \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport global from 'global';\nimport { Channel } from '@storybook/channels';\nimport { logger } from '@storybook/client-logger';\nimport { types } from './types';\nexport { Channel };\nexport var AddonStore = function AddonStore() {\n  var _this = this;\n\n  _classCallCheck(this, AddonStore);\n\n  this.loaders = {};\n  this.elements = {};\n  this.config = {};\n  this.channel = void 0;\n  this.serverChannel = void 0;\n  this.promise = void 0;\n  this.resolve = void 0;\n\n  this.getChannel = function () {\n    // this.channel should get overwritten by setChannel. If it wasn't called (e.g. in non-browser environment), throw.\n    if (!_this.channel) {\n      throw new Error('Accessing non-existent addons channel, see https://storybook.js.org/basics/faq/#why-is-there-no-addons-channel');\n    }\n\n    return _this.channel;\n  };\n\n  this.getServerChannel = function () {\n    if (!_this.serverChannel) {\n      throw new Error('Accessing non-existent serverChannel');\n    }\n\n    return _this.serverChannel;\n  };\n\n  this.ready = function () {\n    return _this.promise;\n  };\n\n  this.hasChannel = function () {\n    return !!_this.channel;\n  };\n\n  this.hasServerChannel = function () {\n    return !!_this.serverChannel;\n  };\n\n  this.setChannel = function (channel) {\n    _this.channel = channel;\n\n    _this.resolve();\n  };\n\n  this.setServerChannel = function (channel) {\n    _this.serverChannel = channel;\n  };\n\n  this.getElements = function (type) {\n    if (!_this.elements[type]) {\n      _this.elements[type] = {};\n    }\n\n    return _this.elements[type];\n  };\n\n  this.addPanel = function (name, options) {\n    _this.add(name, Object.assign({\n      type: types.PANEL\n    }, options));\n  };\n\n  this.add = function (name, addon) {\n    var type = addon.type;\n\n    var collection = _this.getElements(type);\n\n    collection[name] = Object.assign({\n      id: name\n    }, addon);\n  };\n\n  this.setConfig = function (value) {\n    Object.assign(_this.config, value);\n  };\n\n  this.getConfig = function () {\n    return _this.config;\n  };\n\n  this.register = function (name, registerCallback) {\n    if (_this.loaders[name]) {\n      logger.warn(\"\".concat(name, \" was loaded twice, this could have bad side-effects\"));\n    }\n\n    _this.loaders[name] = registerCallback;\n  };\n\n  this.loadAddons = function (api) {\n    Object.values(_this.loaders).forEach(function (value) {\n      return value(api);\n    });\n  };\n\n  this.promise = new Promise(function (res) {\n    _this.resolve = function () {\n      return res(_this.getChannel());\n    };\n  });\n}; // Enforce addons store to be a singleton\n\nvar KEY = '__STORYBOOK_ADDONS';\n\nfunction getAddonsStore() {\n  if (!global[KEY]) {\n    global[KEY] = new AddonStore();\n  }\n\n  return global[KEY];\n} // Exporting this twice in order to to be able to import it like { addons } instead of 'addons'\n// prefer import { addons } from '@storybook/addons' over import addons from '@storybook/addons'\n//\n// See public_api.ts\n\n\nexport var addons = getAddonsStore();","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n"],"names":["types","isSupportedType","type","Object","values","find","typeVal","AddonStore","_this","this","instance","Constructor","TypeError","_classCallCheck","loaders","elements","config","channel","serverChannel","promise","resolve","getChannel","Error","getServerChannel","ready","hasChannel","hasServerChannel","setChannel","setServerChannel","getElements","addPanel","name","options","add","assign","PANEL","addon","id","setConfig","value","getConfig","register","registerCallback","logger","warn","concat","loadAddons","api","forEach","Promise","res","KEY","addons","global","arrayPush","require$$0","getPrototype","require$$1","getSymbols","require$$2","stubArray","require$$3","_getSymbolsIn","getOwnPropertySymbols","object","result","baseGetAllKeys","getSymbolsIn","keysIn","_getAllKeysIn","arrayMap","baseIteratee","basePickBy","getAllKeysIn","predicate","props","prop","path"],"mappings":"wKAOWA,EAWJ,SAASC,EAAgBC,GAC9B,QAASC,OAAOC,OAAOJ,GAAOK,MAAK,SAAUC,GAC3C,OAAOA,IAAYJ,IAEvB,EAbA,SAAWF,GACTA,EAAW,IAAI,MACfA,EAAa,MAAI,QACjBA,EAAY,KAAI,OAChBA,EAAiB,UAAI,YACrBA,EAAe,QAAI,UACnBA,EAAqB,cAAI,eAC1B,CAPD,CAOGA,IAAUA,EAAQ,SCHVO,EAAa,SAASA,IAC/B,IAAIC,EAAQC,MARd,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,oCAAwC,CAUtJC,CAAgBJ,KAAMF,GAEtBE,KAAKK,QAAU,GACfL,KAAKM,SAAW,GAChBN,KAAKO,OAAS,GACdP,KAAKQ,aAAU,EACfR,KAAKS,mBAAgB,EACrBT,KAAKU,aAAU,EACfV,KAAKW,aAAU,EAEfX,KAAKY,WAAa,WAEhB,IAAKb,EAAMS,QACT,MAAM,IAAIK,MAAM,kHAGlB,OAAOd,EAAMS,SAGfR,KAAKc,iBAAmB,WACtB,IAAKf,EAAMU,cACT,MAAM,IAAII,MAAM,wCAGlB,OAAOd,EAAMU,eAGfT,KAAKe,MAAQ,WACX,OAAOhB,EAAMW,SAGfV,KAAKgB,WAAa,WAChB,QAASjB,EAAMS,SAGjBR,KAAKiB,iBAAmB,WACtB,QAASlB,EAAMU,eAGjBT,KAAKkB,WAAa,SAAUV,GAC1BT,EAAMS,QAAUA,EAEhBT,EAAMY,WAGRX,KAAKmB,iBAAmB,SAAUX,GAChCT,EAAMU,cAAgBD,GAGxBR,KAAKoB,YAAc,SAAU3B,GAK3B,OAJKM,EAAMO,SAASb,KAClBM,EAAMO,SAASb,GAAQ,IAGlBM,EAAMO,SAASb,IAGxBO,KAAKqB,SAAW,SAAUC,EAAMC,GAC9BxB,EAAMyB,IAAIF,EAAM5B,OAAO+B,OAAO,CAC5BhC,KAAMF,EAAMmC,OACXH,KAGLvB,KAAKwB,IAAM,SAAUF,EAAMK,GACzB,IAAIlC,EAAOkC,EAAMlC,KAEAM,EAAMqB,YAAY3B,GAExB6B,GAAQ5B,OAAO+B,OAAO,CAC/BG,GAAIN,GACHK,IAGL3B,KAAK6B,UAAY,SAAUC,GACzBpC,OAAO+B,OAAO1B,EAAMQ,OAAQuB,IAG9B9B,KAAK+B,UAAY,WACf,OAAOhC,EAAMQ,QAGfP,KAAKgC,SAAW,SAAUV,EAAMW,GAC1BlC,EAAMM,QAAQiB,IAChBY,EAAOC,KAAK,GAAGC,OAAOd,EAAM,wDAG9BvB,EAAMM,QAAQiB,GAAQW,GAGxBjC,KAAKqC,WAAa,SAAUC,GAC1B5C,OAAOC,OAAOI,EAAMM,SAASkC,SAAQ,SAAUT,GAC7C,OAAOA,EAAMQ,OAIjBtC,KAAKU,QAAU,IAAI8B,SAAQ,SAAUC,GACnC1C,EAAMY,QAAU,WACd,OAAO8B,EAAI1C,EAAMa,iBAGvB,EAEI8B,EAAM,yBAcCC,GAXJC,EAAOF,KACVE,EAAOF,GAAO,IAAI5C,GAGb8C,EAAOF,IC7HZG,EAAYC,EACZC,EAAeC,EACfC,EAAaC,EACbC,EAAYC,EAqBhBC,EAlBuB3D,OAAO4D,sBASqB,SAASC,GAE1D,IADA,IAAIC,EAAS,GACND,GACLV,EAAUW,EAAQP,EAAWM,IAC7BA,EAASR,EAAaQ,GAExB,OAAOC,CACT,EAPuCL,ECfnCM,EAAiBX,EACjBY,EAAeV,EACfW,EAAST,MAcbU,EAJA,SAAsBL,GACpB,OAAOE,EAAeF,EAAQI,EAAQD,EACxC,ECdIG,EAAWf,EACXgB,EAAed,EACfe,EAAab,EACbc,EAAeZ,QAoBnB,SAAgBG,EAAQU,GACtB,GAAc,MAAVV,EACF,MAAO,GAET,IAAIW,EAAQL,EAASG,EAAaT,IAAS,SAASY,GAClD,MAAO,CAACA,MAGV,OADAF,EAAYH,EAAaG,GAClBF,EAAWR,EAAQW,GAAO,SAASpC,EAAOsC,GAC/C,OAAOH,EAAUnC,EAAOsC,EAAK,MAEjC"}