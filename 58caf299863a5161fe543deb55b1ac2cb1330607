{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d9eebcf4_bdc37695",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1463457
      },
      "writtenOn": "2022-03-18T14:05:19Z",
      "side": 1,
      "message": "Hi I unloaded this cl last week, it doesn\u0027t look like it has been reviewed.  Is there another action I need to take?",
      "revId": "58caf299863a5161fe543deb55b1ac2cb1330607",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be361c8d_ae8980eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2022-03-21T13:15:41Z",
      "side": 1,
      "message": "Changhao, could you please review this CL? ",
      "revId": "58caf299863a5161fe543deb55b1ac2cb1330607",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dbbe370_6450322f",
        "filename": "front_end/ui/legacy/Treeoutline.ts",
        "patchSetId": 1
      },
      "lineNbr": 1258,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-03-22T14:32:30Z",
      "side": 1,
      "message": "I\u0027m not sure adding this behavior at a low level like \"ui/legacy/TreeOutline.ts\" is the best option. If this is only to fix the Computed sidebar pane, maybe there are other higher-level call sites to add this logic?",
      "revId": "58caf299863a5161fe543deb55b1ac2cb1330607",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23020054_eeb1bafc",
        "filename": "front_end/ui/legacy/Treeoutline.ts",
        "patchSetId": 1
      },
      "lineNbr": 1258,
      "author": {
        "id": 1463457
      },
      "writtenOn": "2022-03-23T13:33:47Z",
      "side": 1,
      "message": "Do you mean that there is some reusable code elsewhere that can provide functionality for the computed pane, rather than what is being used in front_end/ui/legacy/Treeoutline.ts?",
      "parentUuid": "3dbbe370_6450322f",
      "revId": "58caf299863a5161fe543deb55b1ac2cb1330607",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3fc1363_2231f600",
        "filename": "front_end/ui/legacy/Treeoutline.ts",
        "patchSetId": 1
      },
      "lineNbr": 1258,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-03-24T08:40:45Z",
      "side": 1,
      "message": "What I meant is that I don\u0027t think this is the default behavior we want for a low-level element like TreeOutline. It seems that most real logic is added on elements that inherit TreeOutline. Another option would be to create a new class, `ComputedStyleWidgetTreeElement` that `extends` the base Treeoutline, and just override the `onenter()` function there, and change the usage of TreeElement in ComputedStyleWidget to this new class.\nI know this is a bit more code involved, but IMO it\u0027s better in architecture. Also since we plan to migrate the ComputedStyleWidget to a new component system, this nice change, if added in Treeoutline, would most likely be lost.",
      "parentUuid": "23020054_eeb1bafc",
      "revId": "58caf299863a5161fe543deb55b1ac2cb1330607",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}