{
  "comments": [
    {
      "key": {
        "uuid": "6a056f3f_b209c3b1",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 417,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-05-27T08:56:36Z",
      "side": 1,
      "message": "TempFile could probably be merged into the scoped object below.",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af9bc7e0_070ce90a",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 417,
      "author": {
        "id": 1318771
      },
      "writtenOn": "2020-05-28T08:44:36Z",
      "side": 1,
      "message": "I would like to keep TempFile separated, so that it can be easily replaced with the LLVM llvm::sys::fs::TempFile on non-Windows builds.",
      "parentUuid": "6a056f3f_b209c3b1",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "947e0ca5_99f2cddb",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 417,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-06-02T16:23:49Z",
      "side": 1,
      "message": "With TempFileWin that makes sense!",
      "parentUuid": "af9bc7e0_070ce90a",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bfdff4_f3938b40",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-05-27T08:56:36Z",
      "side": 1,
      "message": "This could also be a SmallString.",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42158e1a_6ebf1e58",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1318771
      },
      "writtenOn": "2020-05-28T08:44:36Z",
      "side": 1,
      "message": "There is a public \"std::string TmpName\" data member in llvm::sys::fs::TempFile, so I\u0027d have the same data member in TempFileWin.",
      "parentUuid": "e3bfdff4_f3938b40",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f11a707_b8d4c3b4",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-06-02T16:23:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "42158e1a_6ebf1e58",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52500c4f_0061a6c2",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-05-27T08:56:36Z",
      "side": 1,
      "message": "Could we set the DeleteDisposition at this point instead of deleting it manually?",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c549fd8a_fdc69f2b",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1318771
      },
      "writtenOn": "2020-05-28T08:44:36Z",
      "side": 1,
      "message": "Cannot call the existing setDeleteDisposition() function declared in llvm\\llvm\\lib\\Support\\Windows\\Path.inc because I cannot include that file.\n\nI could duplicate the code here, it\u0027s the small function below, but the semantics of SetFileInformationByHandle(... FileDispositionInfo) is so convoluted on Windows that I think it\u0027s clearer to directly call DeleteFile. But this can change if you so prefer.\n\n\nstatic std::error_code setDeleteDisposition(HANDLE Handle, bool Delete) {\n  FILE_DISPOSITION_INFO Disposition;\n  Disposition.DeleteFile \u003d Delete;\n  if (!SetFileInformationByHandle(Handle, FileDispositionInfo, \u0026Disposition,\n                                  sizeof(Disposition)))\n    return mapWindowsError(::GetLastError());\n  return std::error_code();\n}",
      "parentUuid": "52500c4f_0061a6c2",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55d05b02_70a4c9c6",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2020-06-02T16:23:49Z",
      "side": 1,
      "message": "It\u0027s a bit unfortunate that we can\u0027t simply call this method. Deleting files manually (and by name) scares me a lot, so if we can work around that (with adequate overhead) then I\u0027d prefer that!",
      "parentUuid": "c549fd8a_fdc69f2b",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0f942c1_31e36eee",
        "filename": "back_end/CXXDWARFSymbols/lib/Variables.cc",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1318771
      },
      "writtenOn": "2020-06-03T05:08:54Z",
      "side": 1,
      "message": "The LLVM code for TempFile is really too convoluted on Windows. We cannot just call SetFileInformationByHandle(...FileDispositionInfo) here because the file should have been created with access flags GENERIC_READ | GENERIC_WRITE | DELETE. (See file third_party\\llvm\\llvm\\lib\\Support\\Windows\\Path.inc). \nTo have \u0027DELETE\u0027 we need to pass Flags\u003d\u003dOF_Delete to llvm::sys::fs::createUniqueFile(), but then the existing code calls setDeleteDisposition() causing the problem we are trying to fix. There is no way to set the \u0027DELETE\u0027 flag avoiding the call to setDeleteDisposition() because a lot of the logic is in static functions in LLVM that cannot be called directly.\nA good workaround is to call createUniqueFile() and then open the file in TempFile::create() with the right flags.\nIn this way here we can call SetFileInformationByHandle and set the file to delete on close.\n\nHowever, this is not sufficient: the file .wasm that we pass to lld::wasm::link() gets renamed by LLVM when the wasm file is written; for example C:\\Users\\\u003cUSER\u003e\\AppData\\Local\\Temp\\wasm_formatter-a8c193.wasm is renamed as C:\\Users\\\u003cUSER\u003e\\AppData\\Local\\Temp\\wasm_formatter-a8c193.wasm.tmp0, keeping the same file handle opened. After the renaming, a new file C:\\Users\\\u003cUSER\u003e\\AppData\\Local\\Temp\\wasm_formatter-a8c193.wasm is created.\nThis means that when we call SetFileInformationByHandle() and then close() here, we are actually deleting the renamed file, and we also need to call ::DeleteFile() to rename the new copy of the file. (I am supposing that after TempFileScope is destroyed we don\u0027t want to keep the wasm file we generated, in fact we want all these temporary files to be removed when running our tests).\nNotice that the original TempFile::discard() does call fs::remove(TmpName) on Linux. It doesn\u0027t do that on Windows, but that would be a problem in our case.\n\nSo, the conclusion is that the LLVM TempFile code on Windows should be used very carefully; this implementation seems to work well in our tests.",
      "parentUuid": "55d05b02_70a4c9c6",
      "revId": "1b4b5fccd07f1e20afc40ab88caee74ec57e7b52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}