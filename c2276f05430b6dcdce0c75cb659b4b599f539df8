{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "04ac7e71_f1007ad7",
        "filename": "front_end/models/workspace/UISourceCode.ts",
        "patchSetId": 5
      },
      "lineNbr": 240,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-05-28T09:30:50Z",
      "side": 1,
      "message": "Why not return this.contentInternal then? Maybe with console.assert?\n\nWhen they are hit errors usually cause user visible breakage, whereas we can relatively easily recover here.",
      "revId": "c2276f05430b6dcdce0c75cb659b4b599f539df8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae9f907_058e90f2",
        "filename": "front_end/models/workspace/UISourceCode.ts",
        "patchSetId": 5
      },
      "lineNbr": 240,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-05-28T09:56:26Z",
      "side": 1,
      "message": "I could change this into a `Platform.DCHECK`. At the moment this `throw` can\u0027t actually happen by construction. I just wanted to make it explicit and make TS happy at the same time.",
      "parentUuid": "04ac7e71_f1007ad7",
      "revId": "c2276f05430b6dcdce0c75cb659b4b599f539df8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "989ea308_ec613e06",
        "filename": "front_end/models/workspace/UISourceCode.ts",
        "patchSetId": 5
      },
      "lineNbr": 240,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-05-28T12:04:16Z",
      "side": 1,
      "message": "That sounds good!",
      "parentUuid": "3ae9f907_058e90f2",
      "revId": "c2276f05430b6dcdce0c75cb659b4b599f539df8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6590deb2_cf9af3e4",
        "filename": "front_end/models/workspace/UISourceCode.ts",
        "patchSetId": 5
      },
      "lineNbr": 240,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-05-29T06:11:18Z",
      "side": 1,
      "message": "Benedikt remove DCHECK with https://crrev.com/c/5319500 so I\u0027d like to keep it as is to get the type narrowing.",
      "parentUuid": "989ea308_ec613e06",
      "revId": "c2276f05430b6dcdce0c75cb659b4b599f539df8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ed4dfc2_9d827410",
        "filename": "front_end/models/workspace/UISourceCode.ts",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2024-05-28T09:24:31Z",
      "side": 1,
      "message": "If it\u0027s only for comparison, is there any reason to decode it? Or would it work to `return content.createdFromBase64 ? content.base64 : \u0027text:\u0027 + content.text;`?",
      "range": {
        "startLine": 274,
        "startChar": 39,
        "endLine": 274,
        "endChar": 66
      },
      "revId": "c2276f05430b6dcdce0c75cb659b4b599f539df8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "578595eb_210d2fb3",
        "filename": "front_end/models/workspace/UISourceCode.ts",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-05-28T09:30:14Z",
      "side": 1,
      "message": "We need to match what `this.#decodeContent` is doing, which is `atob`. Whereas `Content.text()` does decode either Utf-8 or a specified charset.\n\nWe\u0027ll be able to simplify this again once `ProjectStore.requestFileContent` also returns a `ContentData`. Then we can simply compare two `ContentData`.\n\nBut there is still a bug in here somewhere because of the failing tests. Could easily be this, I\u0027ll do some more debugging.",
      "parentUuid": "0ed4dfc2_9d827410",
      "range": {
        "startLine": 274,
        "startChar": 39,
        "endLine": 274,
        "endChar": 66
      },
      "revId": "c2276f05430b6dcdce0c75cb659b4b599f539df8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}