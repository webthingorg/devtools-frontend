{
  "comments": [
    {
      "key": {
        "uuid": "93b82906_c32d2cf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-08-19T08:30:23Z",
      "side": 1,
      "message": "This needs some thought purely because we haven\u0027t really discussed how best to do components that render other children.\n\nI suspect we want to go down this root (`new X()`) because it means the parent has to get a reference to the child, but it does make the templating less nice because it\u0027s a bit more work.\n\nIt would be nice if you could get a reference to the tag name and render it directly in a template but I\u0027m not quite sure yet what works best.",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8790066_5ca55444",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-08-19T08:30:55Z",
      "side": 1,
      "message": "Are there tests in ElementsBreadcrumbs that can now be moved into a NodeText_test.ts ?",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "450fd914_34388017",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T10:20:41Z",
      "side": 1,
      "message": "I would prefer the declarative way (i.e., `\u003cdevtools-node-text .data\u003d${data} /\u003e`). In this case, it works because there is no need to obtain a reference. lit-html does not support DOM references by default as far as I know. One drawback is that using declarative style relies on the side effects of importing the module (e.g., \u0027import \u0027./NodeTest.js\u0027; // provides devtools-node-text\u0027).\n\nSo I\u0027d be for using `\u003cdevtools-node-text .data\u003d${data} /\u003e` when there is no reference needed and the constructor when the parent needs a reference.",
      "parentUuid": "93b82906_c32d2cf2",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7920b913_c8c56c66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T10:21:38Z",
      "side": 1,
      "message": "Not sure. I think I broke some breadcrumbs tests. I will write new tests and fix the breadcrumbs tests once we agree that we can merge a version where one component renders the other one. WDYT?",
      "parentUuid": "a8790066_5ca55444",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caf16026_81af9bcb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T10:25:35Z",
      "side": 1,
      "message": "Another thought: does TypeScript type-check the declarative construction via lit-html? (`\u003cdevtools-node-text .data\u003d${data} /\u003e`)",
      "parentUuid": "450fd914_34388017",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "629cc4cf_31f6e719",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T11:01:30Z",
      "side": 1,
      "message": "Added a declarative version in the meantime to see how it works. PTAL",
      "parentUuid": "caf16026_81af9bcb",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f8d778d_ebb84c29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2020-08-19T12:38:10Z",
      "side": 1,
      "message": "I\u0027m not sure regarding TypeScript, could you try deliberately passing invalid data? I would be surprised if it can typecheck that correctly. In which case that\u0027d be a vote for new X().\n\nI dislike side-effect imports too so I think that\u0027s another reason for new X().\n\nI don\u0027t feel strongly enough to block this CL landing but just to be clear this is high on my list to solve once I\u0027m back from holiday (if I wasn\u0027t going away I\u0027d probably say to hold this CL off for now) so it might be that we have to update this in time.",
      "parentUuid": "629cc4cf_31f6e719",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80658e41_84fbdd93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T12:47:29Z",
      "side": 1,
      "message": "I have tried and it does not validate types in this case. I will revert it back to `new X()` then, seems like a better way to do this.",
      "parentUuid": "3f8d778d_ebb84c29",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04dd0f8a_f16c6d2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-20T06:41:49Z",
      "side": 1,
      "message": "Jack, I will be happy to follow up in the future CLs if there are any concerns or changes to the approach once you are back.",
      "parentUuid": "80658e41_84fbdd93",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2058af0_44505d2d",
        "filename": "front_end/elements/NodeText.ts",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-08-19T08:27:40Z",
      "side": 1,
      "message": "typo (missing t)?",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ce8867c_8861f426",
        "filename": "front_end/elements/NodeText.ts",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-08-19T10:20:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2058af0_44505d2d",
      "revId": "9708c3557715e1e1d190a743aefda71e0022e526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}