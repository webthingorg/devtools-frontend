{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "986d9073_992fc385",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-11-18T16:02:07Z",
      "side": 1,
      "message": "I am creating the reland for now, but I still need to figure out why these tests suddenly started to fail.",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20d27b84_fe969550",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-11-18T16:06:36Z",
      "side": 1,
      "message": "I am wondering if we are suffering from the same issue as the `let` issue before. The output contains a screenshot of the frontend: https://logs.chromium.org/logs/devtools-frontend/buildbucket/cr-buildbucket/8830221776139920561/+/u/E2E_tests/stdout (The line after \"Frontend screenshot (copy the next line and open in the browser)\").\n\nWhen I open that link, it shows that the console has `object?.` written, but it doesn\u0027t show the autocompletion itself. This was the same for when I was debugging the `let` problem. Does that ring any bell?",
      "parentUuid": "986d9073_992fc385",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3324aa47_048a3a95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-11-18T16:09:09Z",
      "side": 1,
      "message": "Since `object` isn\u0027t a keyword, I don\u0027t think it is the `let` issue. Maybe the issue where `.`, `?.`, and `[` didn\u0027t trigger autocompletion?",
      "parentUuid": "20d27b84_fe969550",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a800c3d_067e76cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-11-18T16:30:53Z",
      "side": 1,
      "message": "Yes they indeed didn\u0027t trigger autocompletion. But it isn\u0027t clear to me why that is the case. The bots that it failed on have less powerful machines, so that\u0027s why I am thinking we might be running into a timing issue again.",
      "parentUuid": "3324aa47_048a3a95",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ceb835d_372962c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-11-19T11:34:11Z",
      "side": 1,
      "message": "So I think the reason this doesn\u0027t work is that the test is too quick and to the editor, it is as if we pasted the string \"object?.\". In stable, we don\u0027t show any autocompletion when you paste that string, but we do show autocompletion when typing manually.\n\nIn theory, someone can type so quickly that they would reproduce this issue. That said, that seems unlikely.\n\nI am not sure what the best path forward is. Ideally we can always detect key strokes from the user and show autocompletion, but I am not sure if we can make that distinction in CodeMirror?",
      "parentUuid": "2a800c3d_067e76cf",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e570fa90_876d96e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-11-19T11:37:20Z",
      "side": 1,
      "message": "The editor sees the difference between content typed and pasted into the field, and only starts completion on typing. That\u0027s why you don\u0027t get completions when you paste, but it won\u0027t be what\u0027s making the test fail.",
      "parentUuid": "3ceb835d_372962c2",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78fb4c37_debdeb73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-11-19T14:56:03Z",
      "side": 1,
      "message": "So I don\u0027t see the notification about the failed tests anymore (possibly because I don\u0027t know where to look). Which were they again and ss there a way to run these locally without a Chrome build?",
      "parentUuid": "e570fa90_876d96e8",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b6b0073_1857d205",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-11-19T14:58:46Z",
      "side": 1,
      "message": "The test failures are available here: https://ci.chromium.org/ui/p/devtools-frontend/builders/ci/Stand-alone%20Mac/6200/test-results\n\nAnd yes, you can do a standalone run without having to do a full Chrome build. To do that, edit `e2e/console/console-autocomplete_test.ts:` and change `describe` to `describe.only`.\n\nThen run `gclient sync` (to pull in the Chrome binaries) and run `npm run auto-e2etest`. The test might pass on your local machine, depending on performance. If you want to see what the test is doing, you can run `npm run auto-debug-e2etest` to see the live running Chrome instance.",
      "parentUuid": "78fb4c37_debdeb73",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "384c9579_f9b8a9a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-11-22T12:48:14Z",
      "side": 1,
      "message": "I *think* I solved this (but given it\u0027s nondeterministic nature I can only say that I can\u0027t get it to happen anymore, which might just be bad luck). It wasn\u0027t actually about completion (though the screenshots mysteriously didn\u0027t show completions), but about the wait for the preview that was apparently in there as a kludge to avoid another issue, but which surfaced a problem in the type-ahead completion handling that only showed up sometimes due to a race condition.",
      "parentUuid": "1b6b0073_1857d205",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c275f138_1195939d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1520247
      },
      "writtenOn": "2021-11-22T12:48:14Z",
      "side": 1,
      "message": "I\u0027ve uploaded a new version which solves a few issues in the preview and the typeahead completion, and turns off bracket closing in the console to align with the existing console prompt behavior.\n\nIt also entirely removes the CodeMirror upgrade, meaning this will not pass until 3293282 has landed. I\u0027ll see if I can mark it as WIP again.",
      "revId": "b41fa271631248fc818e1ded61b0a653ae894d1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}