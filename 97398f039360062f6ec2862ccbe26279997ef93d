{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "082793ea_fdc26aaa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-02-14T13:47:18Z",
      "side": 1,
      "message": "LGTM % escaping issue",
      "revId": "97398f039360062f6ec2862ccbe26279997ef93d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9aa501e_4067ee33",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 7
      },
      "lineNbr": 1086,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-02-14T13:47:18Z",
      "side": 1,
      "message": "What if URL contains `*/` e.g. `https://example.com/?q\u003d*/`? Even if URL were to get “normalized” (i.e. run through `new URL(url).toString()`) it would still break out of the CSS comment here.\n\nWDYT about doing something like `.replaceAll(\u0027*/\u0027, \u0027*%2F\u0027)` to guard against this?",
      "range": {
        "startLine": 1086,
        "startChar": 28,
        "endLine": 1086,
        "endChar": 31
      },
      "revId": "97398f039360062f6ec2862ccbe26279997ef93d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "462f14c0_1d9406a0",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 7
      },
      "lineNbr": 1086,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-02-14T13:52:14Z",
      "side": 1,
      "message": "\u003e WDYT about doing something like `.replaceAll(\u0027*/\u0027, \u0027*%2F\u0027)` to guard against this?\n\nActually, this is probably not the best approach. It would work for the example I gave:\n\nhttps://example.com/?q\u003d*/\n→\nhttps://example.com/?q\u003d*%2F\n\n(both URLs are equivalent)\n\n…but it would also affect URLs like:\n\nhttps://example.com/*/\n→\nhttps://example.com/*%2F\n\n(I think those two URLs are not equivalent)",
      "parentUuid": "a9aa501e_4067ee33",
      "range": {
        "startLine": 1086,
        "startChar": 28,
        "endLine": 1086,
        "endChar": 31
      },
      "revId": "97398f039360062f6ec2862ccbe26279997ef93d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec5efaa_9d3e6ad8",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 7
      },
      "lineNbr": 1086,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2022-02-14T14:16:40Z",
      "side": 1,
      "message": "(Now is the time to hope for a line comment syntax in CSS).\n\nI can\u0027t think of anything better, so I would say let\u0027s just do `.replaceAll(\u0027*/\u0027, \u0027*%2F\u0027), because I think it would be a rare situation where people copying the changes would rely on an exact matching of URLs to update their CSS sources. WDYT?",
      "parentUuid": "462f14c0_1d9406a0",
      "range": {
        "startLine": 1086,
        "startChar": 28,
        "endLine": 1086,
        "endChar": 31
      },
      "revId": "97398f039360062f6ec2862ccbe26279997ef93d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a90ccb86_2c0490ec",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 7
      },
      "lineNbr": 1086,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-02-14T14:34:04Z",
      "side": 1,
      "message": "Let’s just fix it. Something like this would support both cases, I think:\n\n    const url \u003d new URL(\u0027https://example.com/*/?q\u003d*/\u0027);\n    const escaped \u003d url.search ? `${url.origin}${url.pathname}${url.search.replaceAll(\u0027*/\u0027, \u0027*%2F\u0027)}${url.hash}` : url.toString();\n\nPerhaps expose it as a helper utility `escapeUrlAsCssComment` or some such, for readability.",
      "parentUuid": "cec5efaa_9d3e6ad8",
      "range": {
        "startLine": 1086,
        "startChar": 28,
        "endLine": 1086,
        "endChar": 31
      },
      "revId": "97398f039360062f6ec2862ccbe26279997ef93d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77ca8939_c5bd4708",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 7
      },
      "lineNbr": 1086,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-02-14T14:35:53Z",
      "side": 1,
      "message": "(\"Support\" as in, it would at least not change any input URLs into non-equivalent ones. It would still break out of the CSS comment in the case where `*/` occurs in the path itself.)",
      "parentUuid": "a90ccb86_2c0490ec",
      "range": {
        "startLine": 1086,
        "startChar": 28,
        "endLine": 1086,
        "endChar": 31
      },
      "revId": "97398f039360062f6ec2862ccbe26279997ef93d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}