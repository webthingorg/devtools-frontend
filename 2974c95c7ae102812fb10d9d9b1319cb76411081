{
  "comments": [
    {
      "key": {
        "uuid": "37385773_1224e93b",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 569,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-29T14:43:36Z",
      "side": 1,
      "message": "For other overrides we tend to use `No emulation` in the UI. Maybe we can do the same here for consistency?",
      "range": {
        "startLine": 569,
        "startChar": 60,
        "endLine": 569,
        "endChar": 72
      },
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2275de41_1d2ecf22",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 569,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T15:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37385773_1224e93b",
      "range": {
        "startLine": 569,
        "startChar": 60,
        "endLine": 569,
        "endChar": 72
      },
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de5056db_ca0cb7f9",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 574,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-29T14:00:16Z",
      "side": 1,
      "message": "it\u0027s better to use `ls` like a few lines above. It\u0027s equivalent to Common.UIString.UIString which is deprecated.",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35cf42eb_9d493180",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 574,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-29T14:43:36Z",
      "side": 1,
      "message": "Let\u0027s use internally consistent phrasing, so either:\n\n    User active, screen unlocked\n\nor\n\n    User is active, screen is unlocked\n\nSame for the other strings below",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "840f988c_82a37685",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 574,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T15:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de5056db_ca0cb7f9",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d59a0723_eebf69d4",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 574,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T15:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35cf42eb_9d493180",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bbd5c61_58f1016b",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 585,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-29T14:00:16Z",
      "side": 1,
      "message": "console.log to be removed.",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd710477_12f78551",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 585,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T15:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bbd5c61_58f1016b",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba6b9ff_d53971d0",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-29T14:04:08Z",
      "side": 1,
      "message": "Could we maybe do this switch-case outside the loop and store the results intermediately to something like: `isActive` and `isUnlocked`?",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f772b830_514d3d54",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-07-29T14:14:43Z",
      "side": 1,
      "message": "Perhaps, to generate the option values we could use JSON.stringify with actual values and JSON.parse to extract them to avoid having a switch.",
      "parentUuid": "1ba6b9ff_d53971d0",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68f81684_e6e9b47e",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T15:53:28Z",
      "side": 1,
      "message": "In patchset 3 I tried another approach. What do you think of it?",
      "parentUuid": "f772b830_514d3d54",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bbe65a8_7a08845f",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T20:22:51Z",
      "side": 1,
      "message": "the problem with the switch outside the loop is that it has to keep 3 parameters:\n1. ShouldOverrideBeCleaned\n1. IsUserActive\n1. IsScreeUnlocked\n\nWhich makes it a bit faster and a bit less readable.\n\nI polished a bit approach with a map. For me it looks more scalable.",
      "parentUuid": "68f81684_e6e9b47e",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acb8a7ef_f2240216",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-30T05:57:54Z",
      "side": 1,
      "message": "How about this?\n\n1. Make the signature of `_setIdleOverride` match that of `invoke_setIdleOverride`, i.e. `{isUserActive, isScreenUnlocked}`.\n2. Replace the keys as follows: e.g. `active:true,unlocked:true` becomes `{\"isUserActive\":true,\"isScreenUnlocked\":true}`.\n3. Now you can pass `JSON.parse(key)` as an argument to `_setIdleOverride`. (This was Alex\u0027s earlier suggestion.)\n\nBut, going further, we don\u0027t even need to have the list of options + values in JS. We can do what other tools in this panel do, and list the options in module.json instead. See https://chromium-review.googlesource.com/c/chromium/src/+/1832206/6/third_party/blink/renderer/devtools/front_end/sdk/module.json for an example (and see the rest of the CL to see how the values are pulled out).\n\nCombined with the above, this approach seems most consistent with the rest of the code in this panel, and simplest as well (since there is no map or switch/case at all).",
      "parentUuid": "8bbe65a8_7a08845f",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66e121ee_86e7978f",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-31T09:57:41Z",
      "side": 1,
      "message": "Switched to approach with SettingsUI",
      "parentUuid": "acb8a7ef_f2240216",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c56fcf4_52dd02b4",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-07-29T14:04:08Z",
      "side": 1,
      "message": "Another thought is: would it be better to `Promise.all` these awaits? I know there won\u0027t be many emulationModels so maybe it\u0027s not significantly better.",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6922cd8f_23f17e82",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-07-29T14:43:36Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9c56fcf4_52dd02b4",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93233a1e_ac952336",
        "filename": "front_end/emulation/SensorsView.js",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1440373
      },
      "writtenOn": "2020-07-29T15:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6922cd8f_23f17e82",
      "revId": "2974c95c7ae102812fb10d9d9b1319cb76411081",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}