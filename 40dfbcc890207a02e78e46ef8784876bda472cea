{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "557b7bbf_d44b490f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-09T12:40:33Z",
      "side": 1,
      "message": "Hi Simon,\n\nI\u0027m synchronizing the moveBreakpoints, such that PersistenceImpl has to await removing the breakpoint before re-setting the breakpoint. PTAL!",
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d210a23_a76aada8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2022-05-09T13:43:23Z",
      "side": 1,
      "message": "lgtm % nits",
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d803fc2_8d7782ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-05-10T05:24:55Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecd8f41e_c7442be4",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 5
      },
      "lineNbr": 570,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2022-05-09T13:43:23Z",
      "side": 1,
      "message": "Is this re-ordering fine? Or do we rely on any event listeners to run that might get triggered by \"scheduleUpdateInDebugger\"? (The ones that are triggered synchronously).\n\nAlso nit: Lets keep the loop for better readability? (Use a tmp array to push the promises into and Promise.all the tmp array.",
      "range": {
        "startLine": 569,
        "startChar": 6,
        "endLine": 570,
        "endChar": 56
      },
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7655eb86_02f5f506",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 5
      },
      "lineNbr": 570,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-10T07:53:22Z",
      "side": 1,
      "message": "The `removeEventListeners` is removing the ModelBreakpoint instance as a listener of `Debugger.enable` and `Debugger.disable`. Since the breakpoint is going to removed, it doesn\u0027t matter anymore whether or not the Debugger is enabled or disabled, so it should be safe to reorder.\n\nRegarding the loop: done!",
      "parentUuid": "ecd8f41e_c7442be4",
      "range": {
        "startLine": 569,
        "startChar": 6,
        "endLine": 570,
        "endChar": 56
      },
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6d44321_0279570e",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 5
      },
      "lineNbr": 780,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2022-05-09T13:43:23Z",
      "side": 1,
      "message": "Lets also \u0027await\u0027 here? At the moment \u0027remove\u0027 doesn\u0027t do any additional async work but that could change in the future.",
      "range": {
        "startLine": 780,
        "startChar": 6,
        "endLine": 780,
        "endChar": 10
      },
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4f1249a_6fe6cf13",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 5
      },
      "lineNbr": 780,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-10T07:53:22Z",
      "side": 1,
      "message": "We can\u0027t await the call here, since we\u0027d otherwise deadlock. The `scheduleUpdateInDebugger` method is synchronized: only one may run at a time, and currently we are already within one. So if we await it here, the await in the remove function will wait until this run is over and we get a circular dependency.",
      "parentUuid": "f6d44321_0279570e",
      "range": {
        "startLine": 780,
        "startChar": 6,
        "endLine": 780,
        "endChar": 10
      },
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8eebfb74_9e6a4887",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 5
      },
      "lineNbr": 780,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2022-05-10T08:09:15Z",
      "side": 1,
      "message": "Lets add that explanation as a comment then :) It\u0027s not really obvious from the surrounding code that awaiting here would actually be problematic.",
      "parentUuid": "e4f1249a_6fe6cf13",
      "range": {
        "startLine": 780,
        "startChar": 6,
        "endLine": 780,
        "endChar": 10
      },
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f579826f_0357d3e8",
        "filename": "front_end/models/bindings/BreakpointManager.ts",
        "patchSetId": 5
      },
      "lineNbr": 780,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-05-10T09:13:54Z",
      "side": 1,
      "message": "Added!",
      "parentUuid": "8eebfb74_9e6a4887",
      "range": {
        "startLine": 780,
        "startChar": 6,
        "endLine": 780,
        "endChar": 10
      },
      "revId": "40dfbcc890207a02e78e46ef8784876bda472cea",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}