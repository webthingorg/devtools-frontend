{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "46659830_314782cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1499133
      },
      "writtenOn": "2021-08-13T01:53:32Z",
      "side": 1,
      "message": "PTAL",
      "revId": "de0999232025516bf32ee4b3abda7dd83d258e10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4278b4b8_4fb26cbf",
        "filename": "front_end/panels/issues/IssuesPane.ts",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1499133
      },
      "writtenOn": "2021-08-13T01:53:13Z",
      "side": 1,
      "message": "Hey Sigurd,\nThere is a bug here. getIssueViewParent returns either a treeOutline or a treeElement, but IssueViews which inherits TreeElement can only have TreeElement|null as its parent. \nSo when we return this.issueTree which is a TreeOutline, the if statements passes and we end up reparenting in the same parent for issueViews that don\u0027t need to be reparented.\n\nWe can solve this by returning this.issueTree._parent (because this.issueTree.appendChild() is a wrapper around this.issueTree._parent.appendChild) but since this is private i didn\u0027t want to add any code to the legacy component without getting your opinion first.\n\ni have verified this using the debugger and lots of console.logs\n\nI\u0027m attaching a screenshot of the console.log \"console.log(issue.code(), issueView.parent, newParent);\" that I put inside the conditional: https://ibb.co/1d8Tm9s",
      "range": {
        "startLine": 298,
        "startChar": 6,
        "endLine": 303,
        "endChar": 5
      },
      "revId": "de0999232025516bf32ee4b3abda7dd83d258e10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f015a971_1044d1f8",
        "filename": "front_end/panels/issues/IssuesPane.ts",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-08-13T05:53:24Z",
      "side": 1,
      "message": "Great find! So we are re-parenting a bit too much, but we should be correctly re-parenting issues.\n\nI think we should just modify the condition in L299 to \n if (issueView.parent !\u003d\u003d newParent \u0026\u0026\n    !(newParent instanceof UI.TreeOutline.TreeOutline \n      \u0026\u0026 issueView.parent \u003d\u003d\u003d newParent.rootElement())) {\n\nYou can include the fix in this CL (since this CL is about decreasing the amount of re-parenting anyway) Can you think of a way to test this?",
      "parentUuid": "4278b4b8_4fb26cbf",
      "range": {
        "startLine": 298,
        "startChar": 6,
        "endLine": 303,
        "endChar": 5
      },
      "revId": "de0999232025516bf32ee4b3abda7dd83d258e10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "084f418e_b3569509",
        "filename": "front_end/panels/issues/IssuesPane.ts",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1499133
      },
      "writtenOn": "2021-08-13T10:15:08Z",
      "side": 1,
      "message": "we can get an IssuePane instance in a unittest and attach an event listener listening for\nthis.treeOutline.dispatchEventToListeners(Events.ElementAttached, child);\nbecause this event is dispatched when an element is inserted. so we can check for repareting\nor we could modify the onattach method in isseView to dispatch an event and then follow the same procedure as above in a unittest.\n\nCases where reparenting should take place will dispatch the event and where it shouldn\u0027t won\u0027t.\n\nIn both cases we would need to get the IssuesPane instance.\n\nDoes that seem like a plausible approach?",
      "parentUuid": "f015a971_1044d1f8",
      "range": {
        "startLine": 298,
        "startChar": 6,
        "endLine": 303,
        "endChar": 5
      },
      "revId": "de0999232025516bf32ee4b3abda7dd83d258e10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37c8263_8313e882",
        "filename": "front_end/panels/issues/IssuesPane.ts",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2021-08-13T05:53:24Z",
      "side": 1,
      "message": "I think it would be a better design if we modified aggregatedIssueCodes to return the union of the two sets.\n\nSimilarily, we should make aggregatedIssues() return all aggregated issues.",
      "range": {
        "startLine": 367,
        "startChar": 61,
        "endLine": 367,
        "endChar": 81
      },
      "revId": "de0999232025516bf32ee4b3abda7dd83d258e10",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}