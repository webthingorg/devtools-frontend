{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "31501692_c0ed7072",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-11-10T11:54:47Z",
      "side": 1,
      "message": "I am struggling a bit here to understand the motivation behind this CL.\n\nWhat are the problems with the current approach? Is this causing bugs with other features such as the context menu? Or are you trying to optimise performance?\n\nI am reluctant for us to end with an approach when we have to explicitly call some reset() methods in some scenarios but not others; that is open to having bugs if a developer incorrectly calls it when they don\u0027t need to, or forgets to call it when they do need to.",
      "revId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ed7a1a8_656e1ff8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-11-14T14:58:49Z",
      "side": 1,
      "message": "lgtm",
      "revId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4443722_228db3b1",
        "filename": "front_end/ui/legacy/components/perf_ui/FlameChart.ts",
        "patchSetId": 2
      },
      "lineNbr": 2601,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2023-11-10T15:01:27Z",
      "side": 1,
      "message": "shall we rename this to `resetForNewTrace` ?\n\nIs there a situation where the groups could change for the same trace? I don\u0027t think so?",
      "range": {
        "startLine": 2601,
        "startChar": 2,
        "endLine": 2601,
        "endChar": 7
      },
      "revId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d2847ce_9e8e43f5",
        "filename": "front_end/ui/legacy/components/perf_ui/FlameChart.ts",
        "patchSetId": 2
      },
      "lineNbr": 2601,
      "author": {
        "id": 1327793
      },
      "writtenOn": "2023-11-13T06:01:35Z",
      "side": 1,
      "message": "I don\u0027t think the groups could change for the same trace either, but there is an exception for ignore listing, every time you toggle the ignore listing related flag, it will reset the flame chart and re-render it",
      "parentUuid": "d4443722_228db3b1",
      "range": {
        "startLine": 2601,
        "startChar": 2,
        "endLine": 2601,
        "endChar": 7
      },
      "revId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e52f985b7af4f22ef4bcbd4df1b9d3fff9958493",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}