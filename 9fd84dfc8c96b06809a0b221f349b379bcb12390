{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46f27141_ce11e90b",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2021-03-31T16:33:59Z",
      "side": 1,
      "message": "@Jack, FYI, because you made this change with a bunch of node modules, all the lines where you added the space between async and () now fail `git cl format`. The check is skipped when you make node module changes. Now anyone who touches this file will be stuck in infinite presubmit loop where cl format and eslint disagree on these lines and will make changes back and forth until you add a comment like this:\n\n    // TODO: Remove next line once crbug.com/1177242 is solved.\n    // eslint-disable-next-line @typescript-eslint/space-before-function-paren",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09826878_c347cae7",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-03-31T16:48:53Z",
      "side": 1,
      "message": "I thought we already fixed this in https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2690528 did we not? Do you mind opening a CL that fixes this issue so that we don\u0027t create any disagreements between clang and ESLint?",
      "parentUuid": "46f27141_ce11e90b",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eada7db_07e3e401",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1385752
      },
      "writtenOn": "2021-03-31T16:54:00Z",
      "side": 1,
      "message": "See the check-in message of the CL: the disagreement with clang was noticed even then.",
      "parentUuid": "09826878_c347cae7",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "991582eb_9bd1ac58",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2021-03-31T16:56:21Z",
      "side": 1,
      "message": "I think that \u0027Note that there is currently a bug in clang-format, so we have to disable the rule in a couple of places.\u0027 (from the CL description linked) is in effect here. However, it was hidden because this particular CL bypassed cl format, so it wasn\u0027t apparent.\n\nThe only fix I know of would be to go back and add these comments similar to those in the linked CL. I\u0027m currently on a branch health rotation and wont have time to add these. But I wanted to raise awareness that this can be hidden when code changes happen at the same time as node_module updates.\n\nOut of curiosity, should we consider moving to just eslint for js/ts files and avoiding these kind of bugs/disagreements altogether?",
      "parentUuid": "4eada7db_07e3e401",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6abd8af_e12aabf5",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-04-01T09:50:01Z",
      "side": 1,
      "message": "What confuses me is that we are able to upload CLs successfully, so I am assuming this is a Windows-only problem? Sadly, we are not in a great position to tackle these issues, given that we primarily develop on Linux and Mac. Therefore, you are probably in a better position to tackle this problem.\n\nAs I understand it, the core problem that we need to tackle is that the ESLint rules should be configured such that it doesn\u0027t cause formatting that `clang-format` dislikes. I thought https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2690528 had already done this, but apparently we need to do more.\n\n\u003e should we consider moving to just eslint for js/ts files\n\nESLint doesn\u0027t perform all functions of a formatter (and it shouldn\u0027t) and therefore we should remain using a formatter. Since Chromium uses clang-format as the de facto formatter for JavaScript, DevTools uses clang-format as well.\n\nGiven the above and the fact that this appears to only affect Windows users, do you mind sending us a CL that updates the ESLint configuration such that it would produce output that clang-format is happy with?",
      "parentUuid": "991582eb_9bd1ac58",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71b8fbe7_17cb6e05",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2021-04-01T12:41:54Z",
      "side": 1,
      "message": "Hi Tim,\n\nas I explained above, this is not a windows only issue. it will affect any users. the reason this CL was successful is because you have disabled clang format for node modules changes (see Check format in PRESUBMIT.PY), which means only eslint ran during presubmit on this cl. You should be able to reproduce the problem described on any OS by trying to create a cl that changes any of the .ts files on this CL, and then running presubmit.\n\nAlso mentioned above, the cl you described does not address this but, in fact, specifically mentions this issue is still present in the description and adds required exemptions in other places.",
      "parentUuid": "a6abd8af_e12aabf5",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4130ae08_034b2fc2",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-04-01T12:50:24Z",
      "side": 1,
      "message": "I am running on Mac, added a `console.log` statement to `AccessibilityTreeUtils.ts` and successfully uploaded to https://chromium-review.googlesource.com/c/devtools/devtools-frontend/+/2799751/ Note that I did not touch the original formatting. The formatting was corrected as part of the presubmit I ran when executing `git cl upload`.\n\nTherefore, based on my understanding and the linked CL, this issue is not blocking anyone contributing on Mac. I will verify the same is true for Linux, but sadly am not in the position to test that for Windows machines.",
      "parentUuid": "71b8fbe7_17cb6e05",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5eaa8493_abc4db4b",
        "filename": "front_end/elements/AccessibilityTreeUtils.ts",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1341669
      },
      "writtenOn": "2021-04-01T13:20:37Z",
      "side": 1,
      "message": "Thanks for looking into this. I performed a similar test, and I think I have a better understanding of what is occuring, my apologies for the confusion.\n\nI was able to repro what you are seeing: first run of presubmit removes the space, same as you. \n\nI gained more understanding during a second run of presubmit, the eslint rules run first. The `\u0027space-before-function-paren\u0027: [2, {\u0027anonymous\u0027: \u0027never\u0027, \u0027named\u0027: \u0027never\u0027, \u0027asyncArrow\u0027: \u0027always\u0027}],` rule is applied in an \"autofix\" manner, adding the space back in, however it does not throw an error. Then cl format removes the space when it runs. You can see this happen if you watch the file during presubmit: the space appears and then disappears.\n\nThe result is that nothing is blocking. My second run of presubmit was also successful, and wouldn\u0027t block for the same cl you created on windows. Therefore I don\u0027t think anything really needs to be done. These spaces will just be removed next time someone runs presubmit on this file (except for the case below)\n\n\nI guess I\u0027ll go back to my original comment, which was intended in more of an FYI:\nBecause this particular CL modified node_modules And front_end UI code, `cl format` was disabled, the spaces were added by eslint during presubmit, and then never removed by `cl format`. So, we have this very small corner case where eslint can add spaces that presubmit will want to remove in the future if we are also changing node_modules.\n\nThanks for taking a closer look at this Tim!",
      "parentUuid": "4130ae08_034b2fc2",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 22,
        "endChar": 52
      },
      "revId": "9fd84dfc8c96b06809a0b221f349b379bcb12390",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}