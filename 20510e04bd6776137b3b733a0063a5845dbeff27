{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7f499591_672833d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2024-04-10T09:20:52Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "218c51b5_ba819619",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "Nice, mostly lgtm but I\u0027ll also wait for Jack to chime in.",
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc36e87f_f21be19b",
        "filename": "scripts/run_on_target.js",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "nit: Let\u0027s use ES modules for new scripts. It should be enough to name the script `run_on_target.mjs` for node to pick it up correctly.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 29
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dee120e7_ecd2b79c",
        "filename": "scripts/run_on_target.js",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "Why not let `yargs` handle all of this? We use it everywhere else anyway. If the logic above does something special we should point it out in a comment.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6037f58_f8104952",
        "filename": "test/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "Also ESM here if possible ðŸ˜Š\n\nNote that this only works if no other GN rule depends on `build.js`. Also, is it common that `gn gen` already produces build output?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 61
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dddc3ea0_f1168145",
        "filename": "test/conductor/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "nit: Now we have all three naming schemes :) Let\u0027s keep it consistent. Looks like we have 5 snake_case vs 2 kebab-case so far.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 20
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be1644a_aa40d11f",
        "filename": "test/conductor/Paths.ts",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "Maybe `PathPair` is a better name, or `SourceBuildPair`? I don\u0027t know, but `Path` alone is a bit confusing.",
      "range": {
        "startLine": 36,
        "startChar": 13,
        "endLine": 36,
        "endChar": 17
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f12ed72_07ea77a7",
        "filename": "test/conductor/TestConfig.ts",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "Gotta say, this took me a minute to parse. Maybe we can make it a bit more verbose for readability?",
      "range": {
        "startLine": 104,
        "startChar": 12,
        "endLine": 104,
        "endChar": 98
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d53d7e18_52614ebd",
        "filename": "test/conductor/mocha_hooks.ts",
        "patchSetId": 6
      },
      "lineNbr": 111,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "Left-over or do we want this?",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 63
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c30e28ba_20337c17",
        "filename": "test/run.ts",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "`out/Target/gen`?",
      "range": {
        "startLine": 21,
        "startChar": 67,
        "endLine": 21,
        "endChar": 78
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d9f521_ccf86167",
        "filename": "test/run.ts",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2024-04-10T10:39:59Z",
      "side": 1,
      "message": "nit: `const success \u003d suites.every(([suite, files]) \u003d\u003e suite.run(files));`",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "20510e04bd6776137b3b733a0063a5845dbeff27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}