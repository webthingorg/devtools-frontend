{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6cf70ccb_b7b6a694",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-11T15:28:33Z",
      "side": 1,
      "message": "Ready for preliminary review!",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "440c8a21_508abbc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "Looks great overall! Couple of inline comments.",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58090018_aec9543a",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "The union should already imply the sum.",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95a66c1d_d4f6f39f",
        "filename": "extension-api/ExtensionAPI.d.ts",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58090018_aec9543a",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b80dc97_e598f162",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "I don\u0027t have a strong feeling either way, but have you considered making this an object {export?: boolean, replay?: boolean}?",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "201d6ff6_1c1e91a3",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:47:15Z",
      "side": 1,
      "message": "I don\u0027t have a preference either.",
      "parentUuid": "5b80dc97_e598f162",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c24b42a7_d42a4182",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T14:34:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "201d6ff6_1c1e91a3",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c18afe3_05435c6b",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 454,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "You don\u0027t need to repeat the public interface here, you should be able to just use that directly.",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da8c9643_eb346a97",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 454,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c18afe3_05435c6b",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "056fef30_8ddb87e1",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 802,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "I wonder if we\u0027d also want some enforcement of this on the serverside, also for the panels.",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c78928b0_78e68369",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 802,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "Do we have anything for the userAction?",
      "parentUuid": "056fef30_8ddb87e1",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3be0a95_31e6b4da",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 802,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T12:18:50Z",
      "side": 1,
      "message": "We do not, but I think it would be good to have the check in depth too, if it\u0027s possible to test there. We can look at that in a followup though!",
      "parentUuid": "c78928b0_78e68369",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e89ca823_5535bcf8",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 856,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "Is the extra variable necessary here, or could you also move the sendRequest into the promise?",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34cd9d90_8757b7f6",
        "filename": "front_end/models/extensions/ExtensionAPI.ts",
        "patchSetId": 5
      },
      "lineNbr": 856,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e89ca823_5535bcf8",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c8719ea_5c81c018",
        "filename": "front_end/models/extensions/RecorderExtensionEndpoint.ts",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "How can the mediaType become undefined?",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93b61858_7cd37fe6",
        "filename": "front_end/models/extensions/RecorderExtensionEndpoint.ts",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "If the plugin only supports replay. This CL makes mediaType optional for that purpose.",
      "parentUuid": "6c8719ea_5c81c018",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f44e208_a8b7fab9",
        "filename": "front_end/models/extensions/RecorderExtensionEndpoint.ts",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T12:18:50Z",
      "side": 1,
      "message": "Wouldn\u0027t the endpoint set it to text/javascript in that case?",
      "parentUuid": "93b61858_7cd37fe6",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ef69819_30d39d54",
        "filename": "front_end/models/extensions/RecorderExtensionEndpoint.ts",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T13:18:56Z",
      "side": 1,
      "message": "ah, right, forgot to remove defaults after making it optional.",
      "parentUuid": "5f44e208_a8b7fab9",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "421ad6be_77a21d3e",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "How about also checking whether we can show a panel instead of a view?",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3917a58d_283d204b",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "Which panel do you mean? there is only a view for the recorder.",
      "parentUuid": "421ad6be_77a21d3e",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef63c9ee_2fdd9842",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T12:18:50Z",
      "side": 1,
      "message": "Setting userAction allows the extension to also pop open its own panel, as I understood it that was intentional. If I got that wrong then we shouldn\u0027t be setting userAction.",
      "parentUuid": "3917a58d_283d204b",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c46eb9c_41dd31ec",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T13:18:56Z",
      "side": 1,
      "message": "I see what you mean. We could try but it looks like we need to fix the panels API, first? show is not marked as public API for normal panels?",
      "parentUuid": "ef63c9ee_2fdd9842",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bddd1a0_c7b2d320",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T14:34:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c46eb9c_41dd31ec",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c8bb216_4d3d6eb8",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T09:43:59Z",
      "side": 1,
      "message": "I don\u0027t think this is enough. show() involves a postmessage hop so the event handler wouldn\u0027t fire immediately. How about sending any other command after the show, so that we can be sure we haven\u0027t gotten the show event once the second command arrives?",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c085bb3a_463f4d6b",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T11:43:02Z",
      "side": 1,
      "message": "I am not sure I got the idea with sending any other command after the show? I think we have no other commands on the view here.",
      "parentUuid": "2c8bb216_4d3d6eb8",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8a25331_846bb778",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2023-01-12T12:18:50Z",
      "side": 1,
      "message": "Doesn\u0027t have to be on the view, sending and awaiting any other command flushes the postMessage queue and lets us be sure the event won\u0027t arrive.",
      "parentUuid": "c085bb3a_463f4d6b",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ff74b9e_538b6352",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T13:18:56Z",
      "side": 1,
      "message": "That would work with messages in the other direction? like `stringify` calls?",
      "parentUuid": "a8a25331_846bb778",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9ea4ba8_5a1e4ccd",
        "filename": "test/unittests/front_end/models/extensions/ExtensionServer_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2023-01-12T13:55:47Z",
      "side": 1,
      "message": "Ended up using the chrome.devtools?.inspectedWindow.eval call to make sure no message is dispatched.",
      "parentUuid": "7ff74b9e_538b6352",
      "revId": "bb57ded07df67467b2ddcaedd5f7de0c8d20aeae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}