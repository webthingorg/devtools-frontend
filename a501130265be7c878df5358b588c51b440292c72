{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f60ed644_c2ce1738",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-10-20T12:49:24Z",
      "side": 1,
      "message": "LGTM % comments",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39c383a2_855d3d2b",
        "filename": "front_end/Images/src/flex-direction-icon.svg",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-10-20T12:49:24Z",
      "side": 1,
      "message": "Should this be 2-space indentation, like for most other files?",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9084ac63_c395f5e2",
        "filename": "front_end/Images/src/flex-direction-icon.svg",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-20T12:56:21Z",
      "side": 1,
      "message": "I didn\u0027t write the file by hand so probably indentation is wrong. Also, the icon is temporary and will be replaced later.",
      "parentUuid": "39c383a2_855d3d2b",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9994164_99074dfd",
        "filename": "front_end/Images/src/flex-direction-icon.svg",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:25:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9084ac63_c395f5e2",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83f21615_1661ae2a",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2411,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-10-20T20:50:47Z",
      "side": 1,
      "message": "I think this also needs to take writing-mode into account.\nHere is the list of all possible scenarios I can see:\n\ndirection ltr + no writing-mode\ndirection ltr + tb writing-mode\ndirection ltr + vertical-lr writing-mode\ndirection ltr + vertical-rl writing-mode\ndirection rtl + no writing-mode\ndirection rtl + tb writing-mode\ndirection rtl + vertical-lr writing-mode\ndirection rtl + vertical-rl writing-mode\n\nNow, I\u0027m not an expert in this, I don\u0027t know whether these are actually used together or not, but testing quickly locally, these combinations sure lead to different directions for row/column[-reverse], so we should probably handle it.",
      "range": {
        "startLine": 2411,
        "startChar": 12,
        "endLine": 2411,
        "endChar": 64
      },
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fe7fcab_9aa8a40a",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2411,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-21T12:11:49Z",
      "side": 1,
      "message": "I have refactored the code and implemented these cases. Not sure if it\u0027s the best way to implement this kind of logic. PTAL",
      "parentUuid": "83f21615_1661ae2a",
      "range": {
        "startLine": 2411,
        "startChar": 12,
        "endLine": 2411,
        "endChar": 64
      },
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5be8c3ef_2acd5802",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2411,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:25:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fe7fcab_9aa8a40a",
      "range": {
        "startLine": 2411,
        "startChar": 12,
        "endLine": 2411,
        "endChar": 64
      },
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aa9090b_bb315be0",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2415,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-10-20T12:49:24Z",
      "side": 1,
      "message": "This is being used as a map, so let\u0027s make it one. We can then avoid for-in (and its prototype lookups!) further down in the code.",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a82267d6_eb9f2542",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2415,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:25:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9aa9090b_bb315be0",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "863acef6_a698a26d",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2636,
      "author": {
        "id": 1380460
      },
      "writtenOn": "2020-10-20T09:29:04Z",
      "side": 1,
      "message": "If we cache on this instance, when will we invalidate the cache? If it\u0027s OK to persist this cache across multiple calls to `_buildPropertyCompletions` at different times, then I guess there is some value to caching on the instance. Otherwise I think it\u0027s fine as is.",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa5927c8_180f2b24",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2636,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-20T09:32:33Z",
      "side": 1,
      "message": "I need to see if the prompt instance is created for every time you start editing the styles or if it\u0027s persisted somewhere. If it\u0027s the former, I think we can cache on the prompt instance.",
      "parentUuid": "863acef6_a698a26d",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d34b841_550b03b6",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2636,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-10-20T20:50:47Z",
      "side": 1,
      "message": "Looks like its created when you start editing: https://source.chromium.org/chromium/chromium/src/+/master:third_party/devtools-frontend/src/front_end/elements/StylePropertyTreeElement.js;l\u003d814?q\u003dCSSPropertyPrompt%20-file:%5Eout\n\nIt\u0027d be good to measure (on a slow machine) if adding this step (even just once on start editing) is slowing down the appearing of the autocomplete popup. If it does slow it down too much, we could think of a few things:\n- only getting the computed style properties we use (direction and writingMode for now)\n- getting this async, in a non-blocking way, so the autocomplete appears and the icons appear lazily when ready\n- storing the style at the DOM node level instead, and invalidating this cache when some style event occurs (don\u0027t we have this now for the adorners?)",
      "parentUuid": "aa5927c8_180f2b24",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26ad25c2_c5c0cee6",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2636,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-21T12:11:49Z",
      "side": 1,
      "message": "I have moved the cache to the prompt instance. Let\u0027s see how it performs. In general, I think getting computed styles for a node is quite fast.",
      "parentUuid": "7d34b841_550b03b6",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32adfe12_127c0b08",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2636,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-22T08:25:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26ad25c2_c5c0cee6",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b22c96fc_ec746887",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2658,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2020-10-20T12:49:24Z",
      "side": 1,
      "message": "Would it make sense to set the max-height in CSS instead?",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b44aa362_7937534a",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2658,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-20T12:56:21Z",
      "side": 1,
      "message": "I thought about it but found a few arguments against it: 1) the icon is given to another component that renders it, so it would require adding the styles for the icon there and the icon is not always present or is not always of that size. 2) The max height is the same as the width \u0026 height defined in JS for the Icon component so it\u0027s convenient to have them in one place because these values should be changed together.\n\nActually, I only needed the max height because the flexbox layout would stretch the icon for some reason. I guess it might be possible to set the max height inside the Icon component because I cannot think of a case when a fixed size icon would need to be stretched.",
      "parentUuid": "b22c96fc_ec746887",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcb57746_f4bdd1ee",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2658,
      "author": {
        "id": 1419317
      },
      "writtenOn": "2020-10-20T20:50:47Z",
      "side": 1,
      "message": "\"because the flexbox layout would stretch the icon for some reason\" :) Sounds like this new flexbox tool is going to be helpful to us too.\n\nI don\u0027t know yet how the autcomplete lays elements out, but if it\u0027s a simple row direction flex container, then the items are stretched along the cross axis by default. If you don\u0027t want this to happen you could simply set a align-self:center on the icon only, and let the width/height of 13px do its thing. I don\u0027t think we need the max-height.",
      "parentUuid": "b44aa362_7937534a",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bc7115d_d3fc7336",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2658,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-21T06:02:04Z",
      "side": 1,
      "message": "Yes, it\u0027s ironic :-) align-self: center does not work. The container is \n\n```\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n```\n\nThe first item is a span with display\u003dblock that is 13px tall and it\u0027s not stretched. The icon next to it that should be also 13px is stretched.",
      "parentUuid": "dcb57746_f4bdd1ee",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fad8860_930459ca",
        "filename": "front_end/elements/StylesSidebarPane.js",
        "patchSetId": 3
      },
      "lineNbr": 2658,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-23T06:22:00Z",
      "side": 1,
      "message": "I will keep setting the maxHeight/Width for now. I will try to figure out a better solution later.",
      "parentUuid": "8bc7115d_d3fc7336",
      "revId": "a501130265be7c878df5358b588c51b440292c72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}