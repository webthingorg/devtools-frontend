{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2f15f52_d8e57502",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-10-11T06:16:18Z",
      "side": 1,
      "message": "I don\u0027t think blanks are allowed in property names.",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "102ee290_aeee9d23",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1555450
      },
      "writtenOn": "2022-10-11T10:29:02Z",
      "side": 1,
      "message": "Escaped blanks in property names are allowed. Fixed these cases with escaped black.",
      "parentUuid": "b2f15f52_d8e57502",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c2f6bc1_b331f966",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2022-10-11T10:53:02Z",
      "side": 1,
      "message": "Do you happen to have a link handy for the relevant specification?",
      "parentUuid": "102ee290_aeee9d23",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07c090b_2bd371fc",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1196635
      },
      "writtenOn": "2022-10-11T12:10:37Z",
      "side": 1,
      "message": "The `\u003cdashed-ident\u003e` production is a `\u003ccustom-ident\u003e`, escaped characters are accepted in `\u003ccustom-ident\u003e`, which is legal CSS syntax.\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident#:~:text\u003dan%20escaped%20character",
      "parentUuid": "5c2f6bc1_b331f966",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "026b80b2_bf58b7a7",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-10-11T13:52:04Z",
      "side": 1,
      "message": "The spec is here: https://drafts.csswg.org/css-variables/#custom-property “A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo. The \u003ccustom-property-name\u003e production corresponds to this: it’s defined as any \u003cdashed-ident\u003e (a valid identifier that starts with two dashes), except -- itself, which is reserved for future use by CSS.”\n\nFor general identifier parsing, see https://drafts.csswg.org/css-syntax/#consume-an-ident-sequence:\n\n```\ndigit\n\u003d A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9) inclusive.\n\nuppercase letter\n\u003d A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z) inclusive.\n\nlowercase letter\n\u003d A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z) inclusive.\n\nletter\n\u003d An uppercase letter or a lowercase letter.\n\nnon-ASCII code point\n\u003d A code point with a value equal to or greater than U+0080 \u003ccontrol\u003e.\n\nident-start code point\n\u003d A letter, a non-ASCII code point, or U+005F LOW LINE (_).\n\nident code point\n\u003d An ident-start code point, a digit, or U+002D HYPHEN-MINUS (-).\n```\n\nThat gives us the two pieces we need:\n\n```\nident-start code point\n→ /[a-zA-Z_\\P{ASCII}]/u\n\nident code point\n→ /[a-zA-Z0-9_\\P{ASCII}-]/u\n```",
      "parentUuid": "c07c090b_2bd371fc",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88cb5401_45f9f00e",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-10-12T13:12:24Z",
      "side": 1,
      "message": "Suyan, do you want to update your patch to use the patterns I suggested?",
      "parentUuid": "026b80b2_bf58b7a7",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17676096_17efc0d4",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1555450
      },
      "writtenOn": "2022-10-12T13:30:48Z",
      "side": 1,
      "message": "Yes, I get the patterns you suggested and I want to use them. But for now, I\u0027m confused about how to implement these patterns with regular expressions. I\u0027m trying to learn more about these specs and using regexr. Or maybe you can tell me more about these patterns and your advice, I would appreciate it very much.",
      "parentUuid": "88cb5401_45f9f00e",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "630c69ed_31b4cf48",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1555450
      },
      "writtenOn": "2022-10-12T15:06:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "17676096_17efc0d4",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72061fd6_004e7b8a",
        "filename": "test/unittests/front_end/core/sdk/CSSMatchedStyles_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-10-12T15:20:12Z",
      "side": 1,
      "message": "I was thinking that instead of\n\n    const match \u003d cssVariableValue.match(/^var\\(\\s*(--[^,]+)[,]?\\s*(.*)\\s*\\)$/);\n\nyou’d do something like\n\n    const match \u003d cssVariableValue.match(/^var\\(\\s*(--[a-zA-Z_\\P{ASCII}][a-zA-Z0-9_\\P{ASCII}-]*)[,]?\\s*(.*)\\s*\\)$/u);\n    \nto precisely match the spec",
      "parentUuid": "630c69ed_31b4cf48",
      "revId": "27d0b8d1420266c8afc1d81f51fa48abf87a1574",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}