{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f53d8d42_8a52e866",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-19T09:01:37Z",
      "side": 1,
      "message": "Not sure if falling back to Number.MAX_SAFE_INTEGER is equivalent to passing undefined to the underlying code. But I assume it should be more correct given the types for the underlying code.",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e1ae87d_0a0be95d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-19T11:26:19Z",
      "side": 1,
      "message": "I am slightly hesitant to +1 this code: The Number.MAX_SAFE_INTEGER approach seems fine to me, but the eventsToPhase map could have possible performance implications. Trace events is something we can have thousands of, so depending on how many events we have, and how often we do a lookup in the map, this might be noticeable.\n\nCould you run a performance trace where this code is exercised with and without this CL and make sure we don\u0027t suddenly take a lot longer? That would ease my mind xD Thanks!\n\nlgtm",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73e3971b_710b235c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-19T12:12:08Z",
      "side": 1,
      "message": "This model seems to handle only latencies and animation events. I have tried running the performance tool on a page with animations https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations but I got only 5 events. Do you know what the cases are when there can be thousands of events generated?",
      "parentUuid": "7e1ae87d_0a0be95d",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b14fe860_632d5d6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-19T12:13:42Z",
      "side": 1,
      "message": "I see. I didn\u0027t realise it were only animation events. I thought it would be all the different trace events when we collect a profile.\n\nIf this is indeed the case then no worries from my side :) Feel free to land.",
      "parentUuid": "73e3971b_710b235c",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "166bb668_497b848d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-19T12:19:54Z",
      "side": 1,
      "message": "I have done an artificial benchmark for this case, and the case with WeakMap appears to be 4 times slower (13ms vs 51ms). So it is indeed quite slow and I am not sure if we can get tons of input/animation events here. Do you know if it\u0027s possible to use symbols with TS and extend the Event type somehow?",
      "parentUuid": "b14fe860_632d5d6c",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb524cc7_8a07fd0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-19T12:23:59Z",
      "side": 1,
      "message": "TS and symbols are tricky, as we somehow would need to mark the Event type as a map from symbol to Phase. Easiest approach for now would probably be to add a new specific property on the Event directly.",
      "parentUuid": "166bb668_497b848d",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0604908_fe6e89be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-20T05:46:31Z",
      "side": 1,
      "message": "Tim \u0026 Paul, please see the discussion above about performance of weak maps. What would you suggest in this case? 1) adding a property to the Event type? 2) keeping the WeakMap? 3) trying to extend the Event type in TS somehow? ",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c32734a0_c6a11ca6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-10-20T09:45:29Z",
      "side": 1,
      "message": "LGTM",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f6cc609_5f4e381f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2020-10-20T09:59:16Z",
      "side": 1,
      "message": "Let\u0027s choose option 2 for now.",
      "parentUuid": "e0604908_fe6e89be",
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afef632c_8a834aa5",
        "filename": "front_end/timeline_model/TimelineIRModel.js",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-10-19T11:26:19Z",
      "side": 1,
      "message": "nit: Instead of doing Number.MAX_SAFE_INTEGER, we could do:\n\n if (first.endTime \u003d\u003d\u003d undefined) {\n   return false;\n }\n return first.endTime \u003c second.startTime \u0026\u0026 second.startTime \u003c first.endTime + threshold;\n\nSame result, imo more readable, wdyt?",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 210,
        "endChar": 94
      },
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "257c49e3_943872ea",
        "filename": "front_end/timeline_model/TimelineIRModel.js",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1189020
      },
      "writtenOn": "2020-10-20T09:45:29Z",
      "side": 1,
      "message": "+1 to this suggestion.",
      "parentUuid": "afef632c_8a834aa5",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 210,
        "endChar": 94
      },
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "129d88c3_af9a102c",
        "filename": "front_end/timeline_model/TimelineIRModel.js",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1410814
      },
      "writtenOn": "2020-10-20T10:36:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "257c49e3_943872ea",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 210,
        "endChar": 94
      },
      "revId": "27f0de6b5237554d3ac30b2ff1b59354e85ae0c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}