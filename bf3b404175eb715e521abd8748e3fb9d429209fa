{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3e33e180_918bd304",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-10-26T08:51:59Z",
      "side": 1,
      "message": "Code LGTM, but we need some tests. \n\nI\u0027d prefer unit tests but it would be more involved as we don\u0027t have an existing unit test for this view to extend.\n\nYou could add an end-to-end test instead, following the websocket example at https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/test/e2e/network/network-request-view_test.ts;l\u003d209\n\nTo serve a request with a text/event-stream you could have use a .rawresponse file in the resource dir like https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/test/e2e/resources/network/utf-8.rawresponse;l\u003d1",
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af550990_e9a4633b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-10-26T17:51:23Z",
      "side": 1,
      "message": "Very happy to add tests for the clear button and the filter input. \n\nDo you know which build target I need to run to be able to `npm run auto-e2etest` from `/src/third_party/devtools-frontend/src`? At present, it\u0027s failing for me _I think_ because it\u0027s not pulling down node-darwin-arm64. I\u0027m running node 21 if it matters.",
      "parentUuid": "3e33e180_918bd304",
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e147d119_dc78908c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-10-27T06:47:24Z",
      "side": 1,
      "message": "Yeah, `npm run auto-e2etest` should work.",
      "parentUuid": "af550990_e9a4633b",
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2aac726_76bd57aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-11-03T02:02:01Z",
      "side": 1,
      "message": "Update from me - \nWhen I run the above, I get \"OSError: [Errno 2] No such file or directory\" _I think_ when it\u0027s trying to look for this binary: third_party/node/mac/node-darwin-arm64/bin/node. The \"node-darwin-arm64\" path doesn\u0027t exist. In \"mac\", I only have the two sha1 files located in the source.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/third_party/node/mac/\n\nWhen I put a node binary (21.1.0) in that path, I get a bit further:\n```\nninja: Entering directory `out/Default\u0027\nninja: error: loading \u0027build.ninja\u0027: No such file or directory\n[run_test_suite.js] Chrome binary path /Users/cvazac/repos/chromium/src/third_party/devtools-frontend/src/third_party/chrome/chrome-mac/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing is not valid\n[run_test_suite.js] Using Chromium binary /Users/cvazac/repos/chromium/src/third_party/devtools-frontend/src/third_party/chrome/chrome-mac/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing\n[run_test_suite.js] Using target Default\n[run_test_suite.js] Using test suite gen/test/e2e/\n[run_test_suite.js] Failed: Full path to test suite [/Users/cvazac/repos/chromium/src/third_party/devtools-frontend/src/out/Default/gen/test/e2e] does not exist.\n[\u0027third_party/node/mac/node-darwin-arm64/bin/node\u0027, \u0027scripts/test/run_test_suite.js\u0027, \u0027--config\u003dtest/e2e/test-runner-config.json\u0027, \u0027--autoninja\u0027] failed:\n```\n\nThe path to Google Chrome for Testing.app does not exist. It looks to me like I want a `download_chrome_mac` to execute (from /third_party/devtools-frontend/src/DEPS) but maybe no condition is matching - not sure how to debug that. \n\nAny guidance would be greatly appreciated. I\u0027m running the full Chromium checkout if it helps. Thanks!",
      "parentUuid": "e147d119_dc78908c",
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "882a7838_199666e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-11-06T14:44:32Z",
      "side": 1,
      "message": "I see. I guess it would be the easiest to use a standalone devtools checkout. You may try to run `gn gen out/Default` in `third_party/devtools-frontend/src`, which might be enough.",
      "parentUuid": "a2aac726_76bd57aa",
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62de7fcf_bb0e03d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-11-28T21:56:53Z",
      "side": 1,
      "message": "e2e tests added, PTAL when possible - thanks!",
      "parentUuid": "882a7838_199666e4",
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb40aa74_69296367",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-10-26T08:51:59Z",
      "side": 1,
      "message": "Lowecase \u0027a\u0027 please",
      "range": {
        "startLine": 43,
        "startChar": 19,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b654aeef_aec95cb8",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-10-26T17:51:23Z",
      "side": 1,
      "message": "I changed to lowercase. Just FYI, it\u0027s a capital \u0027A\u0027 in the websocket panel.",
      "parentUuid": "cb40aa74_69296367",
      "range": {
        "startLine": 43,
        "startChar": 19,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f90b82_7945ddfe",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-10-26T08:51:59Z",
      "side": 1,
      "message": "It looks like regexp escaping was added to the websockets view recently in the crrev.com/c/4516057 to fix the handling of invalid regexp.\n\nI don\u0027t know how useful would it be to filter the event stream via a regexp as opposed to a plain string.\n\nWe could do one of the following: \n* change the UI label to not mention regexp and keep the escaping\n* wrap the RegExp constructor invocation into a try/catch and simply ignore invalid syntax\n* instead of ignoring invalid syntax, escape the string only if it is an invalid regex\n\nI am leaning towards the latter, but I don\u0027t have a strong opinion here.",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02e23bf5_fb9e048d",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-10-26T17:51:23Z",
      "side": 1,
      "message": "Regex provides a lot of power and it would be great if it was supported. To me, 1416218 was about making sure that invalid user input wouldn\u0027t stop the app from working. I just pushed a try/catch around the RegExp c\u0027tor - the downstream effect is that invalid regex (like \"[{\" without the quotes) will match ALL messages.",
      "parentUuid": "99f90b82_7945ddfe",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f46ce98_37c5c7e6",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-12-07T17:35:20Z",
      "side": 1,
      "message": "Presently, user input that is invalid regex will match on all messages. I think we should match on none. If you agree, I can make the change.",
      "parentUuid": "02e23bf5_fb9e048d",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a24db6a7_4e2e16d7",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2024-01-18T15:23:48Z",
      "side": 1,
      "message": "Sure",
      "parentUuid": "8f46ce98_37c5c7e6",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7646e1d4_594ce209",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2024-01-18T18:10:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a24db6a7_4e2e16d7",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 100
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f16674f9_f0344620",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1511722
      },
      "writtenOn": "2023-10-26T08:51:59Z",
      "side": 1,
      "message": "Let\u0027s drop the leading underscore and remove the comment above",
      "range": {
        "startLine": 223,
        "startChar": 6,
        "endLine": 223,
        "endChar": 26
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f9f007f_b4768c61",
        "filename": "front_end/panels/network/EventSourceMessagesView.ts",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 1264475
      },
      "writtenOn": "2023-10-26T17:51:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f16674f9_f0344620",
      "range": {
        "startLine": 223,
        "startChar": 6,
        "endLine": 223,
        "endChar": 26
      },
      "revId": "bf3b404175eb715e521abd8748e3fb9d429209fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}