{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d1fe28eb_81bab130",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2022-12-08T11:55:20Z",
      "side": 1,
      "message": "Hi Jaro,\n\nThis CL adds a test for restoring breakpoints on instrumentation pauses for source mapped files. PTAL!",
      "revId": "9e96d4a8d798de2bf9befea3bec7bd95d343b080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebfe1cdc_94f1bd90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-12-08T15:45:50Z",
      "side": 1,
      "message": "lgtm modulo some questions",
      "revId": "9e96d4a8d798de2bf9befea3bec7bd95d343b080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "104a9204_8e1db1fd",
        "filename": "test/unittests/front_end/helpers/MockConnection.ts",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-12-08T15:45:50Z",
      "side": 1,
      "message": "Does not this return a function (rather than a promise)?\n\nIt is puzzling that the linter does not complain about the missing return type.",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 50
      },
      "revId": "9e96d4a8d798de2bf9befea3bec7bd95d343b080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9d3c0d4_40897f73",
        "filename": "test/unittests/front_end/helpers/MockScopeChain.ts",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-12-08T15:45:50Z",
      "side": 1,
      "message": "Does this work with just ({})?",
      "range": {
        "startLine": 44,
        "startChar": 73,
        "endLine": 44,
        "endChar": 106
      },
      "revId": "9e96d4a8d798de2bf9befea3bec7bd95d343b080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a863259_2f9f2e0a",
        "filename": "test/unittests/front_end/models/bindings/BreakpointManager_test.ts",
        "patchSetId": 7
      },
      "lineNbr": 694,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-12-08T15:45:50Z",
      "side": 1,
      "message": "As discussed offline, this could be perhaps simplified to \n```\nbackend.responderToBreakpointByUrlRequest(URL, 0).then(r \u003d\u003e r({\n        breakpointId: \u0027BREAK_ID\u0027 as Protocol.Debugger.BreakpointId,\n        locations: [\n          {\n            scriptId: script.scriptId,\n            lineNumber: 0,\n            columnNumber: 9,\n          },\n        ],\n});\n```\n\n(and replace the `Promise.all(..)` with `await breakpoint.refreshInDebugger()`)",
      "range": {
        "startLine": 694,
        "startChar": 4,
        "endLine": 694,
        "endChar": 82
      },
      "revId": "9e96d4a8d798de2bf9befea3bec7bd95d343b080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}