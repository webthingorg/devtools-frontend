{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9981207_b652b29f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-09-09T09:03:49Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "2b1d9cd5c8a90108ab2246531dca55235c282d40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "815ac235_cd28814c",
        "filename": "scripts/eslint_rules/lib/lit_html_host_this.js",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-09-09T09:04:43Z",
      "side": 1,
      "message": "Tim, wdyt about this? I\u0027m wondering about a separate rule to ban the destructuring of `render` from LitHtml calls and then this is not a concern?\n\nOf course we could just look for render() calls (and not this.render()) but I\u0027m worried that render() is quite a generic name. But maybe it\u0027s OK?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "2b1d9cd5c8a90108ab2246531dca55235c282d40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e6967cd_4cea8fa8",
        "filename": "scripts/eslint_rules/lib/lit_html_host_this.js",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-09-09T09:44:29Z",
      "side": 1,
      "message": "Yeah let\u0027s leave this as TODO for now. If we see this pattern emerge (and I don\u0027t think we will), we can revisit.",
      "parentUuid": "815ac235_cd28814c",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "2b1d9cd5c8a90108ab2246531dca55235c282d40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31aaab49_d0b9eeb2",
        "filename": "scripts/eslint_rules/lib/lit_html_host_this.js",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-09-09T09:44:29Z",
      "side": 1,
      "message": "Nit: I think this comma should be after `this`, as the following test case would break:\n\n```ts\nLitHtml.render(someHtml, this.shadow, { renderBefore: foo, }\n```\n\n(see the trailing comma)",
      "range": {
        "startLine": 81,
        "startChar": 53,
        "endLine": 81,
        "endChar": 55
      },
      "revId": "2b1d9cd5c8a90108ab2246531dca55235c282d40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "401ea352_190c7bdd",
        "filename": "scripts/eslint_rules/lib/lit_html_host_this.js",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-09-09T10:26:54Z",
      "side": 1,
      "message": "ESLint handles this OK; it\u0027ll add `, host: this` and end up with the trailing comma after `host: this` but I think that\u0027s what we want as we enforce trailing commas on multiline objects? And if the object is on one line, eslint will fix it, so I don\u0027t think it matters.\n\nAdded a test case covering this - let me know if you\u0027re happy for me to land this.",
      "parentUuid": "31aaab49_d0b9eeb2",
      "range": {
        "startLine": 81,
        "startChar": 53,
        "endLine": 81,
        "endChar": 55
      },
      "revId": "2b1d9cd5c8a90108ab2246531dca55235c282d40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5428a76_8de64322",
        "filename": "scripts/eslint_rules/lib/lit_html_host_this.js",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1365394
      },
      "writtenOn": "2021-09-09T10:29:19Z",
      "side": 1,
      "message": "If the tests passes, all is good ðŸ˜Š",
      "parentUuid": "401ea352_190c7bdd",
      "range": {
        "startLine": 81,
        "startChar": 53,
        "endLine": 81,
        "endChar": 55
      },
      "revId": "2b1d9cd5c8a90108ab2246531dca55235c282d40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}