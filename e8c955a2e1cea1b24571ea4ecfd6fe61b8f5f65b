{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf66ae6_7ee018f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "I loved everything in this change! ðŸŽ‰\nThis would be my explanation for the change, is it correct?\n\nCurrently, `Color` class was being used for 2 purposes:\n* Defining colors in JS so that we can use them dynamically.\n* Parsing the colors from styles and storing them (Only CSS text is used for now)\n\nFor the second purpose, with the introduction of new color syntaxes, users will be able to author colors in color spaces other than sRGB which means some of the core operations in the `Color` class wonâ€™t be meaningful for those colors: converting to `HSL`, `HWB` since their representations in `HSL` or `HWB` is not in-gamut for sRGB. In addition to that, we won\u0027t know if we\u0027re working with a valid sRGB color or not.\n\nSo, AFAIU, in this CL, weâ€™re separating two use cases by renaming the old `Color` class as `Legacy` for colors defined in sRGB color space (with the legacy rgb, rgba, hslâ€¦ syntaxes). Then, weâ€™re defining a new `Color` interface that will be used for the first purpose: parsing \u0026 understanding the colors defined in different syntaxes.\n\nFor each of the different syntaxes, weâ€™re creating a subclass that represents the original color given by the user.\n\nI didn\u0027t understand the reasons for test failures though ðŸ˜ž\n\naaaaand I\u0027ve a few comments (mostly nit and suggestions) and otherwise, this is good to go ðŸ¥³",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0be87a0e_4c891329",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 4
      },
      "lineNbr": 689,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "I didn\u0027t quite understand why we\u0027re clamping L but not `a` or `b`, can you explain? :)",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e120a300_831f1db9",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 4
      },
      "lineNbr": 783,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "Since these methods are not implemented for new syntaxes as well. WDYT of removing this from the `Color` interface but only having them in legacy color so that we\u0027re sure that we\u0027re only using legacy colors for these functions?\n\nAFAIU they are not completely needed right now, as we currently only need to:\n* Parse the color\n* Get the CSS text\n\nfor the new color syntaxes.\n\nIf we feel the need later (for example, while implementing `Spectrum` changes for new colors), we can add these that time. WDYT?",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e752dcef_82a8d200",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 4
      },
      "lineNbr": 883,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "These are not part of the interface anymore I think, so we can remove these :)",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac6d457d_fe9a46f7",
        "filename": "front_end/core/common/Color.ts",
        "patchSetId": 4
      },
      "lineNbr": 894,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "Instead of defining this as `Legacy`, WDYT of defining it as `RGB` so that we won\u0027t feel bad using this class. AFAIU the uses of this class can still be meaningful for defining RGB colors to be used in the code. (background color etc.)",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d4b663_b0b4b005",
        "filename": "front_end/panels/animation/AnimationUI.ts",
        "patchSetId": 4
      },
      "lineNbr": 490,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "I think these can be `Common.Color.Legacy` WDYT?",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b8509b8_ed240819",
        "filename": "front_end/panels/media/TickingFlameChart.ts",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "AFAIU these colors all come from `HEX` strings (See the references for the `color` type in `EventProperties`), maybe to show that we can do some type tricks or use `Common.Color.RGB.fromSpec` etc. WDYT?\n\nSo that we don\u0027t need to do `asLegacyColor()`.\n\nI\u0027m trying to get rid of as many `asLegacyColor` calls as possible ðŸ˜‚",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4530ecb1_5894e2c4",
        "filename": "front_end/ui/legacy/components/color_picker/ContrastDetails.ts",
        "patchSetId": 4
      },
      "lineNbr": 188,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-30T11:17:18Z",
      "side": 1,
      "message": "I actually have a question here... could it be that suggested color is out of gamut for the given color space?\n\nWe might:\n* Either need to do gamut mapping or\n* Return the `Common.Color.Color` in the correct space.\n\n\nWDYT? (I can also tackle this as part of contrast thingies after conversions ðŸ˜Š)",
      "revId": "e8c955a2e1cea1b24571ea4ecfd6fe61b8f5f65b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}