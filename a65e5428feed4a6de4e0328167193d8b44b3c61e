{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ca8fe018_ec4de291",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "this is looking good with some nits and tweaks that I\u0027d like resolved before we land, please üòä\n\nI\u0027d also like the documentation that we started in that google doc to be put into the codebase. It should explain the function of:\n\n1. modifications manager\n2. synthetic events manager\n3. events serializer\n\nAnd how we use them to serialize and deserialize modifications by keys.\n\nI don\u0027t mind if that documentation lands in this CL or in a follow-up, but please ensure it does üòä",
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f175d255_8ef06045",
        "filename": "front_end/models/trace/types/File.ts",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "TraceEventSerializableKey[]",
      "range": {
        "startLine": 36,
        "startChar": 19,
        "endLine": 36,
        "endChar": 25
      },
      "fixSuggestions": [
        {
          "fixId": "e13ad01a_c545b111",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "front_end/models/trace/types/File.ts",
              "range": {
                "startLine": 36,
                "startChar": 0,
                "endLine": 37,
                "endChar": 0
              },
              "replacement": "    hiddenEntries: TraceEventSerializableKey[],\n"
            },
            {
              "path": "front_end/models/trace/types/File.ts",
              "range": {
                "startLine": 38,
                "startChar": 0,
                "endLine": 39,
                "endChar": 0
              },
              "replacement": "    expandableEntries: TraceEventSerializableKey[],\n"
            }
          ]
        }
      ],
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b00fa4c_4566ca76",
        "filename": "front_end/models/trace/types/File.ts",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-06-04T11:29:16Z",
      "side": 1,
      "message": "good catch. Here I\u0027m unsure what we want to do. This type is used directly for the file content, so if we use `TraceEventSerializableKey` we would expect the keys to be stored as an array and not a strings separated by `-` (e.g. [\u0027s\u0027, 1] instead of `s-1`). I thought we should favor a smaller trace file size by storing a single string so this was typed as string. Wdyt?",
      "parentUuid": "f175d255_8ef06045",
      "range": {
        "startLine": 36,
        "startChar": 19,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd72e372_c8a8c3ff",
        "filename": "front_end/panels/timeline/TimelineFlameChartView.test.ts",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "why do we have to call this? Does this create it?",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 86
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9050aa9f_3527d425",
        "filename": "front_end/panels/timeline/TimelineFlameChartView.test.ts",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-06-04T11:29:16Z",
      "side": 1,
      "message": "good catch, I think we should be able to remove these calls (the ones below too), since they do not initialize the manager.",
      "parentUuid": "fd72e372_c8a8c3ff",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 86
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5017f81e_57f75b07",
        "filename": "front_end/panels/timeline/TimelinePanel.ts",
        "patchSetId": 4
      },
      "lineNbr": 1224,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "this is a really nice API and reads well üëç",
      "range": {
        "startLine": 1221,
        "startChar": 0,
        "endLine": 1224,
        "endChar": 41
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd66e6f_8b7ecb6f",
        "filename": "front_end/services/events_serializer/EventsSerializer.test.ts",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "this already exists in `TraceHelpers.ts`",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 20,
        "endChar": 3
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "207023ae_fff847c6",
        "filename": "front_end/services/events_serializer/EventsSerializer.test.ts",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "why do you need to cast here? `eventsSerializer.keyForEvent` should return the type `TraceEventSerializeableKey`",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 108
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da1dbe60_3c7a7223",
        "filename": "front_end/services/events_serializer/EventsSerializer.test.ts",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-06-04T11:29:16Z",
      "side": 1,
      "message": "this is here because the value could be null according to typescript",
      "parentUuid": "207023ae_fff847c6",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 108
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa6963a6_e9f31af2",
        "filename": "front_end/services/events_serializer/EventsSerializer.ts",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "how often will we call this? I\u0027m wondering if we call this a lot during the parsing stage if the checks will be relatively expensive. But if we don\u0027t call this in a loop for all events, it doesn\u0027t matter.",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dc58b17_b0e796b6",
        "filename": "front_end/services/events_serializer/EventsSerializer.ts",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2024-06-04T11:29:16Z",
      "side": 1,
      "message": "this should be called only for the keys found in a file, so it should be relatively cheap.",
      "parentUuid": "aa6963a6_e9f31af2",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89fc2701_90d0b737",
        "filename": "front_end/services/events_serializer/events_serializer.ts",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "are we able to do `export * from \u0027EventsSerializer.js\u0027` here to avoid another level of nesting, or does rollup / our linting complain?",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 9,
        "endChar": 2
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e8af33f_9527823c",
        "filename": "front_end/services/modifications_manager/ModificationsManager.ts",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2024-06-04T09:20:37Z",
      "side": 1,
      "message": "don\u0027t think we need this check: if we are using the entire trace bounds, let\u0027s just grab it direct from the traceParsedData. No need to call into this.",
      "range": {
        "startLine": 57,
        "startChar": 23,
        "endLine": 57,
        "endChar": 108
      },
      "revId": "a65e5428feed4a6de4e0328167193d8b44b3c61e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}