{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88bb2407_165816b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-10-12T13:21:44Z",
      "side": 1,
      "message": "lgtm, really happy with what we ended up overall!",
      "revId": "da70858c02046a55accd20849882185a1e0e0f64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b266fb4_ccc4cca9",
        "filename": "front_end/entrypoints/main/MainImpl.ts",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-10-12T13:21:44Z",
      "side": 1,
      "message": "Drive-by comment: Do we plan to introduce some form of performance metric (e.g. timing histogram) to record how much time we spend in the visual logging code?\n\nI know V8 has a bunch of them: https://source.chromium.org/chromium/chromium/src/+/main:v8/src/logging/counters-definitions.h;l\u003d152;drc\u003d60fdd54c9168dcbc745a5f70cabc2232b0bd17fe",
      "range": {
        "startLine": 158,
        "startChar": 23,
        "endLine": 158,
        "endChar": 35
      },
      "revId": "da70858c02046a55accd20849882185a1e0e0f64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a156872_b871adb1",
        "filename": "front_end/panels/accessibility/AXBreadcrumbsPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 450,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2023-10-12T13:21:44Z",
      "side": 1,
      "message": "One more idea for the user-facing API which I\u0027m not so sure about though: We could extend the `makeConfigStringBuilder` returned closer to optionally take an `Element` so this would read instead:\n\n```\nVisualLogging.treeItem(this.elementInternal).track({click: true});\n```\n\nAlternatively we add `set`/`log` to the builder:\n\n```\nVisualLogging.treeItem().track({click: true}).set(this.elementInternal);\n```\n\nAgain, I\u0027m not sure, maybe one of you has a better suggestion?",
      "range": {
        "startLine": 450,
        "startChar": 4,
        "endLine": 450,
        "endChar": 99
      },
      "revId": "da70858c02046a55accd20849882185a1e0e0f64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd578a6_e456d358",
        "filename": "front_end/panels/accessibility/AXBreadcrumbsPane.ts",
        "patchSetId": 3
      },
      "lineNbr": 450,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2023-10-12T13:29:58Z",
      "side": 1,
      "message": "I think I\u0027d prefer keeping it only returning a string and not doing anything particular on the element.\n\nMaybe to get rid of template literal usage, we can add a `build` method or explicitly call `toString()` method?",
      "parentUuid": "6a156872_b871adb1",
      "range": {
        "startLine": 450,
        "startChar": 4,
        "endLine": 450,
        "endChar": 99
      },
      "revId": "da70858c02046a55accd20849882185a1e0e0f64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "da70858c02046a55accd20849882185a1e0e0f64",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "da70858c02046a55accd20849882185a1e0e0f64",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "da70858c02046a55accd20849882185a1e0e0f64",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "da70858c02046a55accd20849882185a1e0e0f64",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}