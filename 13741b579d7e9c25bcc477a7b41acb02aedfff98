{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "028a3e6f_4e4a1a88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-13T14:28:04Z",
      "side": 1,
      "message": "LGTM with two comments :)",
      "revId": "13741b579d7e9c25bcc477a7b41acb02aedfff98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bb5ab01_bad5ae10",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 6
      },
      "lineNbr": 1568,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-13T14:28:04Z",
      "side": 1,
      "message": "Since we\u0027re here, WDYT of moving this to a utility class and writing unit tests for it? ðŸ˜…\n\nThat way, we can assert that we expect tasks to be executed in fifo order. Then, we won\u0027t need to test this StylesSidebarPane behavior of rendering CSS styles in incorrect order.\n\n(Sorry for mentioning more work instead of just fixing this particular test/issue ðŸ˜‚)",
      "revId": "13741b579d7e9c25bcc477a7b41acb02aedfff98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b98ea55_7df240c8",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 6
      },
      "lineNbr": 1568,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-14T10:27:19Z",
      "side": 1,
      "message": "I\u0027m actually unsure about this. We already have e2e test coverage. Having additional unittest coverage here would be great. Proper coverage would however mean running out the timeouts, so we\u0027d have to sleep in the test for a couple hundred milliseconds. That feels terrible to me. Do you see a better way?",
      "parentUuid": "3bb5ab01_bad5ae10",
      "revId": "13741b579d7e9c25bcc477a7b41acb02aedfff98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7502e6_db1016ad",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 6
      },
      "lineNbr": 1582,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2022-11-13T14:28:04Z",
      "side": 1,
      "message": "WDYT of removing `timeout` from the public API and using it always as 100? (As it is the case right now for all the callers)\n\n\nThe reason I\u0027m asking is, this change slightly changes the semantics of `schedule` call with `timeout` which might result in hard to find, flaky bugs.\n\n`schedule(task1, 500)` and `schedule(task2, 100)` results in two tasks scheduled with `task1` having deadline of `500ms` to run and `task2` having deadline of `100ms` to run.\n\nThough, with this change, it doesn\u0027t mean that `task2` will be definitely run after 100ms since its deadline now used to schedule for the `task1`.\n\nSince we\u0027re always using a constant timeout for all things above, we can assign it to constant and don\u0027t think about the likelihood of the issue above.",
      "revId": "13741b579d7e9c25bcc477a7b41acb02aedfff98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb855767_f8165953",
        "filename": "front_end/panels/elements/StylesSidebarPane.ts",
        "patchSetId": 6
      },
      "lineNbr": 1582,
      "author": {
        "id": 1372423
      },
      "writtenOn": "2022-11-14T10:27:19Z",
      "side": 1,
      "message": "Very good suggestion, thanks!",
      "parentUuid": "6a7502e6_db1016ad",
      "revId": "13741b579d7e9c25bcc477a7b41acb02aedfff98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}