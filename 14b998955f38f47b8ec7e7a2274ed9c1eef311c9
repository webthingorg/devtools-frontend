{
  "comments": [
    {
      "key": {
        "uuid": "9a9d4b14_815f8413",
        "filename": "front_end/bindings/DebuggerWorkspaceBinding.js",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2020-05-26T06:41:48Z",
      "side": 1,
      "message": "Don\u0027t we await the Promise in line 244, such that we only return an array? If so, this would propagate to the other functions too.",
      "revId": "14b998955f38f47b8ec7e7a2274ed9c1eef311c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e46a0214_770ea645",
        "filename": "front_end/bindings/DebuggerWorkspaceBinding.js",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2020-05-26T07:40:38Z",
      "side": 1,
      "message": "This is an `async function` now, and as such always returns a `Promise` now (implicitly).",
      "parentUuid": "9a9d4b14_815f8413",
      "revId": "14b998955f38f47b8ec7e7a2274ed9c1eef311c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b903e88_9b561f94",
        "filename": "front_end/bindings/DebuggerWorkspaceBinding.js",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2020-05-26T08:14:02Z",
      "side": 1,
      "message": "Ok, thanks for the clarification!",
      "parentUuid": "e46a0214_770ea645",
      "revId": "14b998955f38f47b8ec7e7a2274ed9c1eef311c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "268fdaa0_148e7626",
        "filename": "front_end/bindings/DebuggerWorkspaceBinding.js",
        "patchSetId": 5
      },
      "lineNbr": 453,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-05-27T04:56:42Z",
      "side": 1,
      "message": "If this functions really will become async, we can fold it back into _uiLocationToRawLocations again.\n\nBeware though, as we have noticed, this opens up another call-tree that requires asyncification.",
      "range": {
        "startLine": 453,
        "startChar": 8,
        "endLine": 453,
        "endChar": 47
      },
      "revId": "14b998955f38f47b8ec7e7a2274ed9c1eef311c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ef3e6f7_a3239fde",
        "filename": "front_end/formatter/SourceFormatter.js",
        "patchSetId": 5
      },
      "lineNbr": 300,
      "author": {
        "id": 1323977
      },
      "writtenOn": "2020-05-27T04:50:58Z",
      "side": 1,
      "message": "We explicitly introduced this function because it took a non-async path. That means we explicitly didn\u0027t want an await here as _scriptsForUISourceCode opens up another tree of call-sites that need asyncification.",
      "range": {
        "startLine": 300,
        "startChar": 32,
        "endLine": 300,
        "endChar": 80
      },
      "revId": "14b998955f38f47b8ec7e7a2274ed9c1eef311c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}