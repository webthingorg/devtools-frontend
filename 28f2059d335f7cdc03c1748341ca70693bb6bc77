{
  "comments": [
    {
      "key": {
        "uuid": "c85324ca_31869079",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2020-04-30T04:38:48Z",
      "side": 1,
      "message": "Suggestion: Disallow setting breakpoints on unbreakable lines in Wasm Disassembly",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b434fc97_5a099738",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-05-01T00:02:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c85324ca_31869079",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36ce4496_ee68d7f7",
        "filename": "front_end/sdk/Script.js",
        "patchSetId": 13
      },
      "lineNbr": 372,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-04-30T15:28:06Z",
      "side": 1,
      "message": "Optional: I\u0027m inclined to suggest (first + last) \u003e\u003e 1 so I know we\u0027re not using floating point math, but I\u0027m not sure if that\u0027s JS style and it\u0027s not particularly performance critical.",
      "range": {
        "startLine": 372,
        "startChar": 18,
        "endLine": 372,
        "endChar": 48
      },
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9c52061_566f3a9b",
        "filename": "front_end/sdk/Script.js",
        "patchSetId": 13
      },
      "lineNbr": 372,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-05-01T00:02:32Z",
      "side": 1,
      "message": "I did a search and saw that  \u003e\u003e 1 was used in many places in devtools so I would go with it ðŸ˜Š thanks",
      "parentUuid": "36ce4496_ee68d7f7",
      "range": {
        "startLine": 372,
        "startChar": 18,
        "endLine": 372,
        "endChar": 48
      },
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1702356e_f033d9ad",
        "filename": "front_end/sources/DebuggerPlugin.js",
        "patchSetId": 13
      },
      "lineNbr": 1542,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-04-30T15:28:06Z",
      "side": 1,
      "message": "I\u0027m concerned that we are coupling previously uncoupled parts of the code. Maybe instead of getting the Script here, we can change the code to provide no raw locations for unbreakable locations? I don\u0027t think that would break any existing use case.\n\nSo in this case you would modify Script.wasmByteLocation to check if the byte location is within a function and only return a location if it is, and then we don\u0027t need this function and don\u0027t need to interact with the Script object from the DebuggerPlugin, we would just not get a location if it isn\u0027t breakable. Does that make sense?",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a44dcadb_654eb0fd",
        "filename": "front_end/sources/DebuggerPlugin.js",
        "patchSetId": 13
      },
      "lineNbr": 1542,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-05-01T02:31:58Z",
      "side": 1,
      "message": "Sounds like a reasonable idea @Eric. But when I change Script.wasmByteLocation to return nothing, I can still set breakpoint (of course it does not break but still display in the UI).\nThat means it would require to change some more logic ðŸ˜Š",
      "parentUuid": "1702356e_f033d9ad",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7578d6da_7eedcad4",
        "filename": "front_end/sources/DebuggerPlugin.js",
        "patchSetId": 13
      },
      "lineNbr": 1542,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-05-04T12:37:44Z",
      "side": 1,
      "message": "Hmm, that probably means it is falling back to some other binding. Try putting a breakpoint in DefaultScriptMapping.rawLocationToUILocation to see if you are hitting it and if so have it return null for Wasm scripts.",
      "parentUuid": "a44dcadb_654eb0fd",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13821d9a_cb4831a1",
        "filename": "front_end/sources/DebuggerPlugin.js",
        "patchSetId": 13
      },
      "lineNbr": 1542,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-05-04T17:52:45Z",
      "side": 1,
      "message": "It doesn\u0027t hit ðŸ˜ž",
      "parentUuid": "7578d6da_7eedcad4",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82d29ffc_4e491b48",
        "filename": "front_end/sources/DebuggerPlugin.js",
        "patchSetId": 13
      },
      "lineNbr": 1542,
      "author": {
        "id": 1369666
      },
      "writtenOn": "2020-05-05T17:27:20Z",
      "side": 1,
      "message": "On second thought it appears that this class already interacts with Script objects for other reasons so perhaps my concern was misplaced.",
      "parentUuid": "13821d9a_cb4831a1",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e3fd380_9033f636",
        "filename": "front_end/sources/DebuggerPlugin.js",
        "patchSetId": 13
      },
      "lineNbr": 1542,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-05-05T17:36:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "82d29ffc_4e491b48",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8016368_89669f63",
        "filename": "test/e2e/sources/debug-raw-wasm_test.ts",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1396836
      },
      "writtenOn": "2020-04-30T04:38:48Z",
      "side": 1,
      "message": "nit: \"on\" non-breakable line",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e81efa5_2775b514",
        "filename": "test/e2e/sources/debug-raw-wasm_test.ts",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-05-01T00:02:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8016368_89669f63",
      "revId": "28f2059d335f7cdc03c1748341ca70693bb6bc77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}