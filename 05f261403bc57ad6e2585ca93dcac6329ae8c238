{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "10c952be_bf235d74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-11-25T05:46:28Z",
      "side": 1,
      "message": "Thanks for the quick fix. LGTM",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88693580_0f3ec67a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-11-26T10:48:43Z",
      "side": 1,
      "message": "Please could you expand for my benefit what the issue with the original code was? I think I\u0027m missing the context here to understand.\n\nI looked up KeyboardEvent.code, as I\u0027m not familiar, and mdn says:\n\n\u003e This property is useful when you want to handle keys based on their physical positions on the input device rather than the characters associated with those keys; this is especially common when writing code to handle input for games that simulate a gamepad-like environment using keys on the keyboard. Be aware, however, that you can\u0027t use the value reported by KeyboardEvent.code to determine the character generated by the keystroke, because the keycode\u0027s name may not match the actual character that\u0027s printed on the key or that\u0027s generated by the computer when the key is pressed.\n\nWhich doesn\u0027t sound necessarily what we want - but is it in this case? \n\nThanks!",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}