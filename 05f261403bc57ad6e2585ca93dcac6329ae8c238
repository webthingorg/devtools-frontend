{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "10c952be_bf235d74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-11-25T05:46:28Z",
      "side": 1,
      "message": "Thanks for the quick fix. LGTM",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88693580_0f3ec67a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-11-26T10:48:43Z",
      "side": 1,
      "message": "Please could you expand for my benefit what the issue with the original code was? I think I\u0027m missing the context here to understand.\n\nI looked up KeyboardEvent.code, as I\u0027m not familiar, and mdn says:\n\n\u003e This property is useful when you want to handle keys based on their physical positions on the input device rather than the characters associated with those keys; this is especially common when writing code to handle input for games that simulate a gamepad-like environment using keys on the keyboard. Be aware, however, that you can\u0027t use the value reported by KeyboardEvent.code to determine the character generated by the keystroke, because the keycode\u0027s name may not match the actual character that\u0027s printed on the key or that\u0027s generated by the computer when the key is pressed.\n\nWhich doesn\u0027t sound necessarily what we want - but is it in this case? \n\nThanks!",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30e6a660_56737c31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2021-11-26T11:43:03Z",
      "side": 1,
      "message": "Hi Jack, thanks for the quick review! :)\n\nThe original issue was, the shortcut was not getting triggered in Mac because we were checking a wrong combination of keys.\n\n`event.key` property takes modification keys and other things like locale and keyboard layout into consideration. Essentially, AFAIU, it is useful when you care about the character that needs to be printed (from here[1] as well).\n\nIn our use case, we want the shortcut to be triggered when a specific key combination on the physical keyboard is pressed and not when a specific character is printed on the screen.\n\nAs an example, we can take the `Cmd + [` shortcut in devtools that focuses on the previous panel. In Turkish - Q keyboard layout, the key combination that triggers the shortcut prints the \"ğ\" character and the related `event.key` is `ğ` and the `event.code` is `BracketLeft`.\n\nHowever, in the Turkish - Q Legacy keyboard layout, the key combination that triggers the focus previous panel shortcut has `[` as the `event.key` and the `event.code` is still `BracketLeft`. So if we depend on `event.key` and say that it is triggered on `[` we’ll break that shortcut in Turkish - Q keyboard layout.\n\nHere we want `Cmd + Alt + [` to trigger the expand/collapse shortcut in search panel, so similarly, it shouldn’t depend on the `event.key` property but should depend on the `event.code`. WDYT?\n\n[1]: https://developers.google.com/web/updates/2016/04/keyboardevent-keys-codes",
      "parentUuid": "88693580_0f3ec67a",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b780da8_8b0a50be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1396442
      },
      "writtenOn": "2021-11-26T11:55:34Z",
      "side": 1,
      "message": "Hey, thanks for the clarification, that\u0027s really useful and totally understand now.\n\nI wonder if we could add some form of your comment above into the code as a comment? Else I can see other devs in the future wondering the same thing I was. Then, LGTM! Thanks!",
      "parentUuid": "30e6a660_56737c31",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71c43e09_7dd7501c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524702
      },
      "writtenOn": "2021-11-26T13:46:04Z",
      "side": 1,
      "message": "Added a comment on why we use `event.code` instead of `event.key`, can you review it again and reapprove if it makes sense? :)\n\nThank you!",
      "parentUuid": "2b780da8_8b0a50be",
      "revId": "05f261403bc57ad6e2585ca93dcac6329ae8c238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}