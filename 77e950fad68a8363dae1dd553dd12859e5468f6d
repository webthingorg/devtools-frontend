{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9555b32c_8149d91c",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 9
      },
      "lineNbr": 203,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-09-18T20:07:36Z",
      "side": 1,
      "message": "nit: slight preference to doing this sorting in the UI as well",
      "revId": "77e950fad68a8363dae1dd553dd12859e5468f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "387fbc33_e3940dd2",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 9
      },
      "lineNbr": 203,
      "author": {
        "id": 1468649
      },
      "writtenOn": "2024-09-18T20:10:59Z",
      "side": 1,
      "message": "yeah was going a bit back \u0026 forth about doing this in the UI instead. One of my reasonings for having it here instead is so that this isn\u0027t sorted every time the UI renders. but wdyt?",
      "parentUuid": "9555b32c_8149d91c",
      "revId": "77e950fad68a8363dae1dd553dd12859e5468f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3005169d_22d4a147",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 9
      },
      "lineNbr": 203,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-09-18T20:12:15Z",
      "side": 1,
      "message": "That\u0027s a good point, probably fine how it is then.",
      "parentUuid": "387fbc33_e3940dd2",
      "revId": "77e950fad68a8363dae1dd553dd12859e5468f6d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a DevTools committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-devtools-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-devtools-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-devtools-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "77e950fad68a8363dae1dd553dd12859e5468f6d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "77e950fad68a8363dae1dd553dd12859e5468f6d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "77e950fad68a8363dae1dd553dd12859e5468f6d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}