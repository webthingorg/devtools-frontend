{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e53d2442_9db4596e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 36
      },
      "lineNbr": 0,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-10-19T08:07:44Z",
      "side": 1,
      "message": "Looks great, I have just a couple of questions.",
      "revId": "0182b85a1a8896c4d3c16f155d05f6db800ba034",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f196b55_b042c05a",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 36
      },
      "lineNbr": 674,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-10-19T08:07:44Z",
      "side": 1,
      "message": "Could you please move the findEntry earlier so that the order is the same as in the base version (first find the name entry and only if that succeeds, get the text)?\n\nThis is important because getTextFor can be expensive - it should be avoided if the name lookup fails.",
      "range": {
        "startLine": 669,
        "startChar": 0,
        "endLine": 674,
        "endChar": 0
      },
      "revId": "0182b85a1a8896c4d3c16f155d05f6db800ba034",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "425683ea_1f4bc802",
        "filename": "front_end/models/source_map_scopes/NamesResolver.ts",
        "patchSetId": 36
      },
      "lineNbr": 674,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2022-10-19T10:28:28Z",
      "side": 1,
      "message": "good catch! Done",
      "parentUuid": "4f196b55_b042c05a",
      "range": {
        "startLine": 669,
        "startChar": 0,
        "endLine": 674,
        "endChar": 0
      },
      "revId": "0182b85a1a8896c4d3c16f155d05f6db800ba034",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "752070c3_58d43b09",
        "filename": "front_end/panels/timeline/PerformanceModel.ts",
        "patchSetId": 36
      },
      "lineNbr": 141,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2022-10-19T08:07:44Z",
      "side": 1,
      "message": "Does it make sense to listen when there is no script? Should not this be `script \u0026\u0026 script.sourceMapURL`?",
      "range": {
        "startLine": 141,
        "startChar": 36,
        "endLine": 141,
        "endChar": 66
      },
      "revId": "0182b85a1a8896c4d3c16f155d05f6db800ba034",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02b57d37_c1efd925",
        "filename": "front_end/panels/timeline/PerformanceModel.ts",
        "patchSetId": 36
      },
      "lineNbr": 141,
      "author": {
        "id": 1447167
      },
      "writtenOn": "2022-10-19T10:28:28Z",
      "side": 1,
      "message": "the reasoning behind this is that `debuggerModel.scriptForId` might return null if the script hasn\u0027t been loaded in the frontend via a `Debugger.scriptParsed` event. So this node\u0027s name is potentially \"resolvable\" at this point.",
      "parentUuid": "752070c3_58d43b09",
      "range": {
        "startLine": 141,
        "startChar": 36,
        "endLine": 141,
        "endChar": 66
      },
      "revId": "0182b85a1a8896c4d3c16f155d05f6db800ba034",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}