{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8f0134f8_59c6834e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-06-14T23:02:16Z",
      "side": 1,
      "message": "Hi Michael, please review when you can. Thanks! ",
      "revId": "6a65df183f850ae14c00d560fd7132ea5eaf2d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff8f0a10_5adc3ef5",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1341633
      },
      "writtenOn": "2022-06-15T21:45:00Z",
      "side": 1,
      "message": "We should try avoiding duplicating css code for outlining/hovering/etc. if it exists elsewhere in the codebase.  For example, if we wanted to change the color of a highlight, we would want it to be changed in one place instead of having multiple locations to modify the color.\n\nThe classes we want are in \"inspectorSyntaxHighlight.css\" which is applied broadly across the DevTools, but since we are in a shadow root, we need to inject it to the shadow root element.\n\nCalling ThemeSupport.ThemeSupport.instance().injectHighlightStyleSheets(this.#shadow);\nin ProtocolHandlersView.ts should do the trick here.",
      "revId": "6a65df183f850ae14c00d560fd7132ea5eaf2d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81df60ad_1e199bf4",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1537843
      },
      "writtenOn": "2022-06-17T18:23:58Z",
      "side": 1,
      "message": "Thanks for the suggestion and for pointing that out! Using ThemeSupport worked. My only concern is that when I tried importing ThemeSupport for a previous issue I was told that ThemeSupport is meant for light and dark themes and generally isn\u0027t meant for importing for classes. \n\nI decided to push up this change for now, but I was also given the suggestion to import inspectorSyntaxHighlight.css at the top of the file, and then include it in adoptedStyleSheets array. When I tried this, it causes the Application Pane to crash, so will need more time to look into.",
      "parentUuid": "ff8f0a10_5adc3ef5",
      "revId": "6a65df183f850ae14c00d560fd7132ea5eaf2d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0a0469c_ebd2ce59",
        "filename": "front_end/panels/application/components/protocolHandlersView.css",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1341633
      },
      "writtenOn": "2022-06-15T21:45:00Z",
      "side": 1,
      "message": "Is there a reason we are using \u0027devtools-text-input\u0027 over \u0027harmony-input\u0027 here? I forget if this was a deliberate choice.  It looks like if we use harmony-input, we get the right styling you\u0027re doing here to devtools-text-input.",
      "revId": "6a65df183f850ae14c00d560fd7132ea5eaf2d54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}