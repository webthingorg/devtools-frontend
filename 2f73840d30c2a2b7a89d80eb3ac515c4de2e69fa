{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "48b60103_c848badc",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-07-09T14:06:46Z",
      "side": 1,
      "message": "nit: this cloned graph is created and only used here, do we actually need to reset this?",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1dc09af_f5f79f69",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-07-09T18:57:29Z",
      "side": 1,
      "message": "Yes. \"request\" is not deep cloned. Lantern only ever cloned the nodes.\n\nI clarified this in the `cloneWithRelationships` doc comment.",
      "parentUuid": "48b60103_c848badc",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a6080ab_49a85795",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-07-09T14:06:46Z",
      "side": 1,
      "message": "This array are easily consumed by LH (as table rows), but I don\u0027t think it would be easy to use for RPP since it\u0027s not a map.\n\nWDYT about replacing this with a `requestIdToSummary` map and then just constructing this array in LH? Could even do a `requestIdToWastedMs` since the URL and `totalBytes` are easy to get from the resource anyway.",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bd39df8_a70ee568",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-07-09T18:57:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a6080ab_49a85795",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e377e12b_e6b87ba7",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-07-09T18:58:59Z",
      "side": 1,
      "message": "this is much better, thanks",
      "parentUuid": "9bd39df8_a70ee568",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f547adca_7ecd3fdd",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-07-09T14:06:46Z",
      "side": 1,
      "message": "This only ignores these requests for estimated savings purposes. Could this filter be moved to `generateInsight` so that they are removed from `renderBlockingRequests` completely?",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cd6d03e_674b9400",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-07-09T18:57:29Z",
      "side": 1,
      "message": "I\u0027d like the other one to remain deterministic and not subject to variance. It should be a definitive list of what is render blocking.\n\nLet\u0027s revisit this when we have a concrete need to align them?",
      "parentUuid": "f547adca_7ecd3fdd",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c85b06da_90b0c274",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-07-09T14:06:46Z",
      "side": 1,
      "message": "https://source.chromium.org/chromium/chromium/src/+/main:third_party/devtools-frontend/src/front_end/models/trace/insights/LargestContentfulPaint.ts;l\u003d73;drc\u003dd144795a0e79a3d31173846e6b5e0eaf9d29a7a5;bpv\u003d1;bpt\u003d1?q\u003dlargestcontent\u0026ss\u003dchromium%2Fchromium%2Fsrc:third_party%2Fdevtools-frontend%2Fsrc%2F\n\nLCP is an image if this function returns anything, could probably move that to a shared helper file and reuse.",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e5e68c6_37e2a8b8",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-07-09T18:57:29Z",
      "side": 1,
      "message": "Thanks, I\u0027ll do this in another CL.",
      "parentUuid": "c85b06da_90b0c274",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898d9c9a_2cd54778",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1118499
      },
      "writtenOn": "2024-07-09T19:44:27Z",
      "side": 1,
      "message": "Your comment, put another way, says:\n-  RBR only delays the LCP if the LCP elem is text. \n-  An LCP image doesn\u0027t get delayed by RBR.\n\nThe 2nd part there doesn\u0027t feel correct. I agree that we can\u0027t use the full savings (without handling preload, etc) in the image case.. but.. The paint of the LCP image can definitely be affected.\n\nThe other way i\u0027m looking at this... I really want this insight to be included when filtering to LCP things.",
      "parentUuid": "3e5e68c6_37e2a8b8",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd11119b_42cf08b0",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1378407
      },
      "writtenOn": "2024-07-09T20:08:23Z",
      "side": 1,
      "message": "To be clear, this is what Lighthouse is doing today - LCP savings is zero if an image.\n\nhttps://github.com/GoogleChrome/lighthouse/blob/main/core/audits/byte-efficiency/render-blocking-resources.js#L192\n\nhttps://github.com/GoogleChrome/lighthouse/pull/15694\n\nAdam/Adriana can help us decide by elaborating on this decision.",
      "parentUuid": "898d9c9a_2cd54778",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaca0b9a_eab6e3d2",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-07-09T20:38:31Z",
      "side": 1,
      "message": "\u003e The 2nd part there doesn\u0027t feel correct. I agree that we can\u0027t use the full savings (without handling preload, etc) in the image case.. but.. The paint of the LCP image can definitely be affected.\n\nWe originally had LCP savings included for render blocking originally but it was overestimating the impact on LCP according to Phillip (RBRs don\u0027t affect most pages):\n\nhttps://docs.google.com/document/d/1b1_0JbshYsbSqdBLfY3KQqyDzLBPJMGQ5gACncRb2HU/edit?tab\u003dt.0\n\nThis is not an ideal solution and it we planned to seek better estimates in the future (Something like https://github.com/GoogleChrome/lighthouse/issues/15240) but we agreed that giving a flat 0 was better than overestimating savings in this case.",
      "parentUuid": "bd11119b_42cf08b0",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc68f7ed_d5ded790",
        "filename": "front_end/models/trace/insights/RenderBlocking.ts",
        "patchSetId": 6
      },
      "lineNbr": 129,
      "author": {
        "id": 1534302
      },
      "writtenOn": "2024-07-10T13:19:50Z",
      "side": 1,
      "message": "Edit: (RPRs don\u0027t affect most pages with an image LCP)",
      "parentUuid": "aaca0b9a_eab6e3d2",
      "revId": "2f73840d30c2a2b7a89d80eb3ac515c4de2e69fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}